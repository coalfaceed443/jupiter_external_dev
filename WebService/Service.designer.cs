#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Service
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="jupiter_crm")]
	public partial class ServiceDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertCRM_FormFieldItem(CRM_FormFieldItem instance);
    partial void UpdateCRM_FormFieldItem(CRM_FormFieldItem instance);
    partial void DeleteCRM_FormFieldItem(CRM_FormFieldItem instance);
    partial void InsertCRM_FormFieldAnswer(CRM_FormFieldAnswer instance);
    partial void UpdateCRM_FormFieldAnswer(CRM_FormFieldAnswer instance);
    partial void DeleteCRM_FormFieldAnswer(CRM_FormFieldAnswer instance);
    partial void InsertCRM_AnnualPassCard(CRM_AnnualPassCard instance);
    partial void UpdateCRM_AnnualPassCard(CRM_AnnualPassCard instance);
    partial void DeleteCRM_AnnualPassCard(CRM_AnnualPassCard instance);
    partial void InsertCRM_AnnualPass(CRM_AnnualPass instance);
    partial void UpdateCRM_AnnualPass(CRM_AnnualPass instance);
    partial void DeleteCRM_AnnualPass(CRM_AnnualPass instance);
    partial void InsertCRM_AnnualPassType(CRM_AnnualPassType instance);
    partial void UpdateCRM_AnnualPassType(CRM_AnnualPassType instance);
    partial void DeleteCRM_AnnualPassType(CRM_AnnualPassType instance);
    partial void InsertCRM_RelationCode(CRM_RelationCode instance);
    partial void UpdateCRM_RelationCode(CRM_RelationCode instance);
    partial void DeleteCRM_RelationCode(CRM_RelationCode instance);
    partial void InsertCRM_AttendanceEvent(CRM_AttendanceEvent instance);
    partial void UpdateCRM_AttendanceEvent(CRM_AttendanceEvent instance);
    partial void DeleteCRM_AttendanceEvent(CRM_AttendanceEvent instance);
    partial void InsertCRM_AttendanceLog(CRM_AttendanceLog instance);
    partial void UpdateCRM_AttendanceLog(CRM_AttendanceLog instance);
    partial void DeleteCRM_AttendanceLog(CRM_AttendanceLog instance);
    partial void InsertCRM_AttendancePersonType(CRM_AttendancePersonType instance);
    partial void UpdateCRM_AttendancePersonType(CRM_AttendancePersonType instance);
    partial void DeleteCRM_AttendancePersonType(CRM_AttendancePersonType instance);
    partial void InsertCRM_Calendar(CRM_Calendar instance);
    partial void UpdateCRM_Calendar(CRM_Calendar instance);
    partial void DeleteCRM_Calendar(CRM_Calendar instance);
    partial void InsertCRM_CalendarType(CRM_CalendarType instance);
    partial void UpdateCRM_CalendarType(CRM_CalendarType instance);
    partial void DeleteCRM_CalendarType(CRM_CalendarType instance);
    partial void InsertCRM_AttendanceLogGroup(CRM_AttendanceLogGroup instance);
    partial void UpdateCRM_AttendanceLogGroup(CRM_AttendanceLogGroup instance);
    partial void DeleteCRM_AttendanceLogGroup(CRM_AttendanceLogGroup instance);
    partial void InsertCRM_Venue(CRM_Venue instance);
    partial void UpdateCRM_Venue(CRM_Venue instance);
    partial void DeleteCRM_Venue(CRM_Venue instance);
    partial void InsertCRM_Person(CRM_Person instance);
    partial void UpdateCRM_Person(CRM_Person instance);
    partial void DeleteCRM_Person(CRM_Person instance);
    partial void InsertCRM_Address(CRM_Address instance);
    partial void UpdateCRM_Address(CRM_Address instance);
    partial void DeleteCRM_Address(CRM_Address instance);
    partial void InsertHoldingPen(HoldingPen instance);
    partial void UpdateHoldingPen(HoldingPen instance);
    partial void DeleteHoldingPen(HoldingPen instance);
    partial void InsertCRM_AnnualPassPerson(CRM_AnnualPassPerson instance);
    partial void UpdateCRM_AnnualPassPerson(CRM_AnnualPassPerson instance);
    partial void DeleteCRM_AnnualPassPerson(CRM_AnnualPassPerson instance);
    #endregion
		
		public ServiceDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["sevenstoriesConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ServiceDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServiceDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServiceDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServiceDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<CRM_FormFieldItem> CRM_FormFieldItems
		{
			get
			{
				return this.GetTable<CRM_FormFieldItem>();
			}
		}
		
		internal System.Data.Linq.Table<CRM_FormFieldAnswer> CRM_FormFieldAnswers
		{
			get
			{
				return this.GetTable<CRM_FormFieldAnswer>();
			}
		}
		
		public System.Data.Linq.Table<CRM_AnnualPassCard> CRM_AnnualPassCards
		{
			get
			{
				return this.GetTable<CRM_AnnualPassCard>();
			}
		}
		
		public System.Data.Linq.Table<CRM_AnnualPass> CRM_AnnualPasses
		{
			get
			{
				return this.GetTable<CRM_AnnualPass>();
			}
		}
		
		public System.Data.Linq.Table<CRM_AnnualPassType> CRM_AnnualPassTypes
		{
			get
			{
				return this.GetTable<CRM_AnnualPassType>();
			}
		}
		
		public System.Data.Linq.Table<CRM_RelationCode> CRM_RelationCodes
		{
			get
			{
				return this.GetTable<CRM_RelationCode>();
			}
		}
		
		public System.Data.Linq.Table<CRM_AttendanceEvent> CRM_AttendanceEvents
		{
			get
			{
				return this.GetTable<CRM_AttendanceEvent>();
			}
		}
		
		public System.Data.Linq.Table<CRM_AttendanceLog> CRM_AttendanceLogs
		{
			get
			{
				return this.GetTable<CRM_AttendanceLog>();
			}
		}
		
		public System.Data.Linq.Table<CRM_AttendancePersonType> CRM_AttendancePersonTypes
		{
			get
			{
				return this.GetTable<CRM_AttendancePersonType>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Calendar> CRM_Calendars
		{
			get
			{
				return this.GetTable<CRM_Calendar>();
			}
		}
		
		public System.Data.Linq.Table<CRM_CalendarType> CRM_CalendarTypes
		{
			get
			{
				return this.GetTable<CRM_CalendarType>();
			}
		}
		
		public System.Data.Linq.Table<CRM_AttendanceLogGroup> CRM_AttendanceLogGroups
		{
			get
			{
				return this.GetTable<CRM_AttendanceLogGroup>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Venue> CRM_Venues
		{
			get
			{
				return this.GetTable<CRM_Venue>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Person> CRM_Persons
		{
			get
			{
				return this.GetTable<CRM_Person>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Address> CRM_Addresses
		{
			get
			{
				return this.GetTable<CRM_Address>();
			}
		}
		
		public System.Data.Linq.Table<HoldingPen> HoldingPens
		{
			get
			{
				return this.GetTable<HoldingPen>();
			}
		}
		
		public System.Data.Linq.Table<CRM_AnnualPassPerson> CRM_AnnualPassPersons
		{
			get
			{
				return this.GetTable<CRM_AnnualPassPerson>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _CountryCode;
		
		private string _CurrencyCode;
		
		private int _CountryZoneID;
		
		private bool _IsActive;
		
		private EntitySet<CRM_Address> _CRM_Addresses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    partial void OnCurrencyCodeChanging(string value);
    partial void OnCurrencyCodeChanged();
    partial void OnCountryZoneIDChanging(int value);
    partial void OnCountryZoneIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Country()
		{
			this._CRM_Addresses = new EntitySet<CRM_Address>(new Action<CRM_Address>(this.attach_CRM_Addresses), new Action<CRM_Address>(this.detach_CRM_Addresses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyCode", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string CurrencyCode
		{
			get
			{
				return this._CurrencyCode;
			}
			set
			{
				if ((this._CurrencyCode != value))
				{
					this.OnCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyCode = value;
					this.SendPropertyChanged("CurrencyCode");
					this.OnCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryZoneID", DbType="Int NOT NULL")]
		public int CountryZoneID
		{
			get
			{
				return this._CountryZoneID;
			}
			set
			{
				if ((this._CountryZoneID != value))
				{
					this.OnCountryZoneIDChanging(value);
					this.SendPropertyChanging();
					this._CountryZoneID = value;
					this.SendPropertyChanged("CountryZoneID");
					this.OnCountryZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_CRM_Address", Storage="_CRM_Addresses", ThisKey="ID", OtherKey="CountryID")]
		public EntitySet<CRM_Address> CRM_Addresses
		{
			get
			{
				return this._CRM_Addresses;
			}
			set
			{
				this._CRM_Addresses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_Addresses(CRM_Address entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_CRM_Addresses(CRM_Address entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_FormFieldItem")]
	public partial class CRM_FormFieldItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_FormFieldID;
		
		private string _Label;
		
		private int _OrderNo;
		
		private bool _IsActive;
		
		private bool _IsArchived;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_FormFieldIDChanging(int value);
    partial void OnCRM_FormFieldIDChanged();
    partial void OnLabelChanging(string value);
    partial void OnLabelChanged();
    partial void OnOrderNoChanging(int value);
    partial void OnOrderNoChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    #endregion
		
		public CRM_FormFieldItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_FormFieldID", DbType="Int NOT NULL")]
		public int CRM_FormFieldID
		{
			get
			{
				return this._CRM_FormFieldID;
			}
			set
			{
				if ((this._CRM_FormFieldID != value))
				{
					this.OnCRM_FormFieldIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_FormFieldID = value;
					this.SendPropertyChanged("CRM_FormFieldID");
					this.OnCRM_FormFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="Int NOT NULL")]
		public int OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_FormFieldAnswer")]
	internal partial class CRM_FormFieldAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_FormFieldID;
		
		private string _TargetReference;
		
		private string _Answer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_FormFieldIDChanging(int value);
    partial void OnCRM_FormFieldIDChanged();
    partial void OnTargetReferenceChanging(string value);
    partial void OnTargetReferenceChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    #endregion
		
		public CRM_FormFieldAnswer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_FormFieldID", DbType="Int NOT NULL")]
		public int CRM_FormFieldID
		{
			get
			{
				return this._CRM_FormFieldID;
			}
			set
			{
				if ((this._CRM_FormFieldID != value))
				{
					this.OnCRM_FormFieldIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_FormFieldID = value;
					this.SendPropertyChanged("CRM_FormFieldID");
					this.OnCRM_FormFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TargetReference
		{
			get
			{
				return this._TargetReference;
			}
			set
			{
				if ((this._TargetReference != value))
				{
					this.OnTargetReferenceChanging(value);
					this.SendPropertyChanging();
					this._TargetReference = value;
					this.SendPropertyChanged("TargetReference");
					this.OnTargetReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_AnnualPassCard")]
	public partial class CRM_AnnualPassCard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MembershipNumber;
		
		private EntitySet<CRM_AnnualPass> _CRM_AnnualPasses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMembershipNumberChanging(int value);
    partial void OnMembershipNumberChanged();
    #endregion
		
		public CRM_AnnualPassCard()
		{
			this._CRM_AnnualPasses = new EntitySet<CRM_AnnualPass>(new Action<CRM_AnnualPass>(this.attach_CRM_AnnualPasses), new Action<CRM_AnnualPass>(this.detach_CRM_AnnualPasses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MembershipNumber", DbType="Int NOT NULL")]
		public int MembershipNumber
		{
			get
			{
				return this._MembershipNumber;
			}
			set
			{
				if ((this._MembershipNumber != value))
				{
					this.OnMembershipNumberChanging(value);
					this.SendPropertyChanging();
					this._MembershipNumber = value;
					this.SendPropertyChanged("MembershipNumber");
					this.OnMembershipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_AnnualPassCard_CRM_AnnualPass", Storage="_CRM_AnnualPasses", ThisKey="ID", OtherKey="CRM_AnnualPassCardID")]
		public EntitySet<CRM_AnnualPass> CRM_AnnualPasses
		{
			get
			{
				return this._CRM_AnnualPasses;
			}
			set
			{
				this._CRM_AnnualPasses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_AnnualPasses(CRM_AnnualPass entity)
		{
			this.SendPropertyChanging();
			entity.CRM_AnnualPassCard = this;
		}
		
		private void detach_CRM_AnnualPasses(CRM_AnnualPass entity)
		{
			this.SendPropertyChanging();
			entity.CRM_AnnualPassCard = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_AnnualPass")]
	public partial class CRM_AnnualPass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_AnnualPassCardID;
		
		private int _CRM_AnnualPassTypeID;
		
		private decimal _AmountPaid;
		
		private string _DiscountApplied;
		
		private string _PrimaryContactReference;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _ExpiryDate;
		
		private bool _IsPending;
		
		private bool _IsArchived;
		
		private System.Nullable<int> _CRM_OfferID;
		
		private string _Reference;
		
		private byte _PaymentMethod;
		
		private EntitySet<CRM_AnnualPassPerson> _CRM_AnnualPassPersons;
		
		private EntityRef<CRM_AnnualPassCard> _CRM_AnnualPassCard;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_AnnualPassCardIDChanging(int value);
    partial void OnCRM_AnnualPassCardIDChanged();
    partial void OnCRM_AnnualPassTypeIDChanging(int value);
    partial void OnCRM_AnnualPassTypeIDChanged();
    partial void OnAmountPaidChanging(decimal value);
    partial void OnAmountPaidChanged();
    partial void OnDiscountAppliedChanging(string value);
    partial void OnDiscountAppliedChanged();
    partial void OnPrimaryContactReferenceChanging(string value);
    partial void OnPrimaryContactReferenceChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnExpiryDateChanging(System.DateTime value);
    partial void OnExpiryDateChanged();
    partial void OnIsPendingChanging(bool value);
    partial void OnIsPendingChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    partial void OnCRM_OfferIDChanging(System.Nullable<int> value);
    partial void OnCRM_OfferIDChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnPaymentMethodChanging(byte value);
    partial void OnPaymentMethodChanged();
    #endregion
		
		public CRM_AnnualPass()
		{
			this._CRM_AnnualPassPersons = new EntitySet<CRM_AnnualPassPerson>(new Action<CRM_AnnualPassPerson>(this.attach_CRM_AnnualPassPersons), new Action<CRM_AnnualPassPerson>(this.detach_CRM_AnnualPassPersons));
			this._CRM_AnnualPassCard = default(EntityRef<CRM_AnnualPassCard>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_AnnualPassCardID", DbType="Int NOT NULL")]
		public int CRM_AnnualPassCardID
		{
			get
			{
				return this._CRM_AnnualPassCardID;
			}
			set
			{
				if ((this._CRM_AnnualPassCardID != value))
				{
					if (this._CRM_AnnualPassCard.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_AnnualPassCardIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_AnnualPassCardID = value;
					this.SendPropertyChanged("CRM_AnnualPassCardID");
					this.OnCRM_AnnualPassCardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_AnnualPassTypeID", DbType="Int NOT NULL")]
		public int CRM_AnnualPassTypeID
		{
			get
			{
				return this._CRM_AnnualPassTypeID;
			}
			set
			{
				if ((this._CRM_AnnualPassTypeID != value))
				{
					this.OnCRM_AnnualPassTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_AnnualPassTypeID = value;
					this.SendPropertyChanged("CRM_AnnualPassTypeID");
					this.OnCRM_AnnualPassTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountPaid", DbType="Money NOT NULL")]
		public decimal AmountPaid
		{
			get
			{
				return this._AmountPaid;
			}
			set
			{
				if ((this._AmountPaid != value))
				{
					this.OnAmountPaidChanging(value);
					this.SendPropertyChanging();
					this._AmountPaid = value;
					this.SendPropertyChanged("AmountPaid");
					this.OnAmountPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountApplied", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string DiscountApplied
		{
			get
			{
				return this._DiscountApplied;
			}
			set
			{
				if ((this._DiscountApplied != value))
				{
					this.OnDiscountAppliedChanging(value);
					this.SendPropertyChanging();
					this._DiscountApplied = value;
					this.SendPropertyChanged("DiscountApplied");
					this.OnDiscountAppliedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryContactReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PrimaryContactReference
		{
			get
			{
				return this._PrimaryContactReference;
			}
			set
			{
				if ((this._PrimaryContactReference != value))
				{
					this.OnPrimaryContactReferenceChanging(value);
					this.SendPropertyChanging();
					this._PrimaryContactReference = value;
					this.SendPropertyChanged("PrimaryContactReference");
					this.OnPrimaryContactReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime NOT NULL")]
		public System.DateTime ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPending", DbType="Bit NOT NULL")]
		public bool IsPending
		{
			get
			{
				return this._IsPending;
			}
			set
			{
				if ((this._IsPending != value))
				{
					this.OnIsPendingChanging(value);
					this.SendPropertyChanging();
					this._IsPending = value;
					this.SendPropertyChanged("IsPending");
					this.OnIsPendingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_OfferID", DbType="Int")]
		public System.Nullable<int> CRM_OfferID
		{
			get
			{
				return this._CRM_OfferID;
			}
			set
			{
				if ((this._CRM_OfferID != value))
				{
					this.OnCRM_OfferIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_OfferID = value;
					this.SendPropertyChanged("CRM_OfferID");
					this.OnCRM_OfferIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(21)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethod", DbType="TinyInt NOT NULL")]
		public byte PaymentMethod
		{
			get
			{
				return this._PaymentMethod;
			}
			set
			{
				if ((this._PaymentMethod != value))
				{
					this.OnPaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethod = value;
					this.SendPropertyChanged("PaymentMethod");
					this.OnPaymentMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_AnnualPass_CRM_AnnualPassPerson", Storage="_CRM_AnnualPassPersons", ThisKey="ID", OtherKey="CRM_AnnualPassID")]
		public EntitySet<CRM_AnnualPassPerson> CRM_AnnualPassPersons
		{
			get
			{
				return this._CRM_AnnualPassPersons;
			}
			set
			{
				this._CRM_AnnualPassPersons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_AnnualPassCard_CRM_AnnualPass", Storage="_CRM_AnnualPassCard", ThisKey="CRM_AnnualPassCardID", OtherKey="ID", IsForeignKey=true)]
		public CRM_AnnualPassCard CRM_AnnualPassCard
		{
			get
			{
				return this._CRM_AnnualPassCard.Entity;
			}
			set
			{
				CRM_AnnualPassCard previousValue = this._CRM_AnnualPassCard.Entity;
				if (((previousValue != value) 
							|| (this._CRM_AnnualPassCard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_AnnualPassCard.Entity = null;
						previousValue.CRM_AnnualPasses.Remove(this);
					}
					this._CRM_AnnualPassCard.Entity = value;
					if ((value != null))
					{
						value.CRM_AnnualPasses.Add(this);
						this._CRM_AnnualPassCardID = value.ID;
					}
					else
					{
						this._CRM_AnnualPassCardID = default(int);
					}
					this.SendPropertyChanged("CRM_AnnualPassCard");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_AnnualPassPersons(CRM_AnnualPassPerson entity)
		{
			this.SendPropertyChanging();
			entity.CRM_AnnualPass = this;
		}
		
		private void detach_CRM_AnnualPassPersons(CRM_AnnualPassPerson entity)
		{
			this.SendPropertyChanging();
			entity.CRM_AnnualPass = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_AnnualPassType")]
	public partial class CRM_AnnualPassType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _IsArchived;
		
		private decimal _DefaultPrice;
		
		private bool _IsWebsite;
		
		private bool _IsJoint;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    partial void OnDefaultPriceChanging(decimal value);
    partial void OnDefaultPriceChanged();
    partial void OnIsWebsiteChanging(bool value);
    partial void OnIsWebsiteChanged();
    partial void OnIsJointChanging(bool value);
    partial void OnIsJointChanged();
    #endregion
		
		public CRM_AnnualPassType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultPrice", DbType="Money NOT NULL")]
		public decimal DefaultPrice
		{
			get
			{
				return this._DefaultPrice;
			}
			set
			{
				if ((this._DefaultPrice != value))
				{
					this.OnDefaultPriceChanging(value);
					this.SendPropertyChanging();
					this._DefaultPrice = value;
					this.SendPropertyChanged("DefaultPrice");
					this.OnDefaultPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWebsite", DbType="Bit NOT NULL")]
		public bool IsWebsite
		{
			get
			{
				return this._IsWebsite;
			}
			set
			{
				if ((this._IsWebsite != value))
				{
					this.OnIsWebsiteChanging(value);
					this.SendPropertyChanging();
					this._IsWebsite = value;
					this.SendPropertyChanged("IsWebsite");
					this.OnIsWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsJoint", DbType="Bit NOT NULL")]
		public bool IsJoint
		{
			get
			{
				return this._IsJoint;
			}
			set
			{
				if ((this._IsJoint != value))
				{
					this.OnIsJointChanging(value);
					this.SendPropertyChanging();
					this._IsJoint = value;
					this.SendPropertyChanged("IsJoint");
					this.OnIsJointChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_RelationCode")]
	public partial class CRM_RelationCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CRM_RelationCode()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_AttendanceEvent")]
	public partial class CRM_AttendanceEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _ExternalEventID;
		
		private EntitySet<CRM_AttendanceLogGroup> _CRM_AttendanceLogGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnExternalEventIDChanging(System.Nullable<int> value);
    partial void OnExternalEventIDChanged();
    #endregion
		
		public CRM_AttendanceEvent()
		{
			this._CRM_AttendanceLogGroups = new EntitySet<CRM_AttendanceLogGroup>(new Action<CRM_AttendanceLogGroup>(this.attach_CRM_AttendanceLogGroups), new Action<CRM_AttendanceLogGroup>(this.detach_CRM_AttendanceLogGroups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalEventID", DbType="Int")]
		public System.Nullable<int> ExternalEventID
		{
			get
			{
				return this._ExternalEventID;
			}
			set
			{
				if ((this._ExternalEventID != value))
				{
					this.OnExternalEventIDChanging(value);
					this.SendPropertyChanging();
					this._ExternalEventID = value;
					this.SendPropertyChanged("ExternalEventID");
					this.OnExternalEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_AttendanceEvent_CRM_AttendanceLogGroup", Storage="_CRM_AttendanceLogGroups", ThisKey="ID", OtherKey="CRM_AttendanceEventID")]
		public EntitySet<CRM_AttendanceLogGroup> CRM_AttendanceLogGroups
		{
			get
			{
				return this._CRM_AttendanceLogGroups;
			}
			set
			{
				this._CRM_AttendanceLogGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_AttendanceLogGroups(CRM_AttendanceLogGroup entity)
		{
			this.SendPropertyChanging();
			entity.CRM_AttendanceEvent = this;
		}
		
		private void detach_CRM_AttendanceLogGroups(CRM_AttendanceLogGroup entity)
		{
			this.SendPropertyChanging();
			entity.CRM_AttendanceEvent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_AttendanceLog")]
	public partial class CRM_AttendanceLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_AttendancePersonTypeID;
		
		private int _CRM_CRM_AttendanceLogGroupID;
		
		private int _Quantity;
		
		private EntityRef<CRM_AttendancePersonType> _CRM_AttendancePersonType;
		
		private EntityRef<CRM_AttendanceLogGroup> _CRM_AttendanceLogGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_AttendancePersonTypeIDChanging(int value);
    partial void OnCRM_AttendancePersonTypeIDChanged();
    partial void OnCRM_CRM_AttendanceLogGroupIDChanging(int value);
    partial void OnCRM_CRM_AttendanceLogGroupIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    #endregion
		
		public CRM_AttendanceLog()
		{
			this._CRM_AttendancePersonType = default(EntityRef<CRM_AttendancePersonType>);
			this._CRM_AttendanceLogGroup = default(EntityRef<CRM_AttendanceLogGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_AttendancePersonTypeID", DbType="Int NOT NULL")]
		public int CRM_AttendancePersonTypeID
		{
			get
			{
				return this._CRM_AttendancePersonTypeID;
			}
			set
			{
				if ((this._CRM_AttendancePersonTypeID != value))
				{
					if (this._CRM_AttendancePersonType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_AttendancePersonTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_AttendancePersonTypeID = value;
					this.SendPropertyChanged("CRM_AttendancePersonTypeID");
					this.OnCRM_AttendancePersonTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_CRM_AttendanceLogGroupID", DbType="Int NOT NULL")]
		public int CRM_CRM_AttendanceLogGroupID
		{
			get
			{
				return this._CRM_CRM_AttendanceLogGroupID;
			}
			set
			{
				if ((this._CRM_CRM_AttendanceLogGroupID != value))
				{
					if (this._CRM_AttendanceLogGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_CRM_AttendanceLogGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_CRM_AttendanceLogGroupID = value;
					this.SendPropertyChanged("CRM_CRM_AttendanceLogGroupID");
					this.OnCRM_CRM_AttendanceLogGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_AttendancePersonType_CRM_AttendanceLog", Storage="_CRM_AttendancePersonType", ThisKey="CRM_AttendancePersonTypeID", OtherKey="ID", IsForeignKey=true)]
		public CRM_AttendancePersonType CRM_AttendancePersonType
		{
			get
			{
				return this._CRM_AttendancePersonType.Entity;
			}
			set
			{
				CRM_AttendancePersonType previousValue = this._CRM_AttendancePersonType.Entity;
				if (((previousValue != value) 
							|| (this._CRM_AttendancePersonType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_AttendancePersonType.Entity = null;
						previousValue.CRM_AttendanceLogs.Remove(this);
					}
					this._CRM_AttendancePersonType.Entity = value;
					if ((value != null))
					{
						value.CRM_AttendanceLogs.Add(this);
						this._CRM_AttendancePersonTypeID = value.ID;
					}
					else
					{
						this._CRM_AttendancePersonTypeID = default(int);
					}
					this.SendPropertyChanged("CRM_AttendancePersonType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_AttendanceLogGroup_CRM_AttendanceLog", Storage="_CRM_AttendanceLogGroup", ThisKey="CRM_CRM_AttendanceLogGroupID", OtherKey="ID", IsForeignKey=true)]
		public CRM_AttendanceLogGroup CRM_AttendanceLogGroup
		{
			get
			{
				return this._CRM_AttendanceLogGroup.Entity;
			}
			set
			{
				CRM_AttendanceLogGroup previousValue = this._CRM_AttendanceLogGroup.Entity;
				if (((previousValue != value) 
							|| (this._CRM_AttendanceLogGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_AttendanceLogGroup.Entity = null;
						previousValue.CRM_AttendanceLogs.Remove(this);
					}
					this._CRM_AttendanceLogGroup.Entity = value;
					if ((value != null))
					{
						value.CRM_AttendanceLogs.Add(this);
						this._CRM_CRM_AttendanceLogGroupID = value.ID;
					}
					else
					{
						this._CRM_CRM_AttendanceLogGroupID = default(int);
					}
					this.SendPropertyChanged("CRM_AttendanceLogGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_AttendancePersonType")]
	public partial class CRM_AttendancePersonType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _IsActive;
		
		private bool _IsArchived;
		
		private int _OrderNo;
		
		private EntitySet<CRM_AttendanceLog> _CRM_AttendanceLogs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    partial void OnOrderNoChanging(int value);
    partial void OnOrderNoChanged();
    #endregion
		
		public CRM_AttendancePersonType()
		{
			this._CRM_AttendanceLogs = new EntitySet<CRM_AttendanceLog>(new Action<CRM_AttendanceLog>(this.attach_CRM_AttendanceLogs), new Action<CRM_AttendanceLog>(this.detach_CRM_AttendanceLogs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="Int NOT NULL")]
		public int OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_AttendancePersonType_CRM_AttendanceLog", Storage="_CRM_AttendanceLogs", ThisKey="ID", OtherKey="CRM_AttendancePersonTypeID")]
		public EntitySet<CRM_AttendanceLog> CRM_AttendanceLogs
		{
			get
			{
				return this._CRM_AttendanceLogs;
			}
			set
			{
				this._CRM_AttendanceLogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_AttendanceLogs(CRM_AttendanceLog entity)
		{
			this.SendPropertyChanging();
			entity.CRM_AttendancePersonType = this;
		}
		
		private void detach_CRM_AttendanceLogs(CRM_AttendanceLog entity)
		{
			this.SendPropertyChanging();
			entity.CRM_AttendancePersonType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Calendar")]
	public partial class CRM_Calendar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_CalendarTypeID;
		
		private string _DisplayName;
		
		private byte _Status;
		
		private bool _IsCancelled;
		
		private string _CancellationReason;
		
		private System.Nullable<int> _CancellationAdminID;
		
		private System.Nullable<System.DateTime> _DateCancelled;
		
		private System.DateTime _StartDateTime;
		
		private System.DateTime _EndDateTime;
		
		private int _CreatedByAdminID;
		
		private decimal _PriceAgreed;
		
		private byte _PriceType;
		
		private string _PrimaryContactReference;
		
		private bool _RequiresCatering;
		
		private string _TargetReference;
		
		private string _Reference;
		
		private bool _IsInvoiced;
		
		private System.Nullable<int> _InvoiceAddressID;
		
		private string _InvoiceTitle;
		
		private string _InvoiceFirstname;
		
		private string _InvoiceLastname;
		
		private System.Nullable<System.DateTime> _DatePaid;
		
		private string _PONumber;
		
		private byte _PrivacyStatus;
		
		private System.Nullable<int> _ExternalEventID;
		
		private int _Limit;
		
		private int _Taken;
		
		private EntityRef<CRM_CalendarType> _CRM_CalendarType;
		
		private EntityRef<CRM_Address> _CRM_Address;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_CalendarTypeIDChanging(int value);
    partial void OnCRM_CalendarTypeIDChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnIsCancelledChanging(bool value);
    partial void OnIsCancelledChanged();
    partial void OnCancellationReasonChanging(string value);
    partial void OnCancellationReasonChanged();
    partial void OnCancellationAdminIDChanging(System.Nullable<int> value);
    partial void OnCancellationAdminIDChanged();
    partial void OnDateCancelledChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCancelledChanged();
    partial void OnStartDateTimeChanging(System.DateTime value);
    partial void OnStartDateTimeChanged();
    partial void OnEndDateTimeChanging(System.DateTime value);
    partial void OnEndDateTimeChanged();
    partial void OnCreatedByAdminIDChanging(int value);
    partial void OnCreatedByAdminIDChanged();
    partial void OnPriceAgreedChanging(decimal value);
    partial void OnPriceAgreedChanged();
    partial void OnPriceTypeChanging(byte value);
    partial void OnPriceTypeChanged();
    partial void OnPrimaryContactReferenceChanging(string value);
    partial void OnPrimaryContactReferenceChanged();
    partial void OnRequiresCateringChanging(bool value);
    partial void OnRequiresCateringChanged();
    partial void OnTargetReferenceChanging(string value);
    partial void OnTargetReferenceChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnIsInvoicedChanging(bool value);
    partial void OnIsInvoicedChanged();
    partial void OnInvoiceAddressIDChanging(System.Nullable<int> value);
    partial void OnInvoiceAddressIDChanged();
    partial void OnInvoiceTitleChanging(string value);
    partial void OnInvoiceTitleChanged();
    partial void OnInvoiceFirstnameChanging(string value);
    partial void OnInvoiceFirstnameChanged();
    partial void OnInvoiceLastnameChanging(string value);
    partial void OnInvoiceLastnameChanged();
    partial void OnDatePaidChanging(System.Nullable<System.DateTime> value);
    partial void OnDatePaidChanged();
    partial void OnPONumberChanging(string value);
    partial void OnPONumberChanged();
    partial void OnPrivacyStatusChanging(byte value);
    partial void OnPrivacyStatusChanged();
    partial void OnExternalEventIDChanging(System.Nullable<int> value);
    partial void OnExternalEventIDChanged();
    partial void OnLimitChanging(int value);
    partial void OnLimitChanged();
    partial void OnTakenChanging(int value);
    partial void OnTakenChanged();
    #endregion
		
		public CRM_Calendar()
		{
			this._CRM_CalendarType = default(EntityRef<CRM_CalendarType>);
			this._CRM_Address = default(EntityRef<CRM_Address>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_CalendarTypeID", DbType="Int NOT NULL")]
		public int CRM_CalendarTypeID
		{
			get
			{
				return this._CRM_CalendarTypeID;
			}
			set
			{
				if ((this._CRM_CalendarTypeID != value))
				{
					if (this._CRM_CalendarType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_CalendarTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_CalendarTypeID = value;
					this.SendPropertyChanged("CRM_CalendarTypeID");
					this.OnCRM_CalendarTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelled", DbType="Bit NOT NULL")]
		public bool IsCancelled
		{
			get
			{
				return this._IsCancelled;
			}
			set
			{
				if ((this._IsCancelled != value))
				{
					this.OnIsCancelledChanging(value);
					this.SendPropertyChanging();
					this._IsCancelled = value;
					this.SendPropertyChanged("IsCancelled");
					this.OnIsCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancellationReason", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CancellationReason
		{
			get
			{
				return this._CancellationReason;
			}
			set
			{
				if ((this._CancellationReason != value))
				{
					this.OnCancellationReasonChanging(value);
					this.SendPropertyChanging();
					this._CancellationReason = value;
					this.SendPropertyChanged("CancellationReason");
					this.OnCancellationReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancellationAdminID", DbType="Int")]
		public System.Nullable<int> CancellationAdminID
		{
			get
			{
				return this._CancellationAdminID;
			}
			set
			{
				if ((this._CancellationAdminID != value))
				{
					this.OnCancellationAdminIDChanging(value);
					this.SendPropertyChanging();
					this._CancellationAdminID = value;
					this.SendPropertyChanged("CancellationAdminID");
					this.OnCancellationAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCancelled", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCancelled
		{
			get
			{
				return this._DateCancelled;
			}
			set
			{
				if ((this._DateCancelled != value))
				{
					this.OnDateCancelledChanging(value);
					this.SendPropertyChanging();
					this._DateCancelled = value;
					this.SendPropertyChanged("DateCancelled");
					this.OnDateCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartDateTime
		{
			get
			{
				return this._StartDateTime;
			}
			set
			{
				if ((this._StartDateTime != value))
				{
					this.OnStartDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartDateTime = value;
					this.SendPropertyChanged("StartDateTime");
					this.OnStartDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndDateTime
		{
			get
			{
				return this._EndDateTime;
			}
			set
			{
				if ((this._EndDateTime != value))
				{
					this.OnEndDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EndDateTime = value;
					this.SendPropertyChanged("EndDateTime");
					this.OnEndDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByAdminID", DbType="Int NOT NULL")]
		public int CreatedByAdminID
		{
			get
			{
				return this._CreatedByAdminID;
			}
			set
			{
				if ((this._CreatedByAdminID != value))
				{
					this.OnCreatedByAdminIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByAdminID = value;
					this.SendPropertyChanged("CreatedByAdminID");
					this.OnCreatedByAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceAgreed", DbType="Money NOT NULL")]
		public decimal PriceAgreed
		{
			get
			{
				return this._PriceAgreed;
			}
			set
			{
				if ((this._PriceAgreed != value))
				{
					this.OnPriceAgreedChanging(value);
					this.SendPropertyChanging();
					this._PriceAgreed = value;
					this.SendPropertyChanged("PriceAgreed");
					this.OnPriceAgreedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceType", DbType="TinyInt NOT NULL")]
		public byte PriceType
		{
			get
			{
				return this._PriceType;
			}
			set
			{
				if ((this._PriceType != value))
				{
					this.OnPriceTypeChanging(value);
					this.SendPropertyChanging();
					this._PriceType = value;
					this.SendPropertyChanged("PriceType");
					this.OnPriceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryContactReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PrimaryContactReference
		{
			get
			{
				return this._PrimaryContactReference;
			}
			set
			{
				if ((this._PrimaryContactReference != value))
				{
					this.OnPrimaryContactReferenceChanging(value);
					this.SendPropertyChanging();
					this._PrimaryContactReference = value;
					this.SendPropertyChanged("PrimaryContactReference");
					this.OnPrimaryContactReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiresCatering", DbType="Bit NOT NULL")]
		public bool RequiresCatering
		{
			get
			{
				return this._RequiresCatering;
			}
			set
			{
				if ((this._RequiresCatering != value))
				{
					this.OnRequiresCateringChanging(value);
					this.SendPropertyChanging();
					this._RequiresCatering = value;
					this.SendPropertyChanged("RequiresCatering");
					this.OnRequiresCateringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TargetReference
		{
			get
			{
				return this._TargetReference;
			}
			set
			{
				if ((this._TargetReference != value))
				{
					this.OnTargetReferenceChanging(value);
					this.SendPropertyChanging();
					this._TargetReference = value;
					this.SendPropertyChanged("TargetReference");
					this.OnTargetReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(19)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInvoiced", DbType="Bit NOT NULL")]
		public bool IsInvoiced
		{
			get
			{
				return this._IsInvoiced;
			}
			set
			{
				if ((this._IsInvoiced != value))
				{
					this.OnIsInvoicedChanging(value);
					this.SendPropertyChanging();
					this._IsInvoiced = value;
					this.SendPropertyChanged("IsInvoiced");
					this.OnIsInvoicedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceAddressID", DbType="Int")]
		public System.Nullable<int> InvoiceAddressID
		{
			get
			{
				return this._InvoiceAddressID;
			}
			set
			{
				if ((this._InvoiceAddressID != value))
				{
					if (this._CRM_Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceAddressIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceAddressID = value;
					this.SendPropertyChanged("InvoiceAddressID");
					this.OnInvoiceAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTitle", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string InvoiceTitle
		{
			get
			{
				return this._InvoiceTitle;
			}
			set
			{
				if ((this._InvoiceTitle != value))
				{
					this.OnInvoiceTitleChanging(value);
					this.SendPropertyChanging();
					this._InvoiceTitle = value;
					this.SendPropertyChanged("InvoiceTitle");
					this.OnInvoiceTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceFirstname", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string InvoiceFirstname
		{
			get
			{
				return this._InvoiceFirstname;
			}
			set
			{
				if ((this._InvoiceFirstname != value))
				{
					this.OnInvoiceFirstnameChanging(value);
					this.SendPropertyChanging();
					this._InvoiceFirstname = value;
					this.SendPropertyChanged("InvoiceFirstname");
					this.OnInvoiceFirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceLastname", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string InvoiceLastname
		{
			get
			{
				return this._InvoiceLastname;
			}
			set
			{
				if ((this._InvoiceLastname != value))
				{
					this.OnInvoiceLastnameChanging(value);
					this.SendPropertyChanging();
					this._InvoiceLastname = value;
					this.SendPropertyChanged("InvoiceLastname");
					this.OnInvoiceLastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePaid", DbType="DateTime")]
		public System.Nullable<System.DateTime> DatePaid
		{
			get
			{
				return this._DatePaid;
			}
			set
			{
				if ((this._DatePaid != value))
				{
					this.OnDatePaidChanging(value);
					this.SendPropertyChanging();
					this._DatePaid = value;
					this.SendPropertyChanged("DatePaid");
					this.OnDatePaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PONumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PONumber
		{
			get
			{
				return this._PONumber;
			}
			set
			{
				if ((this._PONumber != value))
				{
					this.OnPONumberChanging(value);
					this.SendPropertyChanging();
					this._PONumber = value;
					this.SendPropertyChanged("PONumber");
					this.OnPONumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrivacyStatus", DbType="TinyInt NOT NULL")]
		public byte PrivacyStatus
		{
			get
			{
				return this._PrivacyStatus;
			}
			set
			{
				if ((this._PrivacyStatus != value))
				{
					this.OnPrivacyStatusChanging(value);
					this.SendPropertyChanging();
					this._PrivacyStatus = value;
					this.SendPropertyChanged("PrivacyStatus");
					this.OnPrivacyStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalEventID", DbType="Int")]
		public System.Nullable<int> ExternalEventID
		{
			get
			{
				return this._ExternalEventID;
			}
			set
			{
				if ((this._ExternalEventID != value))
				{
					this.OnExternalEventIDChanging(value);
					this.SendPropertyChanging();
					this._ExternalEventID = value;
					this.SendPropertyChanged("ExternalEventID");
					this.OnExternalEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Limit", DbType="Int NOT NULL")]
		public int Limit
		{
			get
			{
				return this._Limit;
			}
			set
			{
				if ((this._Limit != value))
				{
					this.OnLimitChanging(value);
					this.SendPropertyChanging();
					this._Limit = value;
					this.SendPropertyChanged("Limit");
					this.OnLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Taken", DbType="Int NOT NULL")]
		public int Taken
		{
			get
			{
				return this._Taken;
			}
			set
			{
				if ((this._Taken != value))
				{
					this.OnTakenChanging(value);
					this.SendPropertyChanging();
					this._Taken = value;
					this.SendPropertyChanged("Taken");
					this.OnTakenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_CalendarType_CRM_Calendar", Storage="_CRM_CalendarType", ThisKey="CRM_CalendarTypeID", OtherKey="ID", IsForeignKey=true)]
		public CRM_CalendarType CRM_CalendarType
		{
			get
			{
				return this._CRM_CalendarType.Entity;
			}
			set
			{
				CRM_CalendarType previousValue = this._CRM_CalendarType.Entity;
				if (((previousValue != value) 
							|| (this._CRM_CalendarType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_CalendarType.Entity = null;
						previousValue.CRM_Calendars.Remove(this);
					}
					this._CRM_CalendarType.Entity = value;
					if ((value != null))
					{
						value.CRM_Calendars.Add(this);
						this._CRM_CalendarTypeID = value.ID;
					}
					else
					{
						this._CRM_CalendarTypeID = default(int);
					}
					this.SendPropertyChanged("CRM_CalendarType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Address_CRM_Calendar", Storage="_CRM_Address", ThisKey="InvoiceAddressID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Address CRM_Address
		{
			get
			{
				return this._CRM_Address.Entity;
			}
			set
			{
				CRM_Address previousValue = this._CRM_Address.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Address.Entity = null;
						previousValue.CRM_Calendars.Remove(this);
					}
					this._CRM_Address.Entity = value;
					if ((value != null))
					{
						value.CRM_Calendars.Add(this);
						this._InvoiceAddressID = value.ID;
					}
					else
					{
						this._InvoiceAddressID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CRM_Address");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_CalendarType")]
	public partial class CRM_CalendarType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _CSSClass;
		
		private int _OrderNo;
		
		private string _Hex;
		
		private int _FixedRef;
		
		private EntitySet<CRM_Calendar> _CRM_Calendars;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCSSClassChanging(string value);
    partial void OnCSSClassChanged();
    partial void OnOrderNoChanging(int value);
    partial void OnOrderNoChanged();
    partial void OnHexChanging(string value);
    partial void OnHexChanged();
    partial void OnFixedRefChanging(int value);
    partial void OnFixedRefChanged();
    #endregion
		
		public CRM_CalendarType()
		{
			this._CRM_Calendars = new EntitySet<CRM_Calendar>(new Action<CRM_Calendar>(this.attach_CRM_Calendars), new Action<CRM_Calendar>(this.detach_CRM_Calendars));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSSClass", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CSSClass
		{
			get
			{
				return this._CSSClass;
			}
			set
			{
				if ((this._CSSClass != value))
				{
					this.OnCSSClassChanging(value);
					this.SendPropertyChanging();
					this._CSSClass = value;
					this.SendPropertyChanged("CSSClass");
					this.OnCSSClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="Int NOT NULL")]
		public int OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hex", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string Hex
		{
			get
			{
				return this._Hex;
			}
			set
			{
				if ((this._Hex != value))
				{
					this.OnHexChanging(value);
					this.SendPropertyChanging();
					this._Hex = value;
					this.SendPropertyChanged("Hex");
					this.OnHexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedRef", DbType="Int NOT NULL")]
		public int FixedRef
		{
			get
			{
				return this._FixedRef;
			}
			set
			{
				if ((this._FixedRef != value))
				{
					this.OnFixedRefChanging(value);
					this.SendPropertyChanging();
					this._FixedRef = value;
					this.SendPropertyChanged("FixedRef");
					this.OnFixedRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_CalendarType_CRM_Calendar", Storage="_CRM_Calendars", ThisKey="ID", OtherKey="CRM_CalendarTypeID")]
		public EntitySet<CRM_Calendar> CRM_Calendars
		{
			get
			{
				return this._CRM_Calendars;
			}
			set
			{
				this._CRM_Calendars.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_Calendars(CRM_Calendar entity)
		{
			this.SendPropertyChanging();
			entity.CRM_CalendarType = this;
		}
		
		private void detach_CRM_Calendars(CRM_Calendar entity)
		{
			this.SendPropertyChanging();
			entity.CRM_CalendarType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_AttendanceLogGroup")]
	public partial class CRM_AttendanceLogGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _AddedTimeStamp;
		
		private System.Nullable<int> _CRM_AttendanceEventID;
		
		private byte _OriginType;
		
		private System.Nullable<System.DateTime> _DateInserted;
		
		private EntitySet<CRM_AttendanceLog> _CRM_AttendanceLogs;
		
		private EntityRef<CRM_AttendanceEvent> _CRM_AttendanceEvent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAddedTimeStampChanging(System.DateTime value);
    partial void OnAddedTimeStampChanged();
    partial void OnCRM_AttendanceEventIDChanging(System.Nullable<int> value);
    partial void OnCRM_AttendanceEventIDChanged();
    partial void OnOriginTypeChanging(byte value);
    partial void OnOriginTypeChanged();
    partial void OnDateInsertedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateInsertedChanged();
    #endregion
		
		public CRM_AttendanceLogGroup()
		{
			this._CRM_AttendanceLogs = new EntitySet<CRM_AttendanceLog>(new Action<CRM_AttendanceLog>(this.attach_CRM_AttendanceLogs), new Action<CRM_AttendanceLog>(this.detach_CRM_AttendanceLogs));
			this._CRM_AttendanceEvent = default(EntityRef<CRM_AttendanceEvent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedTimeStamp", DbType="DateTime NOT NULL")]
		public System.DateTime AddedTimeStamp
		{
			get
			{
				return this._AddedTimeStamp;
			}
			set
			{
				if ((this._AddedTimeStamp != value))
				{
					this.OnAddedTimeStampChanging(value);
					this.SendPropertyChanging();
					this._AddedTimeStamp = value;
					this.SendPropertyChanged("AddedTimeStamp");
					this.OnAddedTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_AttendanceEventID", DbType="Int")]
		public System.Nullable<int> CRM_AttendanceEventID
		{
			get
			{
				return this._CRM_AttendanceEventID;
			}
			set
			{
				if ((this._CRM_AttendanceEventID != value))
				{
					if (this._CRM_AttendanceEvent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_AttendanceEventIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_AttendanceEventID = value;
					this.SendPropertyChanged("CRM_AttendanceEventID");
					this.OnCRM_AttendanceEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginType", DbType="TinyInt NOT NULL")]
		public byte OriginType
		{
			get
			{
				return this._OriginType;
			}
			set
			{
				if ((this._OriginType != value))
				{
					this.OnOriginTypeChanging(value);
					this.SendPropertyChanging();
					this._OriginType = value;
					this.SendPropertyChanged("OriginType");
					this.OnOriginTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInserted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateInserted
		{
			get
			{
				return this._DateInserted;
			}
			set
			{
				if ((this._DateInserted != value))
				{
					this.OnDateInsertedChanging(value);
					this.SendPropertyChanging();
					this._DateInserted = value;
					this.SendPropertyChanged("DateInserted");
					this.OnDateInsertedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_AttendanceLogGroup_CRM_AttendanceLog", Storage="_CRM_AttendanceLogs", ThisKey="ID", OtherKey="CRM_CRM_AttendanceLogGroupID")]
		public EntitySet<CRM_AttendanceLog> CRM_AttendanceLogs
		{
			get
			{
				return this._CRM_AttendanceLogs;
			}
			set
			{
				this._CRM_AttendanceLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_AttendanceEvent_CRM_AttendanceLogGroup", Storage="_CRM_AttendanceEvent", ThisKey="CRM_AttendanceEventID", OtherKey="ID", IsForeignKey=true)]
		public CRM_AttendanceEvent CRM_AttendanceEvent
		{
			get
			{
				return this._CRM_AttendanceEvent.Entity;
			}
			set
			{
				CRM_AttendanceEvent previousValue = this._CRM_AttendanceEvent.Entity;
				if (((previousValue != value) 
							|| (this._CRM_AttendanceEvent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_AttendanceEvent.Entity = null;
						previousValue.CRM_AttendanceLogGroups.Remove(this);
					}
					this._CRM_AttendanceEvent.Entity = value;
					if ((value != null))
					{
						value.CRM_AttendanceLogGroups.Add(this);
						this._CRM_AttendanceEventID = value.ID;
					}
					else
					{
						this._CRM_AttendanceEventID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CRM_AttendanceEvent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_AttendanceLogs(CRM_AttendanceLog entity)
		{
			this.SendPropertyChanging();
			entity.CRM_AttendanceLogGroup = this;
		}
		
		private void detach_CRM_AttendanceLogs(CRM_AttendanceLog entity)
		{
			this.SendPropertyChanging();
			entity.CRM_AttendanceLogGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Venue")]
	public partial class CRM_Venue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _Capacity;
		
		private bool _IsInternal;
		
		private int _CRM_AddressID;
		
		private string _Reference;
		
		private EntityRef<CRM_Address> _CRM_Address;
		
		private EntityRef<CRM_Address> _CRM_Address1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCapacityChanging(int value);
    partial void OnCapacityChanged();
    partial void OnIsInternalChanging(bool value);
    partial void OnIsInternalChanged();
    partial void OnCRM_AddressIDChanging(int value);
    partial void OnCRM_AddressIDChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    #endregion
		
		public CRM_Venue()
		{
			this._CRM_Address = default(EntityRef<CRM_Address>);
			this._CRM_Address1 = default(EntityRef<CRM_Address>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Int NOT NULL")]
		public int Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInternal", DbType="Bit NOT NULL")]
		public bool IsInternal
		{
			get
			{
				return this._IsInternal;
			}
			set
			{
				if ((this._IsInternal != value))
				{
					this.OnIsInternalChanging(value);
					this.SendPropertyChanging();
					this._IsInternal = value;
					this.SendPropertyChanged("IsInternal");
					this.OnIsInternalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_AddressID", DbType="Int NOT NULL")]
		public int CRM_AddressID
		{
			get
			{
				return this._CRM_AddressID;
			}
			set
			{
				if ((this._CRM_AddressID != value))
				{
					if ((this._CRM_Address.HasLoadedOrAssignedValue || this._CRM_Address1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_AddressIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_AddressID = value;
					this.SendPropertyChanged("CRM_AddressID");
					this.OnCRM_AddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(16)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Address_CRM_Venue", Storage="_CRM_Address", ThisKey="CRM_AddressID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Address CRM_Address
		{
			get
			{
				return this._CRM_Address.Entity;
			}
			set
			{
				CRM_Address previousValue = this._CRM_Address.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Address.Entity = null;
						previousValue.CRM_Venues.Remove(this);
					}
					this._CRM_Address.Entity = value;
					if ((value != null))
					{
						value.CRM_Venues.Add(this);
						this._CRM_AddressID = value.ID;
					}
					else
					{
						this._CRM_AddressID = default(int);
					}
					this.SendPropertyChanged("CRM_Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Address_CRM_Venue1", Storage="_CRM_Address1", ThisKey="CRM_AddressID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Address CRM_Address1
		{
			get
			{
				return this._CRM_Address1.Entity;
			}
			set
			{
				CRM_Address previousValue = this._CRM_Address1.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Address1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Address1.Entity = null;
						previousValue.CRM_Venues1.Remove(this);
					}
					this._CRM_Address1.Entity = value;
					if ((value != null))
					{
						value.CRM_Venues1.Add(this);
						this._CRM_AddressID = value.ID;
					}
					else
					{
						this._CRM_AddressID = default(int);
					}
					this.SendPropertyChanged("CRM_Address1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Person")]
	public partial class CRM_Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _Lastname;
		
		private string _Firstname;
		
		private bool _IsGiftAid;
		
		private string _PreviousNames;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private bool _IsChild;
		
		private bool _IsConcession;
		
		private bool _IsCarerMinder;
		
		private string _PrimaryEmail;
		
		private string _PrimaryTelephone;
		
		private int _CRM_AddressID;
		
		private bool _IsContactEmail;
		
		private bool _IsContactPost;
		
		private bool _IsDeceased;
		
		private string _Reference;
		
		private bool _IsArchived;
		
		private System.DateTime _DateAdded;
		
		private System.DateTime _DateModified;
		
		private bool _IsDoNotMail;
		
		private bool _IsDoNotEmail;
		
		private System.Nullable<int> _WebsiteAccountID;
		
		private System.Nullable<int> _LegacyID;
		
		private System.Nullable<bool> _IsMale;
		
		private byte _AddressType;
		
		private string _Telephone2;
		
		private System.Nullable<int> _PrimaryAddressID;
		
		private string _Password;
		
		private string _TempCode;
		
		private EntitySet<CRM_AnnualPassPerson> _CRM_AnnualPassPersons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnLastnameChanging(string value);
    partial void OnLastnameChanged();
    partial void OnFirstnameChanging(string value);
    partial void OnFirstnameChanged();
    partial void OnIsGiftAidChanging(bool value);
    partial void OnIsGiftAidChanged();
    partial void OnPreviousNamesChanging(string value);
    partial void OnPreviousNamesChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnIsChildChanging(bool value);
    partial void OnIsChildChanged();
    partial void OnIsConcessionChanging(bool value);
    partial void OnIsConcessionChanged();
    partial void OnIsCarerMinderChanging(bool value);
    partial void OnIsCarerMinderChanged();
    partial void OnPrimaryEmailChanging(string value);
    partial void OnPrimaryEmailChanged();
    partial void OnPrimaryTelephoneChanging(string value);
    partial void OnPrimaryTelephoneChanged();
    partial void OnCRM_AddressIDChanging(int value);
    partial void OnCRM_AddressIDChanged();
    partial void OnIsContactEmailChanging(bool value);
    partial void OnIsContactEmailChanged();
    partial void OnIsContactPostChanging(bool value);
    partial void OnIsContactPostChanged();
    partial void OnIsDeceasedChanging(bool value);
    partial void OnIsDeceasedChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    partial void OnDateAddedChanging(System.DateTime value);
    partial void OnDateAddedChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    partial void OnIsDoNotMailChanging(bool value);
    partial void OnIsDoNotMailChanged();
    partial void OnIsDoNotEmailChanging(bool value);
    partial void OnIsDoNotEmailChanged();
    partial void OnWebsiteAccountIDChanging(System.Nullable<int> value);
    partial void OnWebsiteAccountIDChanged();
    partial void OnLegacyIDChanging(System.Nullable<int> value);
    partial void OnLegacyIDChanged();
    partial void OnIsMaleChanging(System.Nullable<bool> value);
    partial void OnIsMaleChanged();
    partial void OnAddressTypeChanging(byte value);
    partial void OnAddressTypeChanged();
    partial void OnTelephone2Changing(string value);
    partial void OnTelephone2Changed();
    partial void OnPrimaryAddressIDChanging(System.Nullable<int> value);
    partial void OnPrimaryAddressIDChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnTempCodeChanging(string value);
    partial void OnTempCodeChanged();
    #endregion
		
		public CRM_Person()
		{
			this._CRM_AnnualPassPersons = new EntitySet<CRM_AnnualPassPerson>(new Action<CRM_AnnualPassPerson>(this.attach_CRM_AnnualPassPersons), new Action<CRM_AnnualPassPerson>(this.detach_CRM_AnnualPassPersons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this.OnLastnameChanging(value);
					this.SendPropertyChanging();
					this._Lastname = value;
					this.SendPropertyChanged("Lastname");
					this.OnLastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this.OnFirstnameChanging(value);
					this.SendPropertyChanging();
					this._Firstname = value;
					this.SendPropertyChanged("Firstname");
					this.OnFirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGiftAid", DbType="Bit NOT NULL")]
		public bool IsGiftAid
		{
			get
			{
				return this._IsGiftAid;
			}
			set
			{
				if ((this._IsGiftAid != value))
				{
					this.OnIsGiftAidChanging(value);
					this.SendPropertyChanging();
					this._IsGiftAid = value;
					this.SendPropertyChanged("IsGiftAid");
					this.OnIsGiftAidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousNames", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PreviousNames
		{
			get
			{
				return this._PreviousNames;
			}
			set
			{
				if ((this._PreviousNames != value))
				{
					this.OnPreviousNamesChanging(value);
					this.SendPropertyChanging();
					this._PreviousNames = value;
					this.SendPropertyChanged("PreviousNames");
					this.OnPreviousNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChild", DbType="Bit NOT NULL")]
		public bool IsChild
		{
			get
			{
				return this._IsChild;
			}
			set
			{
				if ((this._IsChild != value))
				{
					this.OnIsChildChanging(value);
					this.SendPropertyChanging();
					this._IsChild = value;
					this.SendPropertyChanged("IsChild");
					this.OnIsChildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConcession", DbType="Bit NOT NULL")]
		public bool IsConcession
		{
			get
			{
				return this._IsConcession;
			}
			set
			{
				if ((this._IsConcession != value))
				{
					this.OnIsConcessionChanging(value);
					this.SendPropertyChanging();
					this._IsConcession = value;
					this.SendPropertyChanged("IsConcession");
					this.OnIsConcessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCarerMinder", DbType="Bit NOT NULL")]
		public bool IsCarerMinder
		{
			get
			{
				return this._IsCarerMinder;
			}
			set
			{
				if ((this._IsCarerMinder != value))
				{
					this.OnIsCarerMinderChanging(value);
					this.SendPropertyChanging();
					this._IsCarerMinder = value;
					this.SendPropertyChanged("IsCarerMinder");
					this.OnIsCarerMinderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryEmail", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string PrimaryEmail
		{
			get
			{
				return this._PrimaryEmail;
			}
			set
			{
				if ((this._PrimaryEmail != value))
				{
					this.OnPrimaryEmailChanging(value);
					this.SendPropertyChanging();
					this._PrimaryEmail = value;
					this.SendPropertyChanged("PrimaryEmail");
					this.OnPrimaryEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryTelephone", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string PrimaryTelephone
		{
			get
			{
				return this._PrimaryTelephone;
			}
			set
			{
				if ((this._PrimaryTelephone != value))
				{
					this.OnPrimaryTelephoneChanging(value);
					this.SendPropertyChanging();
					this._PrimaryTelephone = value;
					this.SendPropertyChanged("PrimaryTelephone");
					this.OnPrimaryTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_AddressID", DbType="Int NOT NULL")]
		public int CRM_AddressID
		{
			get
			{
				return this._CRM_AddressID;
			}
			set
			{
				if ((this._CRM_AddressID != value))
				{
					this.OnCRM_AddressIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_AddressID = value;
					this.SendPropertyChanged("CRM_AddressID");
					this.OnCRM_AddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsContactEmail", DbType="Bit NOT NULL")]
		public bool IsContactEmail
		{
			get
			{
				return this._IsContactEmail;
			}
			set
			{
				if ((this._IsContactEmail != value))
				{
					this.OnIsContactEmailChanging(value);
					this.SendPropertyChanging();
					this._IsContactEmail = value;
					this.SendPropertyChanged("IsContactEmail");
					this.OnIsContactEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsContactPost", DbType="Bit NOT NULL")]
		public bool IsContactPost
		{
			get
			{
				return this._IsContactPost;
			}
			set
			{
				if ((this._IsContactPost != value))
				{
					this.OnIsContactPostChanging(value);
					this.SendPropertyChanging();
					this._IsContactPost = value;
					this.SendPropertyChanged("IsContactPost");
					this.OnIsContactPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeceased", DbType="Bit NOT NULL")]
		public bool IsDeceased
		{
			get
			{
				return this._IsDeceased;
			}
			set
			{
				if ((this._IsDeceased != value))
				{
					this.OnIsDeceasedChanging(value);
					this.SendPropertyChanging();
					this._IsDeceased = value;
					this.SendPropertyChanged("IsDeceased");
					this.OnIsDeceasedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(17)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDoNotMail", DbType="Bit NOT NULL")]
		public bool IsDoNotMail
		{
			get
			{
				return this._IsDoNotMail;
			}
			set
			{
				if ((this._IsDoNotMail != value))
				{
					this.OnIsDoNotMailChanging(value);
					this.SendPropertyChanging();
					this._IsDoNotMail = value;
					this.SendPropertyChanged("IsDoNotMail");
					this.OnIsDoNotMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDoNotEmail", DbType="Bit NOT NULL")]
		public bool IsDoNotEmail
		{
			get
			{
				return this._IsDoNotEmail;
			}
			set
			{
				if ((this._IsDoNotEmail != value))
				{
					this.OnIsDoNotEmailChanging(value);
					this.SendPropertyChanging();
					this._IsDoNotEmail = value;
					this.SendPropertyChanged("IsDoNotEmail");
					this.OnIsDoNotEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebsiteAccountID", DbType="Int")]
		public System.Nullable<int> WebsiteAccountID
		{
			get
			{
				return this._WebsiteAccountID;
			}
			set
			{
				if ((this._WebsiteAccountID != value))
				{
					this.OnWebsiteAccountIDChanging(value);
					this.SendPropertyChanging();
					this._WebsiteAccountID = value;
					this.SendPropertyChanged("WebsiteAccountID");
					this.OnWebsiteAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LegacyID", DbType="Int")]
		public System.Nullable<int> LegacyID
		{
			get
			{
				return this._LegacyID;
			}
			set
			{
				if ((this._LegacyID != value))
				{
					this.OnLegacyIDChanging(value);
					this.SendPropertyChanging();
					this._LegacyID = value;
					this.SendPropertyChanged("LegacyID");
					this.OnLegacyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMale", DbType="Bit")]
		public System.Nullable<bool> IsMale
		{
			get
			{
				return this._IsMale;
			}
			set
			{
				if ((this._IsMale != value))
				{
					this.OnIsMaleChanging(value);
					this.SendPropertyChanging();
					this._IsMale = value;
					this.SendPropertyChanged("IsMale");
					this.OnIsMaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressType", DbType="TinyInt NOT NULL")]
		public byte AddressType
		{
			get
			{
				return this._AddressType;
			}
			set
			{
				if ((this._AddressType != value))
				{
					this.OnAddressTypeChanging(value);
					this.SendPropertyChanging();
					this._AddressType = value;
					this.SendPropertyChanged("AddressType");
					this.OnAddressTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone2", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Telephone2
		{
			get
			{
				return this._Telephone2;
			}
			set
			{
				if ((this._Telephone2 != value))
				{
					this.OnTelephone2Changing(value);
					this.SendPropertyChanging();
					this._Telephone2 = value;
					this.SendPropertyChanged("Telephone2");
					this.OnTelephone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryAddressID", DbType="Int")]
		public System.Nullable<int> PrimaryAddressID
		{
			get
			{
				return this._PrimaryAddressID;
			}
			set
			{
				if ((this._PrimaryAddressID != value))
				{
					this.OnPrimaryAddressIDChanging(value);
					this.SendPropertyChanging();
					this._PrimaryAddressID = value;
					this.SendPropertyChanged("PrimaryAddressID");
					this.OnPrimaryAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempCode", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string TempCode
		{
			get
			{
				return this._TempCode;
			}
			set
			{
				if ((this._TempCode != value))
				{
					this.OnTempCodeChanging(value);
					this.SendPropertyChanging();
					this._TempCode = value;
					this.SendPropertyChanged("TempCode");
					this.OnTempCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Person_CRM_AnnualPassPerson", Storage="_CRM_AnnualPassPersons", ThisKey="ID", OtherKey="CRM_PersonID")]
		public EntitySet<CRM_AnnualPassPerson> CRM_AnnualPassPersons
		{
			get
			{
				return this._CRM_AnnualPassPersons;
			}
			set
			{
				this._CRM_AnnualPassPersons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_AnnualPassPersons(CRM_AnnualPassPerson entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Person = this;
		}
		
		private void detach_CRM_AnnualPassPersons(CRM_AnnualPassPerson entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Address")]
	public partial class CRM_Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _AddressLine1;
		
		private string _AddressLine2;
		
		private string _AddressLine3;
		
		private string _AddressLine4;
		
		private string _AddressLine5;
		
		private string _Town;
		
		private string _County;
		
		private string _Postcode;
		
		private int _CountryID;
		
		private EntitySet<CRM_Calendar> _CRM_Calendars;
		
		private EntitySet<CRM_Venue> _CRM_Venues;
		
		private EntitySet<CRM_Venue> _CRM_Venues1;
		
		private EntityRef<Country> _Country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAddressLine1Changing(string value);
    partial void OnAddressLine1Changed();
    partial void OnAddressLine2Changing(string value);
    partial void OnAddressLine2Changed();
    partial void OnAddressLine3Changing(string value);
    partial void OnAddressLine3Changed();
    partial void OnAddressLine4Changing(string value);
    partial void OnAddressLine4Changed();
    partial void OnAddressLine5Changing(string value);
    partial void OnAddressLine5Changed();
    partial void OnTownChanging(string value);
    partial void OnTownChanged();
    partial void OnCountyChanging(string value);
    partial void OnCountyChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    #endregion
		
		public CRM_Address()
		{
			this._CRM_Calendars = new EntitySet<CRM_Calendar>(new Action<CRM_Calendar>(this.attach_CRM_Calendars), new Action<CRM_Calendar>(this.detach_CRM_Calendars));
			this._CRM_Venues = new EntitySet<CRM_Venue>(new Action<CRM_Venue>(this.attach_CRM_Venues), new Action<CRM_Venue>(this.detach_CRM_Venues));
			this._CRM_Venues1 = new EntitySet<CRM_Venue>(new Action<CRM_Venue>(this.attach_CRM_Venues1), new Action<CRM_Venue>(this.detach_CRM_Venues1));
			this._Country = default(EntityRef<Country>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine1", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string AddressLine1
		{
			get
			{
				return this._AddressLine1;
			}
			set
			{
				if ((this._AddressLine1 != value))
				{
					this.OnAddressLine1Changing(value);
					this.SendPropertyChanging();
					this._AddressLine1 = value;
					this.SendPropertyChanged("AddressLine1");
					this.OnAddressLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine2", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string AddressLine2
		{
			get
			{
				return this._AddressLine2;
			}
			set
			{
				if ((this._AddressLine2 != value))
				{
					this.OnAddressLine2Changing(value);
					this.SendPropertyChanging();
					this._AddressLine2 = value;
					this.SendPropertyChanged("AddressLine2");
					this.OnAddressLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine3", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string AddressLine3
		{
			get
			{
				return this._AddressLine3;
			}
			set
			{
				if ((this._AddressLine3 != value))
				{
					this.OnAddressLine3Changing(value);
					this.SendPropertyChanging();
					this._AddressLine3 = value;
					this.SendPropertyChanged("AddressLine3");
					this.OnAddressLine3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine4", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string AddressLine4
		{
			get
			{
				return this._AddressLine4;
			}
			set
			{
				if ((this._AddressLine4 != value))
				{
					this.OnAddressLine4Changing(value);
					this.SendPropertyChanging();
					this._AddressLine4 = value;
					this.SendPropertyChanged("AddressLine4");
					this.OnAddressLine4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine5", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string AddressLine5
		{
			get
			{
				return this._AddressLine5;
			}
			set
			{
				if ((this._AddressLine5 != value))
				{
					this.OnAddressLine5Changing(value);
					this.SendPropertyChanging();
					this._AddressLine5 = value;
					this.SendPropertyChanged("AddressLine5");
					this.OnAddressLine5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Town", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Town
		{
			get
			{
				return this._Town;
			}
			set
			{
				if ((this._Town != value))
				{
					this.OnTownChanging(value);
					this.SendPropertyChanging();
					this._Town = value;
					this.SendPropertyChanged("Town");
					this.OnTownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_County", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string County
		{
			get
			{
				return this._County;
			}
			set
			{
				if ((this._County != value))
				{
					this.OnCountyChanging(value);
					this.SendPropertyChanging();
					this._County = value;
					this.SendPropertyChanged("County");
					this.OnCountyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int NOT NULL")]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Address_CRM_Calendar", Storage="_CRM_Calendars", ThisKey="ID", OtherKey="InvoiceAddressID")]
		public EntitySet<CRM_Calendar> CRM_Calendars
		{
			get
			{
				return this._CRM_Calendars;
			}
			set
			{
				this._CRM_Calendars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Address_CRM_Venue", Storage="_CRM_Venues", ThisKey="ID", OtherKey="CRM_AddressID")]
		public EntitySet<CRM_Venue> CRM_Venues
		{
			get
			{
				return this._CRM_Venues;
			}
			set
			{
				this._CRM_Venues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Address_CRM_Venue1", Storage="_CRM_Venues1", ThisKey="ID", OtherKey="CRM_AddressID")]
		public EntitySet<CRM_Venue> CRM_Venues1
		{
			get
			{
				return this._CRM_Venues1;
			}
			set
			{
				this._CRM_Venues1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_CRM_Address", Storage="_Country", ThisKey="CountryID", OtherKey="ID", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.CRM_Addresses.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.CRM_Addresses.Add(this);
						this._CountryID = value.ID;
					}
					else
					{
						this._CountryID = default(int);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_Calendars(CRM_Calendar entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Address = this;
		}
		
		private void detach_CRM_Calendars(CRM_Calendar entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Address = null;
		}
		
		private void attach_CRM_Venues(CRM_Venue entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Address = this;
		}
		
		private void detach_CRM_Venues(CRM_Venue entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Address = null;
		}
		
		private void attach_CRM_Venues1(CRM_Venue entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Address1 = this;
		}
		
		private void detach_CRM_Venues1(CRM_Venue entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Address1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoldingPen")]
	public partial class HoldingPen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _Firstname;
		
		private string _Lastname;
		
		private string _Email;
		
		private System.DateTime _DateReceived;
		
		private System.Nullable<System.DateTime> _DateCommitted;
		
		private byte _OriginType;
		
		private string _OriginDescription;
		
		private int _OriginAccountID;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _City;
		
		private string _County;
		
		private string _Postcode;
		
		private int _CountryID;
		
		private string _Telephone;
		
		private string _InterestObjects;
		
		private bool _DoNotMail;
		
		private bool _DoNotEmail;
		
		private bool _AlwaysSendPassInfo;
		
		private string _MembershipA;
		
		private string _MembershipB;
		
		private string _BasketContents;
		
		private System.Nullable<int> _JointHoldingPenID;
		
		private string _JointSalutation;
		
		private System.Nullable<int> _JointAtoBID;
		
		private System.Nullable<int> _JointBtoAID;
		
		private System.Nullable<char> _JointThisReferenceAB;
		
		private string _Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnFirstnameChanging(string value);
    partial void OnFirstnameChanged();
    partial void OnLastnameChanging(string value);
    partial void OnLastnameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDateReceivedChanging(System.DateTime value);
    partial void OnDateReceivedChanged();
    partial void OnDateCommittedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCommittedChanged();
    partial void OnOriginTypeChanging(byte value);
    partial void OnOriginTypeChanged();
    partial void OnOriginDescriptionChanging(string value);
    partial void OnOriginDescriptionChanged();
    partial void OnOriginAccountIDChanging(int value);
    partial void OnOriginAccountIDChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnCountyChanging(string value);
    partial void OnCountyChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnInterestObjectsChanging(string value);
    partial void OnInterestObjectsChanged();
    partial void OnDoNotMailChanging(bool value);
    partial void OnDoNotMailChanged();
    partial void OnDoNotEmailChanging(bool value);
    partial void OnDoNotEmailChanged();
    partial void OnAlwaysSendPassInfoChanging(bool value);
    partial void OnAlwaysSendPassInfoChanged();
    partial void OnMembershipAChanging(string value);
    partial void OnMembershipAChanged();
    partial void OnMembershipBChanging(string value);
    partial void OnMembershipBChanged();
    partial void OnBasketContentsChanging(string value);
    partial void OnBasketContentsChanged();
    partial void OnJointHoldingPenIDChanging(System.Nullable<int> value);
    partial void OnJointHoldingPenIDChanged();
    partial void OnJointSalutationChanging(string value);
    partial void OnJointSalutationChanged();
    partial void OnJointAtoBIDChanging(System.Nullable<int> value);
    partial void OnJointAtoBIDChanged();
    partial void OnJointBtoAIDChanging(System.Nullable<int> value);
    partial void OnJointBtoAIDChanged();
    partial void OnJointThisReferenceABChanging(System.Nullable<char> value);
    partial void OnJointThisReferenceABChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public HoldingPen()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this.OnFirstnameChanging(value);
					this.SendPropertyChanging();
					this._Firstname = value;
					this.SendPropertyChanged("Firstname");
					this.OnFirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this.OnLastnameChanging(value);
					this.SendPropertyChanging();
					this._Lastname = value;
					this.SendPropertyChanged("Lastname");
					this.OnLastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateReceived", DbType="DateTime NOT NULL")]
		public System.DateTime DateReceived
		{
			get
			{
				return this._DateReceived;
			}
			set
			{
				if ((this._DateReceived != value))
				{
					this.OnDateReceivedChanging(value);
					this.SendPropertyChanging();
					this._DateReceived = value;
					this.SendPropertyChanged("DateReceived");
					this.OnDateReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCommitted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCommitted
		{
			get
			{
				return this._DateCommitted;
			}
			set
			{
				if ((this._DateCommitted != value))
				{
					this.OnDateCommittedChanging(value);
					this.SendPropertyChanging();
					this._DateCommitted = value;
					this.SendPropertyChanged("DateCommitted");
					this.OnDateCommittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginType", DbType="TinyInt NOT NULL")]
		public byte OriginType
		{
			get
			{
				return this._OriginType;
			}
			set
			{
				if ((this._OriginType != value))
				{
					this.OnOriginTypeChanging(value);
					this.SendPropertyChanging();
					this._OriginType = value;
					this.SendPropertyChanged("OriginType");
					this.OnOriginTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginDescription", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string OriginDescription
		{
			get
			{
				return this._OriginDescription;
			}
			set
			{
				if ((this._OriginDescription != value))
				{
					this.OnOriginDescriptionChanging(value);
					this.SendPropertyChanging();
					this._OriginDescription = value;
					this.SendPropertyChanged("OriginDescription");
					this.OnOriginDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginAccountID", DbType="Int NOT NULL")]
		public int OriginAccountID
		{
			get
			{
				return this._OriginAccountID;
			}
			set
			{
				if ((this._OriginAccountID != value))
				{
					this.OnOriginAccountIDChanging(value);
					this.SendPropertyChanging();
					this._OriginAccountID = value;
					this.SendPropertyChanged("OriginAccountID");
					this.OnOriginAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address3", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this.OnAddress3Changing(value);
					this.SendPropertyChanging();
					this._Address3 = value;
					this.SendPropertyChanged("Address3");
					this.OnAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_County", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string County
		{
			get
			{
				return this._County;
			}
			set
			{
				if ((this._County != value))
				{
					this.OnCountyChanging(value);
					this.SendPropertyChanging();
					this._County = value;
					this.SendPropertyChanged("County");
					this.OnCountyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int NOT NULL")]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestObjects", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InterestObjects
		{
			get
			{
				return this._InterestObjects;
			}
			set
			{
				if ((this._InterestObjects != value))
				{
					this.OnInterestObjectsChanging(value);
					this.SendPropertyChanging();
					this._InterestObjects = value;
					this.SendPropertyChanged("InterestObjects");
					this.OnInterestObjectsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoNotMail", DbType="Bit NOT NULL")]
		public bool DoNotMail
		{
			get
			{
				return this._DoNotMail;
			}
			set
			{
				if ((this._DoNotMail != value))
				{
					this.OnDoNotMailChanging(value);
					this.SendPropertyChanging();
					this._DoNotMail = value;
					this.SendPropertyChanged("DoNotMail");
					this.OnDoNotMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoNotEmail", DbType="Bit NOT NULL")]
		public bool DoNotEmail
		{
			get
			{
				return this._DoNotEmail;
			}
			set
			{
				if ((this._DoNotEmail != value))
				{
					this.OnDoNotEmailChanging(value);
					this.SendPropertyChanging();
					this._DoNotEmail = value;
					this.SendPropertyChanged("DoNotEmail");
					this.OnDoNotEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlwaysSendPassInfo", DbType="Bit NOT NULL")]
		public bool AlwaysSendPassInfo
		{
			get
			{
				return this._AlwaysSendPassInfo;
			}
			set
			{
				if ((this._AlwaysSendPassInfo != value))
				{
					this.OnAlwaysSendPassInfoChanging(value);
					this.SendPropertyChanging();
					this._AlwaysSendPassInfo = value;
					this.SendPropertyChanged("AlwaysSendPassInfo");
					this.OnAlwaysSendPassInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MembershipA", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string MembershipA
		{
			get
			{
				return this._MembershipA;
			}
			set
			{
				if ((this._MembershipA != value))
				{
					this.OnMembershipAChanging(value);
					this.SendPropertyChanging();
					this._MembershipA = value;
					this.SendPropertyChanged("MembershipA");
					this.OnMembershipAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MembershipB", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string MembershipB
		{
			get
			{
				return this._MembershipB;
			}
			set
			{
				if ((this._MembershipB != value))
				{
					this.OnMembershipBChanging(value);
					this.SendPropertyChanging();
					this._MembershipB = value;
					this.SendPropertyChanged("MembershipB");
					this.OnMembershipBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasketContents", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string BasketContents
		{
			get
			{
				return this._BasketContents;
			}
			set
			{
				if ((this._BasketContents != value))
				{
					this.OnBasketContentsChanging(value);
					this.SendPropertyChanging();
					this._BasketContents = value;
					this.SendPropertyChanged("BasketContents");
					this.OnBasketContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointHoldingPenID", DbType="Int")]
		public System.Nullable<int> JointHoldingPenID
		{
			get
			{
				return this._JointHoldingPenID;
			}
			set
			{
				if ((this._JointHoldingPenID != value))
				{
					this.OnJointHoldingPenIDChanging(value);
					this.SendPropertyChanging();
					this._JointHoldingPenID = value;
					this.SendPropertyChanged("JointHoldingPenID");
					this.OnJointHoldingPenIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointSalutation", DbType="VarChar(500)")]
		public string JointSalutation
		{
			get
			{
				return this._JointSalutation;
			}
			set
			{
				if ((this._JointSalutation != value))
				{
					this.OnJointSalutationChanging(value);
					this.SendPropertyChanging();
					this._JointSalutation = value;
					this.SendPropertyChanged("JointSalutation");
					this.OnJointSalutationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointAtoBID", DbType="Int")]
		public System.Nullable<int> JointAtoBID
		{
			get
			{
				return this._JointAtoBID;
			}
			set
			{
				if ((this._JointAtoBID != value))
				{
					this.OnJointAtoBIDChanging(value);
					this.SendPropertyChanging();
					this._JointAtoBID = value;
					this.SendPropertyChanged("JointAtoBID");
					this.OnJointAtoBIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointBtoAID", DbType="Int")]
		public System.Nullable<int> JointBtoAID
		{
			get
			{
				return this._JointBtoAID;
			}
			set
			{
				if ((this._JointBtoAID != value))
				{
					this.OnJointBtoAIDChanging(value);
					this.SendPropertyChanging();
					this._JointBtoAID = value;
					this.SendPropertyChanged("JointBtoAID");
					this.OnJointBtoAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointThisReferenceAB", DbType="Char(1)")]
		public System.Nullable<char> JointThisReferenceAB
		{
			get
			{
				return this._JointThisReferenceAB;
			}
			set
			{
				if ((this._JointThisReferenceAB != value))
				{
					this.OnJointThisReferenceABChanging(value);
					this.SendPropertyChanging();
					this._JointThisReferenceAB = value;
					this.SendPropertyChanged("JointThisReferenceAB");
					this.OnJointThisReferenceABChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_AnnualPassPerson")]
	public partial class CRM_AnnualPassPerson : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_AnnualPassID;
		
		private int _CRM_PersonID;
		
		private bool _IsArchived;
		
		private EntityRef<CRM_AnnualPass> _CRM_AnnualPass;
		
		private EntityRef<CRM_Person> _CRM_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_AnnualPassIDChanging(int value);
    partial void OnCRM_AnnualPassIDChanged();
    partial void OnCRM_PersonIDChanging(int value);
    partial void OnCRM_PersonIDChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    #endregion
		
		public CRM_AnnualPassPerson()
		{
			this._CRM_AnnualPass = default(EntityRef<CRM_AnnualPass>);
			this._CRM_Person = default(EntityRef<CRM_Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_AnnualPassID", DbType="Int NOT NULL")]
		public int CRM_AnnualPassID
		{
			get
			{
				return this._CRM_AnnualPassID;
			}
			set
			{
				if ((this._CRM_AnnualPassID != value))
				{
					if (this._CRM_AnnualPass.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_AnnualPassIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_AnnualPassID = value;
					this.SendPropertyChanged("CRM_AnnualPassID");
					this.OnCRM_AnnualPassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_PersonID", DbType="Int NOT NULL")]
		public int CRM_PersonID
		{
			get
			{
				return this._CRM_PersonID;
			}
			set
			{
				if ((this._CRM_PersonID != value))
				{
					if (this._CRM_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_PersonIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_PersonID = value;
					this.SendPropertyChanged("CRM_PersonID");
					this.OnCRM_PersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_AnnualPass_CRM_AnnualPassPerson", Storage="_CRM_AnnualPass", ThisKey="CRM_AnnualPassID", OtherKey="ID", IsForeignKey=true)]
		public CRM_AnnualPass CRM_AnnualPass
		{
			get
			{
				return this._CRM_AnnualPass.Entity;
			}
			set
			{
				CRM_AnnualPass previousValue = this._CRM_AnnualPass.Entity;
				if (((previousValue != value) 
							|| (this._CRM_AnnualPass.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_AnnualPass.Entity = null;
						previousValue.CRM_AnnualPassPersons.Remove(this);
					}
					this._CRM_AnnualPass.Entity = value;
					if ((value != null))
					{
						value.CRM_AnnualPassPersons.Add(this);
						this._CRM_AnnualPassID = value.ID;
					}
					else
					{
						this._CRM_AnnualPassID = default(int);
					}
					this.SendPropertyChanged("CRM_AnnualPass");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Person_CRM_AnnualPassPerson", Storage="_CRM_Person", ThisKey="CRM_PersonID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Person CRM_Person
		{
			get
			{
				return this._CRM_Person.Entity;
			}
			set
			{
				CRM_Person previousValue = this._CRM_Person.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Person.Entity = null;
						previousValue.CRM_AnnualPassPersons.Remove(this);
					}
					this._CRM_Person.Entity = value;
					if ((value != null))
					{
						value.CRM_AnnualPassPersons.Add(this);
						this._CRM_PersonID = value.ID;
					}
					else
					{
						this._CRM_PersonID = default(int);
					}
					this.SendPropertyChanged("CRM_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
