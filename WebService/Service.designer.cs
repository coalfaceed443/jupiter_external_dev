#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Service
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="jupiter_crm")]
	public partial class ServiceDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertCRM_FormFieldItem(CRM_FormFieldItem instance);
    partial void UpdateCRM_FormFieldItem(CRM_FormFieldItem instance);
    partial void DeleteCRM_FormFieldItem(CRM_FormFieldItem instance);
    partial void InsertCRM_Person(CRM_Person instance);
    partial void UpdateCRM_Person(CRM_Person instance);
    partial void DeleteCRM_Person(CRM_Person instance);
    partial void InsertCRM_FormFieldAnswer(CRM_FormFieldAnswer instance);
    partial void UpdateCRM_FormFieldAnswer(CRM_FormFieldAnswer instance);
    partial void DeleteCRM_FormFieldAnswer(CRM_FormFieldAnswer instance);
    partial void InsertCRM_AnnualPassCard(CRM_AnnualPassCard instance);
    partial void UpdateCRM_AnnualPassCard(CRM_AnnualPassCard instance);
    partial void DeleteCRM_AnnualPassCard(CRM_AnnualPassCard instance);
    partial void InsertCRM_AnnualPass(CRM_AnnualPass instance);
    partial void UpdateCRM_AnnualPass(CRM_AnnualPass instance);
    partial void DeleteCRM_AnnualPass(CRM_AnnualPass instance);
    partial void InsertHoldingPen(HoldingPen instance);
    partial void UpdateHoldingPen(HoldingPen instance);
    partial void DeleteHoldingPen(HoldingPen instance);
    partial void InsertCRM_AnnualPassType(CRM_AnnualPassType instance);
    partial void UpdateCRM_AnnualPassType(CRM_AnnualPassType instance);
    partial void DeleteCRM_AnnualPassType(CRM_AnnualPassType instance);
    #endregion
		
		public ServiceDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["sevenstoriesConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ServiceDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServiceDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServiceDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServiceDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<CRM_FormFieldItem> CRM_FormFieldItems
		{
			get
			{
				return this.GetTable<CRM_FormFieldItem>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Person> CRM_Persons
		{
			get
			{
				return this.GetTable<CRM_Person>();
			}
		}
		
		internal System.Data.Linq.Table<CRM_FormFieldAnswer> CRM_FormFieldAnswers
		{
			get
			{
				return this.GetTable<CRM_FormFieldAnswer>();
			}
		}
		
		public System.Data.Linq.Table<CRM_AnnualPassCard> CRM_AnnualPassCards
		{
			get
			{
				return this.GetTable<CRM_AnnualPassCard>();
			}
		}
		
		public System.Data.Linq.Table<CRM_AnnualPass> CRM_AnnualPasses
		{
			get
			{
				return this.GetTable<CRM_AnnualPass>();
			}
		}
		
		public System.Data.Linq.Table<HoldingPen> HoldingPens
		{
			get
			{
				return this.GetTable<HoldingPen>();
			}
		}
		
		public System.Data.Linq.Table<CRM_AnnualPassType> CRM_AnnualPassTypes
		{
			get
			{
				return this.GetTable<CRM_AnnualPassType>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _CountryCode;
		
		private string _CurrencyCode;
		
		private int _CountryZoneID;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    partial void OnCurrencyCodeChanging(string value);
    partial void OnCurrencyCodeChanged();
    partial void OnCountryZoneIDChanging(int value);
    partial void OnCountryZoneIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Country()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyCode", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string CurrencyCode
		{
			get
			{
				return this._CurrencyCode;
			}
			set
			{
				if ((this._CurrencyCode != value))
				{
					this.OnCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyCode = value;
					this.SendPropertyChanged("CurrencyCode");
					this.OnCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryZoneID", DbType="Int NOT NULL")]
		public int CountryZoneID
		{
			get
			{
				return this._CountryZoneID;
			}
			set
			{
				if ((this._CountryZoneID != value))
				{
					this.OnCountryZoneIDChanging(value);
					this.SendPropertyChanging();
					this._CountryZoneID = value;
					this.SendPropertyChanged("CountryZoneID");
					this.OnCountryZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_FormFieldItem")]
	public partial class CRM_FormFieldItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_FormFieldID;
		
		private string _Label;
		
		private int _OrderNo;
		
		private bool _IsActive;
		
		private bool _IsArchived;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_FormFieldIDChanging(int value);
    partial void OnCRM_FormFieldIDChanged();
    partial void OnLabelChanging(string value);
    partial void OnLabelChanged();
    partial void OnOrderNoChanging(int value);
    partial void OnOrderNoChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    #endregion
		
		public CRM_FormFieldItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_FormFieldID", DbType="Int NOT NULL")]
		public int CRM_FormFieldID
		{
			get
			{
				return this._CRM_FormFieldID;
			}
			set
			{
				if ((this._CRM_FormFieldID != value))
				{
					this.OnCRM_FormFieldIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_FormFieldID = value;
					this.SendPropertyChanged("CRM_FormFieldID");
					this.OnCRM_FormFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="Int NOT NULL")]
		public int OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Person")]
	public partial class CRM_Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _Lastname;
		
		private string _Firstname;
		
		private bool _IsGiftAid;
		
		private string _PreviousNames;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private bool _IsChild;
		
		private bool _IsConcession;
		
		private bool _IsCarerMinder;
		
		private string _PrimaryEmail;
		
		private string _PrimaryTelephone;
		
		private int _CRM_AddressID;
		
		private bool _IsContactEmail;
		
		private bool _IsContactPost;
		
		private bool _IsDeceased;
		
		private string _Reference;
		
		private bool _IsArchived;
		
		private System.DateTime _DateAdded;
		
		private System.DateTime _DateModified;
		
		private bool _IsDoNotMail;
		
		private bool _IsDoNotEmail;
		
		private System.Nullable<int> _WebsiteAccountID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnLastnameChanging(string value);
    partial void OnLastnameChanged();
    partial void OnFirstnameChanging(string value);
    partial void OnFirstnameChanged();
    partial void OnIsGiftAidChanging(bool value);
    partial void OnIsGiftAidChanged();
    partial void OnPreviousNamesChanging(string value);
    partial void OnPreviousNamesChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnIsChildChanging(bool value);
    partial void OnIsChildChanged();
    partial void OnIsConcessionChanging(bool value);
    partial void OnIsConcessionChanged();
    partial void OnIsCarerMinderChanging(bool value);
    partial void OnIsCarerMinderChanged();
    partial void OnPrimaryEmailChanging(string value);
    partial void OnPrimaryEmailChanged();
    partial void OnPrimaryTelephoneChanging(string value);
    partial void OnPrimaryTelephoneChanged();
    partial void OnCRM_AddressIDChanging(int value);
    partial void OnCRM_AddressIDChanged();
    partial void OnIsContactEmailChanging(bool value);
    partial void OnIsContactEmailChanged();
    partial void OnIsContactPostChanging(bool value);
    partial void OnIsContactPostChanged();
    partial void OnIsDeceasedChanging(bool value);
    partial void OnIsDeceasedChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    partial void OnDateAddedChanging(System.DateTime value);
    partial void OnDateAddedChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    partial void OnIsDoNotMailChanging(bool value);
    partial void OnIsDoNotMailChanged();
    partial void OnIsDoNotEmailChanging(bool value);
    partial void OnIsDoNotEmailChanged();
    partial void OnWebsiteAccountIDChanging(System.Nullable<int> value);
    partial void OnWebsiteAccountIDChanged();
    #endregion
		
		public CRM_Person()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this.OnLastnameChanging(value);
					this.SendPropertyChanging();
					this._Lastname = value;
					this.SendPropertyChanged("Lastname");
					this.OnLastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this.OnFirstnameChanging(value);
					this.SendPropertyChanging();
					this._Firstname = value;
					this.SendPropertyChanged("Firstname");
					this.OnFirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGiftAid", DbType="Bit NOT NULL")]
		public bool IsGiftAid
		{
			get
			{
				return this._IsGiftAid;
			}
			set
			{
				if ((this._IsGiftAid != value))
				{
					this.OnIsGiftAidChanging(value);
					this.SendPropertyChanging();
					this._IsGiftAid = value;
					this.SendPropertyChanged("IsGiftAid");
					this.OnIsGiftAidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousNames", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PreviousNames
		{
			get
			{
				return this._PreviousNames;
			}
			set
			{
				if ((this._PreviousNames != value))
				{
					this.OnPreviousNamesChanging(value);
					this.SendPropertyChanging();
					this._PreviousNames = value;
					this.SendPropertyChanged("PreviousNames");
					this.OnPreviousNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChild", DbType="Bit NOT NULL")]
		public bool IsChild
		{
			get
			{
				return this._IsChild;
			}
			set
			{
				if ((this._IsChild != value))
				{
					this.OnIsChildChanging(value);
					this.SendPropertyChanging();
					this._IsChild = value;
					this.SendPropertyChanged("IsChild");
					this.OnIsChildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConcession", DbType="Bit NOT NULL")]
		public bool IsConcession
		{
			get
			{
				return this._IsConcession;
			}
			set
			{
				if ((this._IsConcession != value))
				{
					this.OnIsConcessionChanging(value);
					this.SendPropertyChanging();
					this._IsConcession = value;
					this.SendPropertyChanged("IsConcession");
					this.OnIsConcessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCarerMinder", DbType="Bit NOT NULL")]
		public bool IsCarerMinder
		{
			get
			{
				return this._IsCarerMinder;
			}
			set
			{
				if ((this._IsCarerMinder != value))
				{
					this.OnIsCarerMinderChanging(value);
					this.SendPropertyChanging();
					this._IsCarerMinder = value;
					this.SendPropertyChanged("IsCarerMinder");
					this.OnIsCarerMinderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryEmail", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string PrimaryEmail
		{
			get
			{
				return this._PrimaryEmail;
			}
			set
			{
				if ((this._PrimaryEmail != value))
				{
					this.OnPrimaryEmailChanging(value);
					this.SendPropertyChanging();
					this._PrimaryEmail = value;
					this.SendPropertyChanged("PrimaryEmail");
					this.OnPrimaryEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryTelephone", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string PrimaryTelephone
		{
			get
			{
				return this._PrimaryTelephone;
			}
			set
			{
				if ((this._PrimaryTelephone != value))
				{
					this.OnPrimaryTelephoneChanging(value);
					this.SendPropertyChanging();
					this._PrimaryTelephone = value;
					this.SendPropertyChanged("PrimaryTelephone");
					this.OnPrimaryTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_AddressID", DbType="Int NOT NULL")]
		public int CRM_AddressID
		{
			get
			{
				return this._CRM_AddressID;
			}
			set
			{
				if ((this._CRM_AddressID != value))
				{
					this.OnCRM_AddressIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_AddressID = value;
					this.SendPropertyChanged("CRM_AddressID");
					this.OnCRM_AddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsContactEmail", DbType="Bit NOT NULL")]
		public bool IsContactEmail
		{
			get
			{
				return this._IsContactEmail;
			}
			set
			{
				if ((this._IsContactEmail != value))
				{
					this.OnIsContactEmailChanging(value);
					this.SendPropertyChanging();
					this._IsContactEmail = value;
					this.SendPropertyChanged("IsContactEmail");
					this.OnIsContactEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsContactPost", DbType="Bit NOT NULL")]
		public bool IsContactPost
		{
			get
			{
				return this._IsContactPost;
			}
			set
			{
				if ((this._IsContactPost != value))
				{
					this.OnIsContactPostChanging(value);
					this.SendPropertyChanging();
					this._IsContactPost = value;
					this.SendPropertyChanged("IsContactPost");
					this.OnIsContactPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeceased", DbType="Bit NOT NULL")]
		public bool IsDeceased
		{
			get
			{
				return this._IsDeceased;
			}
			set
			{
				if ((this._IsDeceased != value))
				{
					this.OnIsDeceasedChanging(value);
					this.SendPropertyChanging();
					this._IsDeceased = value;
					this.SendPropertyChanged("IsDeceased");
					this.OnIsDeceasedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(17)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDoNotMail", DbType="Bit NOT NULL")]
		public bool IsDoNotMail
		{
			get
			{
				return this._IsDoNotMail;
			}
			set
			{
				if ((this._IsDoNotMail != value))
				{
					this.OnIsDoNotMailChanging(value);
					this.SendPropertyChanging();
					this._IsDoNotMail = value;
					this.SendPropertyChanged("IsDoNotMail");
					this.OnIsDoNotMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDoNotEmail", DbType="Bit NOT NULL")]
		public bool IsDoNotEmail
		{
			get
			{
				return this._IsDoNotEmail;
			}
			set
			{
				if ((this._IsDoNotEmail != value))
				{
					this.OnIsDoNotEmailChanging(value);
					this.SendPropertyChanging();
					this._IsDoNotEmail = value;
					this.SendPropertyChanged("IsDoNotEmail");
					this.OnIsDoNotEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebsiteAccountID", DbType="Int")]
		public System.Nullable<int> WebsiteAccountID
		{
			get
			{
				return this._WebsiteAccountID;
			}
			set
			{
				if ((this._WebsiteAccountID != value))
				{
					this.OnWebsiteAccountIDChanging(value);
					this.SendPropertyChanging();
					this._WebsiteAccountID = value;
					this.SendPropertyChanged("WebsiteAccountID");
					this.OnWebsiteAccountIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_FormFieldAnswer")]
	internal partial class CRM_FormFieldAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_FormFieldID;
		
		private string _TargetReference;
		
		private string _Answer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_FormFieldIDChanging(int value);
    partial void OnCRM_FormFieldIDChanged();
    partial void OnTargetReferenceChanging(string value);
    partial void OnTargetReferenceChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    #endregion
		
		public CRM_FormFieldAnswer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_FormFieldID", DbType="Int NOT NULL")]
		public int CRM_FormFieldID
		{
			get
			{
				return this._CRM_FormFieldID;
			}
			set
			{
				if ((this._CRM_FormFieldID != value))
				{
					this.OnCRM_FormFieldIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_FormFieldID = value;
					this.SendPropertyChanged("CRM_FormFieldID");
					this.OnCRM_FormFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TargetReference
		{
			get
			{
				return this._TargetReference;
			}
			set
			{
				if ((this._TargetReference != value))
				{
					this.OnTargetReferenceChanging(value);
					this.SendPropertyChanging();
					this._TargetReference = value;
					this.SendPropertyChanged("TargetReference");
					this.OnTargetReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_AnnualPassCard")]
	public partial class CRM_AnnualPassCard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MembershipNumber;
		
		private EntitySet<CRM_AnnualPass> _CRM_AnnualPasses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMembershipNumberChanging(int value);
    partial void OnMembershipNumberChanged();
    #endregion
		
		public CRM_AnnualPassCard()
		{
			this._CRM_AnnualPasses = new EntitySet<CRM_AnnualPass>(new Action<CRM_AnnualPass>(this.attach_CRM_AnnualPasses), new Action<CRM_AnnualPass>(this.detach_CRM_AnnualPasses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MembershipNumber", DbType="Int NOT NULL")]
		public int MembershipNumber
		{
			get
			{
				return this._MembershipNumber;
			}
			set
			{
				if ((this._MembershipNumber != value))
				{
					this.OnMembershipNumberChanging(value);
					this.SendPropertyChanging();
					this._MembershipNumber = value;
					this.SendPropertyChanged("MembershipNumber");
					this.OnMembershipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_AnnualPassCard_CRM_AnnualPass", Storage="_CRM_AnnualPasses", ThisKey="ID", OtherKey="CRM_AnnualPassCardID")]
		public EntitySet<CRM_AnnualPass> CRM_AnnualPasses
		{
			get
			{
				return this._CRM_AnnualPasses;
			}
			set
			{
				this._CRM_AnnualPasses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_AnnualPasses(CRM_AnnualPass entity)
		{
			this.SendPropertyChanging();
			entity.CRM_AnnualPassCard = this;
		}
		
		private void detach_CRM_AnnualPasses(CRM_AnnualPass entity)
		{
			this.SendPropertyChanging();
			entity.CRM_AnnualPassCard = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_AnnualPass")]
	public partial class CRM_AnnualPass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_AnnualPassCardID;
		
		private int _CRM_AnnualPassTypeID;
		
		private decimal _AmountPaid;
		
		private string _DiscountApplied;
		
		private string _PrimaryContactReference;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _ExpiryDate;
		
		private bool _IsPending;
		
		private bool _IsArchived;
		
		private System.Nullable<int> _CRM_OfferID;
		
		private string _Reference;
		
		private byte _PaymentMethod;
		
		private EntityRef<CRM_AnnualPassCard> _CRM_AnnualPassCard;
		
		private EntityRef<CRM_AnnualPassType> _CRM_AnnualPassType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_AnnualPassCardIDChanging(int value);
    partial void OnCRM_AnnualPassCardIDChanged();
    partial void OnCRM_AnnualPassTypeIDChanging(int value);
    partial void OnCRM_AnnualPassTypeIDChanged();
    partial void OnAmountPaidChanging(decimal value);
    partial void OnAmountPaidChanged();
    partial void OnDiscountAppliedChanging(string value);
    partial void OnDiscountAppliedChanged();
    partial void OnPrimaryContactReferenceChanging(string value);
    partial void OnPrimaryContactReferenceChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnExpiryDateChanging(System.DateTime value);
    partial void OnExpiryDateChanged();
    partial void OnIsPendingChanging(bool value);
    partial void OnIsPendingChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    partial void OnCRM_OfferIDChanging(System.Nullable<int> value);
    partial void OnCRM_OfferIDChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnPaymentMethodChanging(byte value);
    partial void OnPaymentMethodChanged();
    #endregion
		
		public CRM_AnnualPass()
		{
			this._CRM_AnnualPassCard = default(EntityRef<CRM_AnnualPassCard>);
			this._CRM_AnnualPassType = default(EntityRef<CRM_AnnualPassType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_AnnualPassCardID", DbType="Int NOT NULL")]
		public int CRM_AnnualPassCardID
		{
			get
			{
				return this._CRM_AnnualPassCardID;
			}
			set
			{
				if ((this._CRM_AnnualPassCardID != value))
				{
					if (this._CRM_AnnualPassCard.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_AnnualPassCardIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_AnnualPassCardID = value;
					this.SendPropertyChanged("CRM_AnnualPassCardID");
					this.OnCRM_AnnualPassCardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_AnnualPassTypeID", DbType="Int NOT NULL")]
		public int CRM_AnnualPassTypeID
		{
			get
			{
				return this._CRM_AnnualPassTypeID;
			}
			set
			{
				if ((this._CRM_AnnualPassTypeID != value))
				{
					if (this._CRM_AnnualPassType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_AnnualPassTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_AnnualPassTypeID = value;
					this.SendPropertyChanged("CRM_AnnualPassTypeID");
					this.OnCRM_AnnualPassTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountPaid", DbType="Money NOT NULL")]
		public decimal AmountPaid
		{
			get
			{
				return this._AmountPaid;
			}
			set
			{
				if ((this._AmountPaid != value))
				{
					this.OnAmountPaidChanging(value);
					this.SendPropertyChanging();
					this._AmountPaid = value;
					this.SendPropertyChanged("AmountPaid");
					this.OnAmountPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountApplied", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string DiscountApplied
		{
			get
			{
				return this._DiscountApplied;
			}
			set
			{
				if ((this._DiscountApplied != value))
				{
					this.OnDiscountAppliedChanging(value);
					this.SendPropertyChanging();
					this._DiscountApplied = value;
					this.SendPropertyChanged("DiscountApplied");
					this.OnDiscountAppliedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryContactReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PrimaryContactReference
		{
			get
			{
				return this._PrimaryContactReference;
			}
			set
			{
				if ((this._PrimaryContactReference != value))
				{
					this.OnPrimaryContactReferenceChanging(value);
					this.SendPropertyChanging();
					this._PrimaryContactReference = value;
					this.SendPropertyChanged("PrimaryContactReference");
					this.OnPrimaryContactReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime NOT NULL")]
		public System.DateTime ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPending", DbType="Bit NOT NULL")]
		public bool IsPending
		{
			get
			{
				return this._IsPending;
			}
			set
			{
				if ((this._IsPending != value))
				{
					this.OnIsPendingChanging(value);
					this.SendPropertyChanging();
					this._IsPending = value;
					this.SendPropertyChanged("IsPending");
					this.OnIsPendingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_OfferID", DbType="Int")]
		public System.Nullable<int> CRM_OfferID
		{
			get
			{
				return this._CRM_OfferID;
			}
			set
			{
				if ((this._CRM_OfferID != value))
				{
					this.OnCRM_OfferIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_OfferID = value;
					this.SendPropertyChanged("CRM_OfferID");
					this.OnCRM_OfferIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(21)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethod", DbType="TinyInt NOT NULL")]
		public byte PaymentMethod
		{
			get
			{
				return this._PaymentMethod;
			}
			set
			{
				if ((this._PaymentMethod != value))
				{
					this.OnPaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethod = value;
					this.SendPropertyChanged("PaymentMethod");
					this.OnPaymentMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_AnnualPassCard_CRM_AnnualPass", Storage="_CRM_AnnualPassCard", ThisKey="CRM_AnnualPassCardID", OtherKey="ID", IsForeignKey=true)]
		public CRM_AnnualPassCard CRM_AnnualPassCard
		{
			get
			{
				return this._CRM_AnnualPassCard.Entity;
			}
			set
			{
				CRM_AnnualPassCard previousValue = this._CRM_AnnualPassCard.Entity;
				if (((previousValue != value) 
							|| (this._CRM_AnnualPassCard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_AnnualPassCard.Entity = null;
						previousValue.CRM_AnnualPasses.Remove(this);
					}
					this._CRM_AnnualPassCard.Entity = value;
					if ((value != null))
					{
						value.CRM_AnnualPasses.Add(this);
						this._CRM_AnnualPassCardID = value.ID;
					}
					else
					{
						this._CRM_AnnualPassCardID = default(int);
					}
					this.SendPropertyChanged("CRM_AnnualPassCard");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_AnnualPassType_CRM_AnnualPass", Storage="_CRM_AnnualPassType", ThisKey="CRM_AnnualPassTypeID", OtherKey="ID", IsForeignKey=true)]
		public CRM_AnnualPassType CRM_AnnualPassType
		{
			get
			{
				return this._CRM_AnnualPassType.Entity;
			}
			set
			{
				CRM_AnnualPassType previousValue = this._CRM_AnnualPassType.Entity;
				if (((previousValue != value) 
							|| (this._CRM_AnnualPassType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_AnnualPassType.Entity = null;
						previousValue.CRM_AnnualPasses.Remove(this);
					}
					this._CRM_AnnualPassType.Entity = value;
					if ((value != null))
					{
						value.CRM_AnnualPasses.Add(this);
						this._CRM_AnnualPassTypeID = value.ID;
					}
					else
					{
						this._CRM_AnnualPassTypeID = default(int);
					}
					this.SendPropertyChanged("CRM_AnnualPassType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoldingPen")]
	public partial class HoldingPen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _Firstname;
		
		private string _Lastname;
		
		private string _Email;
		
		private System.DateTime _DateReceived;
		
		private System.Nullable<System.DateTime> _DateCommitted;
		
		private byte _OriginType;
		
		private string _OriginDescription;
		
		private int _OriginAccountID;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _City;
		
		private string _County;
		
		private string _Postcode;
		
		private int _CountryID;
		
		private string _Telephone;
		
		private string _InterestObjects;
		
		private bool _DoNotMail;
		
		private bool _DoNotEmail;
		
		private bool _AlwaysSendPassInfo;
		
		private string _MembershipA;
		
		private string _MembershipB;
		
		private string _BasketContents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnFirstnameChanging(string value);
    partial void OnFirstnameChanged();
    partial void OnLastnameChanging(string value);
    partial void OnLastnameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDateReceivedChanging(System.DateTime value);
    partial void OnDateReceivedChanged();
    partial void OnDateCommittedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCommittedChanged();
    partial void OnOriginTypeChanging(byte value);
    partial void OnOriginTypeChanged();
    partial void OnOriginDescriptionChanging(string value);
    partial void OnOriginDescriptionChanged();
    partial void OnOriginAccountIDChanging(int value);
    partial void OnOriginAccountIDChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnCountyChanging(string value);
    partial void OnCountyChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnInterestObjectsChanging(string value);
    partial void OnInterestObjectsChanged();
    partial void OnDoNotMailChanging(bool value);
    partial void OnDoNotMailChanged();
    partial void OnDoNotEmailChanging(bool value);
    partial void OnDoNotEmailChanged();
    partial void OnAlwaysSendPassInfoChanging(bool value);
    partial void OnAlwaysSendPassInfoChanged();
    partial void OnMembershipAChanging(string value);
    partial void OnMembershipAChanged();
    partial void OnMembershipBChanging(string value);
    partial void OnMembershipBChanged();
    partial void OnBasketContentsChanging(string value);
    partial void OnBasketContentsChanged();
    #endregion
		
		public HoldingPen()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this.OnFirstnameChanging(value);
					this.SendPropertyChanging();
					this._Firstname = value;
					this.SendPropertyChanged("Firstname");
					this.OnFirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this.OnLastnameChanging(value);
					this.SendPropertyChanging();
					this._Lastname = value;
					this.SendPropertyChanged("Lastname");
					this.OnLastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateReceived", DbType="DateTime NOT NULL")]
		public System.DateTime DateReceived
		{
			get
			{
				return this._DateReceived;
			}
			set
			{
				if ((this._DateReceived != value))
				{
					this.OnDateReceivedChanging(value);
					this.SendPropertyChanging();
					this._DateReceived = value;
					this.SendPropertyChanged("DateReceived");
					this.OnDateReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCommitted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCommitted
		{
			get
			{
				return this._DateCommitted;
			}
			set
			{
				if ((this._DateCommitted != value))
				{
					this.OnDateCommittedChanging(value);
					this.SendPropertyChanging();
					this._DateCommitted = value;
					this.SendPropertyChanged("DateCommitted");
					this.OnDateCommittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginType", DbType="TinyInt NOT NULL")]
		public byte OriginType
		{
			get
			{
				return this._OriginType;
			}
			set
			{
				if ((this._OriginType != value))
				{
					this.OnOriginTypeChanging(value);
					this.SendPropertyChanging();
					this._OriginType = value;
					this.SendPropertyChanged("OriginType");
					this.OnOriginTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginDescription", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string OriginDescription
		{
			get
			{
				return this._OriginDescription;
			}
			set
			{
				if ((this._OriginDescription != value))
				{
					this.OnOriginDescriptionChanging(value);
					this.SendPropertyChanging();
					this._OriginDescription = value;
					this.SendPropertyChanged("OriginDescription");
					this.OnOriginDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginAccountID", DbType="Int NOT NULL")]
		public int OriginAccountID
		{
			get
			{
				return this._OriginAccountID;
			}
			set
			{
				if ((this._OriginAccountID != value))
				{
					this.OnOriginAccountIDChanging(value);
					this.SendPropertyChanging();
					this._OriginAccountID = value;
					this.SendPropertyChanged("OriginAccountID");
					this.OnOriginAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address3", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this.OnAddress3Changing(value);
					this.SendPropertyChanging();
					this._Address3 = value;
					this.SendPropertyChanged("Address3");
					this.OnAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_County", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string County
		{
			get
			{
				return this._County;
			}
			set
			{
				if ((this._County != value))
				{
					this.OnCountyChanging(value);
					this.SendPropertyChanging();
					this._County = value;
					this.SendPropertyChanged("County");
					this.OnCountyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int NOT NULL")]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestObjects", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InterestObjects
		{
			get
			{
				return this._InterestObjects;
			}
			set
			{
				if ((this._InterestObjects != value))
				{
					this.OnInterestObjectsChanging(value);
					this.SendPropertyChanging();
					this._InterestObjects = value;
					this.SendPropertyChanged("InterestObjects");
					this.OnInterestObjectsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoNotMail", DbType="Bit NOT NULL")]
		public bool DoNotMail
		{
			get
			{
				return this._DoNotMail;
			}
			set
			{
				if ((this._DoNotMail != value))
				{
					this.OnDoNotMailChanging(value);
					this.SendPropertyChanging();
					this._DoNotMail = value;
					this.SendPropertyChanged("DoNotMail");
					this.OnDoNotMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoNotEmail", DbType="Bit NOT NULL")]
		public bool DoNotEmail
		{
			get
			{
				return this._DoNotEmail;
			}
			set
			{
				if ((this._DoNotEmail != value))
				{
					this.OnDoNotEmailChanging(value);
					this.SendPropertyChanging();
					this._DoNotEmail = value;
					this.SendPropertyChanged("DoNotEmail");
					this.OnDoNotEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlwaysSendPassInfo", DbType="Bit NOT NULL")]
		public bool AlwaysSendPassInfo
		{
			get
			{
				return this._AlwaysSendPassInfo;
			}
			set
			{
				if ((this._AlwaysSendPassInfo != value))
				{
					this.OnAlwaysSendPassInfoChanging(value);
					this.SendPropertyChanging();
					this._AlwaysSendPassInfo = value;
					this.SendPropertyChanged("AlwaysSendPassInfo");
					this.OnAlwaysSendPassInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MembershipA", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string MembershipA
		{
			get
			{
				return this._MembershipA;
			}
			set
			{
				if ((this._MembershipA != value))
				{
					this.OnMembershipAChanging(value);
					this.SendPropertyChanging();
					this._MembershipA = value;
					this.SendPropertyChanged("MembershipA");
					this.OnMembershipAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MembershipB", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string MembershipB
		{
			get
			{
				return this._MembershipB;
			}
			set
			{
				if ((this._MembershipB != value))
				{
					this.OnMembershipBChanging(value);
					this.SendPropertyChanging();
					this._MembershipB = value;
					this.SendPropertyChanged("MembershipB");
					this.OnMembershipBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasketContents", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string BasketContents
		{
			get
			{
				return this._BasketContents;
			}
			set
			{
				if ((this._BasketContents != value))
				{
					this.OnBasketContentsChanging(value);
					this.SendPropertyChanging();
					this._BasketContents = value;
					this.SendPropertyChanged("BasketContents");
					this.OnBasketContentsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_AnnualPassType")]
	public partial class CRM_AnnualPassType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _IsArchived;
		
		private decimal _DefaultPrice;
		
		private bool _IsWebsite;
		
		private bool _IsJoint;
		
		private EntitySet<CRM_AnnualPass> _CRM_AnnualPasses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    partial void OnDefaultPriceChanging(decimal value);
    partial void OnDefaultPriceChanged();
    partial void OnIsWebsiteChanging(bool value);
    partial void OnIsWebsiteChanged();
    partial void OnIsJointChanging(bool value);
    partial void OnIsJointChanged();
    #endregion
		
		public CRM_AnnualPassType()
		{
			this._CRM_AnnualPasses = new EntitySet<CRM_AnnualPass>(new Action<CRM_AnnualPass>(this.attach_CRM_AnnualPasses), new Action<CRM_AnnualPass>(this.detach_CRM_AnnualPasses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultPrice", DbType="Money NOT NULL")]
		public decimal DefaultPrice
		{
			get
			{
				return this._DefaultPrice;
			}
			set
			{
				if ((this._DefaultPrice != value))
				{
					this.OnDefaultPriceChanging(value);
					this.SendPropertyChanging();
					this._DefaultPrice = value;
					this.SendPropertyChanged("DefaultPrice");
					this.OnDefaultPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWebsite", DbType="Bit NOT NULL")]
		public bool IsWebsite
		{
			get
			{
				return this._IsWebsite;
			}
			set
			{
				if ((this._IsWebsite != value))
				{
					this.OnIsWebsiteChanging(value);
					this.SendPropertyChanging();
					this._IsWebsite = value;
					this.SendPropertyChanged("IsWebsite");
					this.OnIsWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsJoint", DbType="Bit NOT NULL")]
		public bool IsJoint
		{
			get
			{
				return this._IsJoint;
			}
			set
			{
				if ((this._IsJoint != value))
				{
					this.OnIsJointChanging(value);
					this.SendPropertyChanging();
					this._IsJoint = value;
					this.SendPropertyChanged("IsJoint");
					this.OnIsJointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_AnnualPassType_CRM_AnnualPass", Storage="_CRM_AnnualPasses", ThisKey="ID", OtherKey="CRM_AnnualPassTypeID")]
		public EntitySet<CRM_AnnualPass> CRM_AnnualPasses
		{
			get
			{
				return this._CRM_AnnualPasses;
			}
			set
			{
				this._CRM_AnnualPasses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_AnnualPasses(CRM_AnnualPass entity)
		{
			this.SendPropertyChanging();
			entity.CRM_AnnualPassType = this;
		}
		
		private void detach_CRM_AnnualPasses(CRM_AnnualPass entity)
		{
			this.SendPropertyChanging();
			entity.CRM_AnnualPassType = null;
		}
	}
}
#pragma warning restore 1591
