#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CRM.Code.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="jupiter_crm")]
	public partial class MainDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCRM_Address(CRM_Address instance);
    partial void UpdateCRM_Address(CRM_Address instance);
    partial void DeleteCRM_Address(CRM_Address instance);
    partial void InsertCRM_CalendarVenue(CRM_CalendarVenue instance);
    partial void UpdateCRM_CalendarVenue(CRM_CalendarVenue instance);
    partial void DeleteCRM_CalendarVenue(CRM_CalendarVenue instance);
    partial void InsertCRM_Role(CRM_Role instance);
    partial void UpdateCRM_Role(CRM_Role instance);
    partial void DeleteCRM_Role(CRM_Role instance);
    partial void InsertCRM_SchoolKeystage(CRM_SchoolKeystage instance);
    partial void UpdateCRM_SchoolKeystage(CRM_SchoolKeystage instance);
    partial void DeleteCRM_SchoolKeystage(CRM_SchoolKeystage instance);
    partial void InsertCRM_Source(CRM_Source instance);
    partial void UpdateCRM_Source(CRM_Source instance);
    partial void DeleteCRM_Source(CRM_Source instance);
    partial void InsertCRM_Tag(CRM_Tag instance);
    partial void UpdateCRM_Tag(CRM_Tag instance);
    partial void DeleteCRM_Tag(CRM_Tag instance);
    partial void InsertCRM_Transaction(CRM_Transaction instance);
    partial void UpdateCRM_Transaction(CRM_Transaction instance);
    partial void DeleteCRM_Transaction(CRM_Transaction instance);
    partial void InsertAuthSession(AuthSession instance);
    partial void UpdateAuthSession(AuthSession instance);
    partial void DeleteAuthSession(AuthSession instance);
    partial void InsertAdminPermission(AdminPermission instance);
    partial void UpdateAdminPermission(AdminPermission instance);
    partial void DeleteAdminPermission(AdminPermission instance);
    partial void InsertSetting(Setting instance);
    partial void UpdateSetting(Setting instance);
    partial void DeleteSetting(Setting instance);
    partial void InsertTableHistory(TableHistory instance);
    partial void UpdateTableHistory(TableHistory instance);
    partial void DeleteTableHistory(TableHistory instance);
    partial void Insert_DataTableColumn(_DataTableColumn instance);
    partial void Update_DataTableColumn(_DataTableColumn instance);
    partial void Delete_DataTableColumn(_DataTableColumn instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertCRM_Note(CRM_Note instance);
    partial void UpdateCRM_Note(CRM_Note instance);
    partial void DeleteCRM_Note(CRM_Note instance);
    partial void InsertCRM_LEA(CRM_LEA instance);
    partial void UpdateCRM_LEA(CRM_LEA instance);
    partial void DeleteCRM_LEA(CRM_LEA instance);
    partial void InsertCRM_FamilyPerson(CRM_FamilyPerson instance);
    partial void UpdateCRM_FamilyPerson(CRM_FamilyPerson instance);
    partial void DeleteCRM_FamilyPerson(CRM_FamilyPerson instance);
    partial void InsertCRM_CalendarType(CRM_CalendarType instance);
    partial void UpdateCRM_CalendarType(CRM_CalendarType instance);
    partial void DeleteCRM_CalendarType(CRM_CalendarType instance);
    partial void InsertCRM_TaskParticipant(CRM_TaskParticipant instance);
    partial void UpdateCRM_TaskParticipant(CRM_TaskParticipant instance);
    partial void DeleteCRM_TaskParticipant(CRM_TaskParticipant instance);
    partial void InsertCRM_Task(CRM_Task instance);
    partial void UpdateCRM_Task(CRM_Task instance);
    partial void DeleteCRM_Task(CRM_Task instance);
    partial void InsertCRM_Venue(CRM_Venue instance);
    partial void UpdateCRM_Venue(CRM_Venue instance);
    partial void DeleteCRM_Venue(CRM_Venue instance);
    partial void InsertCRM_Family(CRM_Family instance);
    partial void UpdateCRM_Family(CRM_Family instance);
    partial void DeleteCRM_Family(CRM_Family instance);
    partial void InsertCRM_CalendarPerHead(CRM_CalendarPerHead instance);
    partial void UpdateCRM_CalendarPerHead(CRM_CalendarPerHead instance);
    partial void DeleteCRM_CalendarPerHead(CRM_CalendarPerHead instance);
    partial void InsertCRM_AnnualPassCard(CRM_AnnualPassCard instance);
    partial void UpdateCRM_AnnualPassCard(CRM_AnnualPassCard instance);
    partial void DeleteCRM_AnnualPassCard(CRM_AnnualPassCard instance);
    partial void InsertCRM_AnnualPassPerson(CRM_AnnualPassPerson instance);
    partial void UpdateCRM_AnnualPassPerson(CRM_AnnualPassPerson instance);
    partial void DeleteCRM_AnnualPassPerson(CRM_AnnualPassPerson instance);
    partial void InsertCRM_CalendarAttendance(CRM_CalendarAttendance instance);
    partial void UpdateCRM_CalendarAttendance(CRM_CalendarAttendance instance);
    partial void DeleteCRM_CalendarAttendance(CRM_CalendarAttendance instance);
    partial void InsertEvent(Event instance);
    partial void UpdateEvent(Event instance);
    partial void DeleteEvent(Event instance);
    partial void InsertCRM_CalendarParty(CRM_CalendarParty instance);
    partial void UpdateCRM_CalendarParty(CRM_CalendarParty instance);
    partial void DeleteCRM_CalendarParty(CRM_CalendarParty instance);
    partial void InsertCRM_Package(CRM_Package instance);
    partial void UpdateCRM_Package(CRM_Package instance);
    partial void DeleteCRM_Package(CRM_Package instance);
    partial void Insert_DataTable(_DataTable instance);
    partial void Update_DataTable(_DataTable instance);
    partial void Delete_DataTable(_DataTable instance);
    partial void InsertCRM_FormField(CRM_FormField instance);
    partial void UpdateCRM_FormField(CRM_FormField instance);
    partial void DeleteCRM_FormField(CRM_FormField instance);
    partial void InsertCRM_FormFieldItem(CRM_FormFieldItem instance);
    partial void UpdateCRM_FormFieldItem(CRM_FormFieldItem instance);
    partial void DeleteCRM_FormFieldItem(CRM_FormFieldItem instance);
    partial void InsertCRM_NoteAdminRead(CRM_NoteAdminRead instance);
    partial void UpdateCRM_NoteAdminRead(CRM_NoteAdminRead instance);
    partial void DeleteCRM_NoteAdminRead(CRM_NoteAdminRead instance);
    partial void InsertAdminDataQuery(AdminDataQuery instance);
    partial void UpdateAdminDataQuery(AdminDataQuery instance);
    partial void DeleteAdminDataQuery(AdminDataQuery instance);
    partial void InsertAdminDataQueryFilter(AdminDataQueryFilter instance);
    partial void UpdateAdminDataQueryFilter(AdminDataQueryFilter instance);
    partial void DeleteAdminDataQueryFilter(AdminDataQueryFilter instance);
    partial void InsertCRM_FundraisingReason(CRM_FundraisingReason instance);
    partial void UpdateCRM_FundraisingReason(CRM_FundraisingReason instance);
    partial void DeleteCRM_FundraisingReason(CRM_FundraisingReason instance);
    partial void InsertCRM_FundraisingSplit(CRM_FundraisingSplit instance);
    partial void UpdateCRM_FundraisingSplit(CRM_FundraisingSplit instance);
    partial void DeleteCRM_FundraisingSplit(CRM_FundraisingSplit instance);
    partial void InsertCRM_PaymentType(CRM_PaymentType instance);
    partial void UpdateCRM_PaymentType(CRM_PaymentType instance);
    partial void DeleteCRM_PaymentType(CRM_PaymentType instance);
    partial void InsertCRM_Fund(CRM_Fund instance);
    partial void UpdateCRM_Fund(CRM_Fund instance);
    partial void DeleteCRM_Fund(CRM_Fund instance);
    partial void InsertCRM_OrganisationType(CRM_OrganisationType instance);
    partial void UpdateCRM_OrganisationType(CRM_OrganisationType instance);
    partial void DeleteCRM_OrganisationType(CRM_OrganisationType instance);
    partial void InsertCRM_SystemAccess(CRM_SystemAccess instance);
    partial void UpdateCRM_SystemAccess(CRM_SystemAccess instance);
    partial void DeleteCRM_SystemAccess(CRM_SystemAccess instance);
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertCRM_KeyStage(CRM_KeyStage instance);
    partial void UpdateCRM_KeyStage(CRM_KeyStage instance);
    partial void DeleteCRM_KeyStage(CRM_KeyStage instance);
    partial void InsertCRM_Offer(CRM_Offer instance);
    partial void UpdateCRM_Offer(CRM_Offer instance);
    partial void DeleteCRM_Offer(CRM_Offer instance);
    partial void InsertCRM_NavHistory(CRM_NavHistory instance);
    partial void UpdateCRM_NavHistory(CRM_NavHistory instance);
    partial void DeleteCRM_NavHistory(CRM_NavHistory instance);
    partial void InsertCRM_Title(CRM_Title instance);
    partial void UpdateCRM_Title(CRM_Title instance);
    partial void DeleteCRM_Title(CRM_Title instance);
    partial void InsertCRM_OrganisationSchool(CRM_OrganisationSchool instance);
    partial void UpdateCRM_OrganisationSchool(CRM_OrganisationSchool instance);
    partial void DeleteCRM_OrganisationSchool(CRM_OrganisationSchool instance);
    partial void InsertCRM_CalendarInvite(CRM_CalendarInvite instance);
    partial void UpdateCRM_CalendarInvite(CRM_CalendarInvite instance);
    partial void DeleteCRM_CalendarInvite(CRM_CalendarInvite instance);
    partial void InsertCRM_SchoolType(CRM_SchoolType instance);
    partial void UpdateCRM_SchoolType(CRM_SchoolType instance);
    partial void DeleteCRM_SchoolType(CRM_SchoolType instance);
    partial void InsertCRM_Exhibition(CRM_Exhibition instance);
    partial void UpdateCRM_Exhibition(CRM_Exhibition instance);
    partial void DeleteCRM_Exhibition(CRM_Exhibition instance);
    partial void InsertCRM_School(CRM_School instance);
    partial void UpdateCRM_School(CRM_School instance);
    partial void DeleteCRM_School(CRM_School instance);
    partial void InsertCRM_Region(CRM_Region instance);
    partial void UpdateCRM_Region(CRM_Region instance);
    partial void DeleteCRM_Region(CRM_Region instance);
    partial void InsertCRM_Person(CRM_Person instance);
    partial void UpdateCRM_Person(CRM_Person instance);
    partial void DeleteCRM_Person(CRM_Person instance);
    partial void InsertCRM_CalendarAdmin(CRM_CalendarAdmin instance);
    partial void UpdateCRM_CalendarAdmin(CRM_CalendarAdmin instance);
    partial void DeleteCRM_CalendarAdmin(CRM_CalendarAdmin instance);
    partial void InsertCRM_PersonSchool(CRM_PersonSchool instance);
    partial void UpdateCRM_PersonSchool(CRM_PersonSchool instance);
    partial void DeleteCRM_PersonSchool(CRM_PersonSchool instance);
    partial void InsertCRM_PersonOrganisation(CRM_PersonOrganisation instance);
    partial void UpdateCRM_PersonOrganisation(CRM_PersonOrganisation instance);
    partial void DeleteCRM_PersonOrganisation(CRM_PersonOrganisation instance);
    partial void InsertCRM_PersonPersonal(CRM_PersonPersonal instance);
    partial void UpdateCRM_PersonPersonal(CRM_PersonPersonal instance);
    partial void DeleteCRM_PersonPersonal(CRM_PersonPersonal instance);
    partial void InsertCRM_Organisation(CRM_Organisation instance);
    partial void UpdateCRM_Organisation(CRM_Organisation instance);
    partial void DeleteCRM_Organisation(CRM_Organisation instance);
    partial void InsertCRM_SystemAccessAdmin(CRM_SystemAccessAdmin instance);
    partial void UpdateCRM_SystemAccessAdmin(CRM_SystemAccessAdmin instance);
    partial void DeleteCRM_SystemAccessAdmin(CRM_SystemAccessAdmin instance);
    partial void InsertCRM_CalendarCPD(CRM_CalendarCPD instance);
    partial void UpdateCRM_CalendarCPD(CRM_CalendarCPD instance);
    partial void DeleteCRM_CalendarCPD(CRM_CalendarCPD instance);
    partial void InsertCRM_CalendarGroupBooking(CRM_CalendarGroupBooking instance);
    partial void UpdateCRM_CalendarGroupBooking(CRM_CalendarGroupBooking instance);
    partial void DeleteCRM_CalendarGroupBooking(CRM_CalendarGroupBooking instance);
    partial void InsertCRM_CommunicationLink(CRM_CommunicationLink instance);
    partial void UpdateCRM_CommunicationLink(CRM_CommunicationLink instance);
    partial void DeleteCRM_CommunicationLink(CRM_CommunicationLink instance);
    partial void InsertCRM_Communication(CRM_Communication instance);
    partial void UpdateCRM_Communication(CRM_Communication instance);
    partial void DeleteCRM_Communication(CRM_Communication instance);
    partial void InsertCRM_FundraisingGiftProfile(CRM_FundraisingGiftProfile instance);
    partial void UpdateCRM_FundraisingGiftProfile(CRM_FundraisingGiftProfile instance);
    partial void DeleteCRM_FundraisingGiftProfile(CRM_FundraisingGiftProfile instance);
    partial void InsertCRM_FundraisingGiftProfileLog(CRM_FundraisingGiftProfileLog instance);
    partial void UpdateCRM_FundraisingGiftProfileLog(CRM_FundraisingGiftProfileLog instance);
    partial void DeleteCRM_FundraisingGiftProfileLog(CRM_FundraisingGiftProfileLog instance);
    partial void InsertCRM_CalendarOutreach(CRM_CalendarOutreach instance);
    partial void UpdateCRM_CalendarOutreach(CRM_CalendarOutreach instance);
    partial void DeleteCRM_CalendarOutreach(CRM_CalendarOutreach instance);
    partial void InsertCRM_Calendar(CRM_Calendar instance);
    partial void UpdateCRM_Calendar(CRM_Calendar instance);
    partial void DeleteCRM_Calendar(CRM_Calendar instance);
    partial void InsertCRM_FormFieldAnswer(CRM_FormFieldAnswer instance);
    partial void UpdateCRM_FormFieldAnswer(CRM_FormFieldAnswer instance);
    partial void DeleteCRM_FormFieldAnswer(CRM_FormFieldAnswer instance);
    partial void InsertCRM_AnnualPass(CRM_AnnualPass instance);
    partial void UpdateCRM_AnnualPass(CRM_AnnualPass instance);
    partial void DeleteCRM_AnnualPass(CRM_AnnualPass instance);
    partial void InsertTemplateEmail(TemplateEmail instance);
    partial void UpdateTemplateEmail(TemplateEmail instance);
    partial void DeleteTemplateEmail(TemplateEmail instance);
    partial void InsertTemplateEmailPlaceholder(TemplateEmailPlaceholder instance);
    partial void UpdateTemplateEmailPlaceholder(TemplateEmailPlaceholder instance);
    partial void DeleteTemplateEmailPlaceholder(TemplateEmailPlaceholder instance);
    partial void InsertCRM_AnnualPassType(CRM_AnnualPassType instance);
    partial void UpdateCRM_AnnualPassType(CRM_AnnualPassType instance);
    partial void DeleteCRM_AnnualPassType(CRM_AnnualPassType instance);
    partial void InsertCRM_RelationCode(CRM_RelationCode instance);
    partial void UpdateCRM_RelationCode(CRM_RelationCode instance);
    partial void DeleteCRM_RelationCode(CRM_RelationCode instance);
    partial void InsertCRM_PersonRelationship(CRM_PersonRelationship instance);
    partial void UpdateCRM_PersonRelationship(CRM_PersonRelationship instance);
    partial void DeleteCRM_PersonRelationship(CRM_PersonRelationship instance);
    partial void InsertHoldingPen(HoldingPen instance);
    partial void UpdateHoldingPen(HoldingPen instance);
    partial void DeleteHoldingPen(HoldingPen instance);
    partial void InsertCRM_Fundraising(CRM_Fundraising instance);
    partial void UpdateCRM_Fundraising(CRM_Fundraising instance);
    partial void DeleteCRM_Fundraising(CRM_Fundraising instance);
    partial void InsertCRM_GiftAidLog(CRM_GiftAidLog instance);
    partial void UpdateCRM_GiftAidLog(CRM_GiftAidLog instance);
    partial void DeleteCRM_GiftAidLog(CRM_GiftAidLog instance);
    partial void InsertCRM_GiftAidLogItem(CRM_GiftAidLogItem instance);
    partial void UpdateCRM_GiftAidLogItem(CRM_GiftAidLogItem instance);
    partial void DeleteCRM_GiftAidLogItem(CRM_GiftAidLogItem instance);
    partial void InsertCRM_FormFieldResponse(CRM_FormFieldResponse instance);
    partial void UpdateCRM_FormFieldResponse(CRM_FormFieldResponse instance);
    partial void DeleteCRM_FormFieldResponse(CRM_FormFieldResponse instance);
    #endregion
		
		public MainDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["sevenstoriesConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MainDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MainDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MainDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MainDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CRM_Address> CRM_Addresses
		{
			get
			{
				return this.GetTable<CRM_Address>();
			}
		}
		
		public System.Data.Linq.Table<CRM_CalendarVenue> CRM_CalendarVenues
		{
			get
			{
				return this.GetTable<CRM_CalendarVenue>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Role> CRM_Roles
		{
			get
			{
				return this.GetTable<CRM_Role>();
			}
		}
		
		public System.Data.Linq.Table<CRM_SchoolKeystage> CRM_SchoolKeystages
		{
			get
			{
				return this.GetTable<CRM_SchoolKeystage>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Source> CRM_Sources
		{
			get
			{
				return this.GetTable<CRM_Source>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Tag> CRM_Tags
		{
			get
			{
				return this.GetTable<CRM_Tag>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Transaction> CRM_Transactions
		{
			get
			{
				return this.GetTable<CRM_Transaction>();
			}
		}
		
		public System.Data.Linq.Table<AuthSession> AuthSessions
		{
			get
			{
				return this.GetTable<AuthSession>();
			}
		}
		
		public System.Data.Linq.Table<AdminPermission> AdminPermissions
		{
			get
			{
				return this.GetTable<AdminPermission>();
			}
		}
		
		public System.Data.Linq.Table<Setting> Settings
		{
			get
			{
				return this.GetTable<Setting>();
			}
		}
		
		public System.Data.Linq.Table<TableHistory> TableHistories
		{
			get
			{
				return this.GetTable<TableHistory>();
			}
		}
		
		public System.Data.Linq.Table<DBML_Schema> DBML_Schemas
		{
			get
			{
				return this.GetTable<DBML_Schema>();
			}
		}
		
		public System.Data.Linq.Table<_DataTableColumn> _DataTableColumns
		{
			get
			{
				return this.GetTable<_DataTableColumn>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Note> CRM_Notes
		{
			get
			{
				return this.GetTable<CRM_Note>();
			}
		}
		
		public System.Data.Linq.Table<CRM_LEA> CRM_LEAs
		{
			get
			{
				return this.GetTable<CRM_LEA>();
			}
		}
		
		public System.Data.Linq.Table<CRM_FamilyPerson> CRM_FamilyPersons
		{
			get
			{
				return this.GetTable<CRM_FamilyPerson>();
			}
		}
		
		public System.Data.Linq.Table<CRM_CalendarType> CRM_CalendarTypes
		{
			get
			{
				return this.GetTable<CRM_CalendarType>();
			}
		}
		
		public System.Data.Linq.Table<CRM_TaskParticipant> CRM_TaskParticipants
		{
			get
			{
				return this.GetTable<CRM_TaskParticipant>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Task> CRM_Tasks
		{
			get
			{
				return this.GetTable<CRM_Task>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Venue> CRM_Venues
		{
			get
			{
				return this.GetTable<CRM_Venue>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Family> CRM_Families
		{
			get
			{
				return this.GetTable<CRM_Family>();
			}
		}
		
		public System.Data.Linq.Table<CRM_CalendarPerHead> CRM_CalendarPerHeads
		{
			get
			{
				return this.GetTable<CRM_CalendarPerHead>();
			}
		}
		
		public System.Data.Linq.Table<CRM_AnnualPassCard> CRM_AnnualPassCards
		{
			get
			{
				return this.GetTable<CRM_AnnualPassCard>();
			}
		}
		
		public System.Data.Linq.Table<CRM_AnnualPassPerson> CRM_AnnualPassPersons
		{
			get
			{
				return this.GetTable<CRM_AnnualPassPerson>();
			}
		}
		
		public System.Data.Linq.Table<CRM_CalendarAttendance> CRM_CalendarAttendances
		{
			get
			{
				return this.GetTable<CRM_CalendarAttendance>();
			}
		}
		
		public System.Data.Linq.Table<Event> Events
		{
			get
			{
				return this.GetTable<Event>();
			}
		}
		
		public System.Data.Linq.Table<CRM_CalendarParty> CRM_CalendarParties
		{
			get
			{
				return this.GetTable<CRM_CalendarParty>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Package> CRM_Packages
		{
			get
			{
				return this.GetTable<CRM_Package>();
			}
		}
		
		public System.Data.Linq.Table<_DataTable> _DataTables
		{
			get
			{
				return this.GetTable<_DataTable>();
			}
		}
		
		public System.Data.Linq.Table<CRM_FormField> CRM_FormFields
		{
			get
			{
				return this.GetTable<CRM_FormField>();
			}
		}
		
		public System.Data.Linq.Table<CRM_FormFieldItem> CRM_FormFieldItems
		{
			get
			{
				return this.GetTable<CRM_FormFieldItem>();
			}
		}
		
		public System.Data.Linq.Table<CRM_NoteAdminRead> CRM_NoteAdminReads
		{
			get
			{
				return this.GetTable<CRM_NoteAdminRead>();
			}
		}
		
		public System.Data.Linq.Table<AdminDataQuery> AdminDataQueries
		{
			get
			{
				return this.GetTable<AdminDataQuery>();
			}
		}
		
		public System.Data.Linq.Table<AdminDataQueryFilter> AdminDataQueryFilters
		{
			get
			{
				return this.GetTable<AdminDataQueryFilter>();
			}
		}
		
		public System.Data.Linq.Table<CRM_FundraisingReason> CRM_FundraisingReasons
		{
			get
			{
				return this.GetTable<CRM_FundraisingReason>();
			}
		}
		
		public System.Data.Linq.Table<CRM_FundraisingSplit> CRM_FundraisingSplits
		{
			get
			{
				return this.GetTable<CRM_FundraisingSplit>();
			}
		}
		
		public System.Data.Linq.Table<CRM_PaymentType> CRM_PaymentTypes
		{
			get
			{
				return this.GetTable<CRM_PaymentType>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Fund> CRM_Funds
		{
			get
			{
				return this.GetTable<CRM_Fund>();
			}
		}
		
		public System.Data.Linq.Table<CRM_OrganisationType> CRM_OrganisationTypes
		{
			get
			{
				return this.GetTable<CRM_OrganisationType>();
			}
		}
		
		public System.Data.Linq.Table<CRM_SystemAccess> CRM_SystemAccesses
		{
			get
			{
				return this.GetTable<CRM_SystemAccess>();
			}
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<CRM_KeyStage> CRM_KeyStages
		{
			get
			{
				return this.GetTable<CRM_KeyStage>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Offer> CRM_Offers
		{
			get
			{
				return this.GetTable<CRM_Offer>();
			}
		}
		
		public System.Data.Linq.Table<CRM_NavHistory> CRM_NavHistories
		{
			get
			{
				return this.GetTable<CRM_NavHistory>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Title> CRM_Titles
		{
			get
			{
				return this.GetTable<CRM_Title>();
			}
		}
		
		public System.Data.Linq.Table<CRM_OrganisationSchool> CRM_OrganisationSchools
		{
			get
			{
				return this.GetTable<CRM_OrganisationSchool>();
			}
		}
		
		public System.Data.Linq.Table<CRM_CalendarInvite> CRM_CalendarInvites
		{
			get
			{
				return this.GetTable<CRM_CalendarInvite>();
			}
		}
		
		public System.Data.Linq.Table<CRM_SchoolType> CRM_SchoolTypes
		{
			get
			{
				return this.GetTable<CRM_SchoolType>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Exhibition> CRM_Exhibitions
		{
			get
			{
				return this.GetTable<CRM_Exhibition>();
			}
		}
		
		public System.Data.Linq.Table<CRM_School> CRM_Schools
		{
			get
			{
				return this.GetTable<CRM_School>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Region> CRM_Regions
		{
			get
			{
				return this.GetTable<CRM_Region>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Person> CRM_Persons
		{
			get
			{
				return this.GetTable<CRM_Person>();
			}
		}
		
		public System.Data.Linq.Table<CRM_CalendarAdmin> CRM_CalendarAdmins
		{
			get
			{
				return this.GetTable<CRM_CalendarAdmin>();
			}
		}
		
		public System.Data.Linq.Table<CRM_PersonSchool> CRM_PersonSchools
		{
			get
			{
				return this.GetTable<CRM_PersonSchool>();
			}
		}
		
		public System.Data.Linq.Table<CRM_PersonOrganisation> CRM_PersonOrganisations
		{
			get
			{
				return this.GetTable<CRM_PersonOrganisation>();
			}
		}
		
		public System.Data.Linq.Table<CRM_PersonPersonal> CRM_PersonPersonals
		{
			get
			{
				return this.GetTable<CRM_PersonPersonal>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Organisation> CRM_Organisations
		{
			get
			{
				return this.GetTable<CRM_Organisation>();
			}
		}
		
		public System.Data.Linq.Table<CRM_SystemAccessAdmin> CRM_SystemAccessAdmins
		{
			get
			{
				return this.GetTable<CRM_SystemAccessAdmin>();
			}
		}
		
		public System.Data.Linq.Table<CRM_CalendarCPD> CRM_CalendarCPDs
		{
			get
			{
				return this.GetTable<CRM_CalendarCPD>();
			}
		}
		
		public System.Data.Linq.Table<CRM_CalendarGroupBooking> CRM_CalendarGroupBookings
		{
			get
			{
				return this.GetTable<CRM_CalendarGroupBooking>();
			}
		}
		
		public System.Data.Linq.Table<CRM_CommunicationLink> CRM_CommunicationLinks
		{
			get
			{
				return this.GetTable<CRM_CommunicationLink>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Communication> CRM_Communications
		{
			get
			{
				return this.GetTable<CRM_Communication>();
			}
		}
		
		public System.Data.Linq.Table<CRM_FundraisingGiftProfile> CRM_FundraisingGiftProfiles
		{
			get
			{
				return this.GetTable<CRM_FundraisingGiftProfile>();
			}
		}
		
		public System.Data.Linq.Table<CRM_FundraisingGiftProfileLog> CRM_FundraisingGiftProfileLogs
		{
			get
			{
				return this.GetTable<CRM_FundraisingGiftProfileLog>();
			}
		}
		
		public System.Data.Linq.Table<CRM_CalendarOutreach> CRM_CalendarOutreaches
		{
			get
			{
				return this.GetTable<CRM_CalendarOutreach>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Calendar> CRM_Calendars
		{
			get
			{
				return this.GetTable<CRM_Calendar>();
			}
		}
		
		public System.Data.Linq.Table<CRM_FormFieldAnswer> CRM_FormFieldAnswers
		{
			get
			{
				return this.GetTable<CRM_FormFieldAnswer>();
			}
		}
		
		public System.Data.Linq.Table<CRM_AnnualPass> CRM_AnnualPasses
		{
			get
			{
				return this.GetTable<CRM_AnnualPass>();
			}
		}
		
		public System.Data.Linq.Table<TemplateEmail> TemplateEmails
		{
			get
			{
				return this.GetTable<TemplateEmail>();
			}
		}
		
		public System.Data.Linq.Table<TemplateEmailPlaceholder> TemplateEmailPlaceholders
		{
			get
			{
				return this.GetTable<TemplateEmailPlaceholder>();
			}
		}
		
		public System.Data.Linq.Table<CRM_AnnualPassType> CRM_AnnualPassTypes
		{
			get
			{
				return this.GetTable<CRM_AnnualPassType>();
			}
		}
		
		public System.Data.Linq.Table<CRM_RelationCode> CRM_RelationCodes
		{
			get
			{
				return this.GetTable<CRM_RelationCode>();
			}
		}
		
		public System.Data.Linq.Table<CRM_PersonRelationship> CRM_PersonRelationships
		{
			get
			{
				return this.GetTable<CRM_PersonRelationship>();
			}
		}
		
		public System.Data.Linq.Table<HoldingPen> HoldingPens
		{
			get
			{
				return this.GetTable<HoldingPen>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Fundraising> CRM_Fundraisings
		{
			get
			{
				return this.GetTable<CRM_Fundraising>();
			}
		}
		
		public System.Data.Linq.Table<CRM_GiftAidLog> CRM_GiftAidLogs
		{
			get
			{
				return this.GetTable<CRM_GiftAidLog>();
			}
		}
		
		public System.Data.Linq.Table<CRM_GiftAidLogItem> CRM_GiftAidLogItems
		{
			get
			{
				return this.GetTable<CRM_GiftAidLogItem>();
			}
		}
		
		public System.Data.Linq.Table<CRM_FormFieldResponse> CRM_FormFieldResponses
		{
			get
			{
				return this.GetTable<CRM_FormFieldResponse>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetNewId", IsComposable=true)]
		public System.Nullable<System.Guid> GetNewId()
		{
			return ((System.Nullable<System.Guid>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Address")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _AddressLine1;
		
		private string _AddressLine2;
		
		private string _AddressLine3;
		
		private string _Town;
		
		private string _County;
		
		private string _Postcode;
		
		private int _CountryID;
		
		private string _AddressLine4;
		
		private string _AddressLine5;
		
		private EntitySet<CRM_Venue> _CRM_Venues;
		
		private EntitySet<CRM_Venue> _CRM_Venues1;
		
		private EntitySet<CRM_School> _CRM_Schools;
		
		private EntitySet<CRM_Person> _CRM_Persons;
		
		private EntitySet<CRM_Person> _CRM_Persons1;
		
		private EntitySet<CRM_PersonPersonal> _CRM_PersonPersonals;
		
		private EntitySet<CRM_Organisation> _CRM_Organisations;
		
		private EntitySet<CRM_Calendar> _CRM_Calendars;
		
		private EntitySet<CRM_Fundraising> _CRM_Fundraisings;
		
		private EntityRef<Country> _Country;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAddressLine1Changing(string value);
    partial void OnAddressLine1Changed();
    partial void OnAddressLine2Changing(string value);
    partial void OnAddressLine2Changed();
    partial void OnAddressLine3Changing(string value);
    partial void OnAddressLine3Changed();
    partial void OnTownChanging(string value);
    partial void OnTownChanged();
    partial void OnCountyChanging(string value);
    partial void OnCountyChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    partial void OnAddressLine4Changing(string value);
    partial void OnAddressLine4Changed();
    partial void OnAddressLine5Changing(string value);
    partial void OnAddressLine5Changed();
    #endregion
		
		public CRM_Address()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine1", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string AddressLine1
		{
			get
			{
				return this._AddressLine1;
			}
			set
			{
				if ((this._AddressLine1 != value))
				{
					this.OnAddressLine1Changing(value);
					this.SendPropertyChanging();
					this._AddressLine1 = value;
					this.SendPropertyChanged("AddressLine1");
					this.OnAddressLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine2", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string AddressLine2
		{
			get
			{
				return this._AddressLine2;
			}
			set
			{
				if ((this._AddressLine2 != value))
				{
					this.OnAddressLine2Changing(value);
					this.SendPropertyChanging();
					this._AddressLine2 = value;
					this.SendPropertyChanged("AddressLine2");
					this.OnAddressLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine3", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string AddressLine3
		{
			get
			{
				return this._AddressLine3;
			}
			set
			{
				if ((this._AddressLine3 != value))
				{
					this.OnAddressLine3Changing(value);
					this.SendPropertyChanging();
					this._AddressLine3 = value;
					this.SendPropertyChanged("AddressLine3");
					this.OnAddressLine3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Town", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Town
		{
			get
			{
				return this._Town;
			}
			set
			{
				if ((this._Town != value))
				{
					this.OnTownChanging(value);
					this.SendPropertyChanging();
					this._Town = value;
					this.SendPropertyChanged("Town");
					this.OnTownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_County", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string County
		{
			get
			{
				return this._County;
			}
			set
			{
				if ((this._County != value))
				{
					this.OnCountyChanging(value);
					this.SendPropertyChanging();
					this._County = value;
					this.SendPropertyChanged("County");
					this.OnCountyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine4", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string AddressLine4
		{
			get
			{
				return this._AddressLine4;
			}
			set
			{
				if ((this._AddressLine4 != value))
				{
					this.OnAddressLine4Changing(value);
					this.SendPropertyChanging();
					this._AddressLine4 = value;
					this.SendPropertyChanged("AddressLine4");
					this.OnAddressLine4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine5", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string AddressLine5
		{
			get
			{
				return this._AddressLine5;
			}
			set
			{
				if ((this._AddressLine5 != value))
				{
					this.OnAddressLine5Changing(value);
					this.SendPropertyChanging();
					this._AddressLine5 = value;
					this.SendPropertyChanged("AddressLine5");
					this.OnAddressLine5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Address_CRM_Venue", Storage="_CRM_Venues", ThisKey="ID", OtherKey="CRM_AddressID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<CRM_Venue> CRM_Venues
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_Venues.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_Venues;
			}
			set
			{
				this._CRM_Venues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Address_CRM_Venue1", Storage="_CRM_Venues1", ThisKey="ID", OtherKey="CRM_AddressID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<CRM_Venue> CRM_Venues1
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_Venues1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_Venues1;
			}
			set
			{
				this._CRM_Venues1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Address_CRM_School", Storage="_CRM_Schools", ThisKey="ID", OtherKey="CRM_AddressID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<CRM_School> CRM_Schools
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_Schools.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_Schools;
			}
			set
			{
				this._CRM_Schools.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Address_CRM_Person", Storage="_CRM_Persons", ThisKey="ID", OtherKey="CRM_AddressID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<CRM_Person> CRM_Persons
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_Persons.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_Persons;
			}
			set
			{
				this._CRM_Persons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Address_CRM_Person1", Storage="_CRM_Persons1", ThisKey="ID", OtherKey="PrimaryAddressID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<CRM_Person> CRM_Persons1
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_Persons1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_Persons1;
			}
			set
			{
				this._CRM_Persons1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Address_CRM_PersonPersonal", Storage="_CRM_PersonPersonals", ThisKey="ID", OtherKey="AddressID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<CRM_PersonPersonal> CRM_PersonPersonals
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_PersonPersonals.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_PersonPersonals;
			}
			set
			{
				this._CRM_PersonPersonals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Address_CRM_Organisation", Storage="_CRM_Organisations", ThisKey="ID", OtherKey="CRM_AddressID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<CRM_Organisation> CRM_Organisations
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_Organisations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_Organisations;
			}
			set
			{
				this._CRM_Organisations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Address_CRM_Calendar", Storage="_CRM_Calendars", ThisKey="ID", OtherKey="InvoiceAddressID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<CRM_Calendar> CRM_Calendars
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_Calendars.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_Calendars;
			}
			set
			{
				this._CRM_Calendars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Address_CRM_Fundraising", Storage="_CRM_Fundraisings", ThisKey="ID", OtherKey="GiftAidAddressID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<CRM_Fundraising> CRM_Fundraisings
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_Fundraisings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_Fundraisings;
			}
			set
			{
				this._CRM_Fundraisings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_CRM_Address", Storage="_Country", ThisKey="CountryID", OtherKey="ID", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.CRM_Addresses.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.CRM_Addresses.Add(this);
						this._CountryID = value.ID;
					}
					else
					{
						this._CountryID = default(int);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_Venues(CRM_Venue entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Address = this;
		}
		
		private void detach_CRM_Venues(CRM_Venue entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Address = null;
		}
		
		private void attach_CRM_Venues1(CRM_Venue entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Address1 = this;
		}
		
		private void detach_CRM_Venues1(CRM_Venue entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Address1 = null;
		}
		
		private void attach_CRM_Schools(CRM_School entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Address = this;
		}
		
		private void detach_CRM_Schools(CRM_School entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Address = null;
		}
		
		private void attach_CRM_Persons(CRM_Person entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Address = this;
		}
		
		private void detach_CRM_Persons(CRM_Person entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Address = null;
		}
		
		private void attach_CRM_Persons1(CRM_Person entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Address1 = this;
		}
		
		private void detach_CRM_Persons1(CRM_Person entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Address1 = null;
		}
		
		private void attach_CRM_PersonPersonals(CRM_PersonPersonal entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Address = this;
		}
		
		private void detach_CRM_PersonPersonals(CRM_PersonPersonal entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Address = null;
		}
		
		private void attach_CRM_Organisations(CRM_Organisation entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Address = this;
		}
		
		private void detach_CRM_Organisations(CRM_Organisation entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Address = null;
		}
		
		private void attach_CRM_Calendars(CRM_Calendar entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Address = this;
		}
		
		private void detach_CRM_Calendars(CRM_Calendar entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Address = null;
		}
		
		private void attach_CRM_Fundraisings(CRM_Fundraising entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Address = this;
		}
		
		private void detach_CRM_Fundraisings(CRM_Fundraising entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Address = null;
		}
		
		private void Initialize()
		{
			this._CRM_Venues = new EntitySet<CRM_Venue>(new Action<CRM_Venue>(this.attach_CRM_Venues), new Action<CRM_Venue>(this.detach_CRM_Venues));
			this._CRM_Venues1 = new EntitySet<CRM_Venue>(new Action<CRM_Venue>(this.attach_CRM_Venues1), new Action<CRM_Venue>(this.detach_CRM_Venues1));
			this._CRM_Schools = new EntitySet<CRM_School>(new Action<CRM_School>(this.attach_CRM_Schools), new Action<CRM_School>(this.detach_CRM_Schools));
			this._CRM_Persons = new EntitySet<CRM_Person>(new Action<CRM_Person>(this.attach_CRM_Persons), new Action<CRM_Person>(this.detach_CRM_Persons));
			this._CRM_Persons1 = new EntitySet<CRM_Person>(new Action<CRM_Person>(this.attach_CRM_Persons1), new Action<CRM_Person>(this.detach_CRM_Persons1));
			this._CRM_PersonPersonals = new EntitySet<CRM_PersonPersonal>(new Action<CRM_PersonPersonal>(this.attach_CRM_PersonPersonals), new Action<CRM_PersonPersonal>(this.detach_CRM_PersonPersonals));
			this._CRM_Organisations = new EntitySet<CRM_Organisation>(new Action<CRM_Organisation>(this.attach_CRM_Organisations), new Action<CRM_Organisation>(this.detach_CRM_Organisations));
			this._CRM_Calendars = new EntitySet<CRM_Calendar>(new Action<CRM_Calendar>(this.attach_CRM_Calendars), new Action<CRM_Calendar>(this.detach_CRM_Calendars));
			this._CRM_Fundraisings = new EntitySet<CRM_Fundraising>(new Action<CRM_Fundraising>(this.attach_CRM_Fundraisings), new Action<CRM_Fundraising>(this.detach_CRM_Fundraisings));
			this._Country = default(EntityRef<Country>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_CalendarVenue")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_CalendarVenue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_CalendarID;
		
		private int _CRM_VenueID;
		
		private System.DateTime _DateTimeFrom;
		
		private System.DateTime _DateTimeTo;
		
		private EntityRef<CRM_Venue> _CRM_Venue;
		
		private EntityRef<CRM_Calendar> _CRM_Calendar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_CalendarIDChanging(int value);
    partial void OnCRM_CalendarIDChanged();
    partial void OnCRM_VenueIDChanging(int value);
    partial void OnCRM_VenueIDChanged();
    partial void OnDateTimeFromChanging(System.DateTime value);
    partial void OnDateTimeFromChanged();
    partial void OnDateTimeToChanging(System.DateTime value);
    partial void OnDateTimeToChanged();
    #endregion
		
		public CRM_CalendarVenue()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_CalendarID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_CalendarID
		{
			get
			{
				return this._CRM_CalendarID;
			}
			set
			{
				if ((this._CRM_CalendarID != value))
				{
					if (this._CRM_Calendar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_CalendarIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_CalendarID = value;
					this.SendPropertyChanged("CRM_CalendarID");
					this.OnCRM_CalendarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_VenueID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CRM_VenueID
		{
			get
			{
				return this._CRM_VenueID;
			}
			set
			{
				if ((this._CRM_VenueID != value))
				{
					if (this._CRM_Venue.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_VenueIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_VenueID = value;
					this.SendPropertyChanged("CRM_VenueID");
					this.OnCRM_VenueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeFrom", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime DateTimeFrom
		{
			get
			{
				return this._DateTimeFrom;
			}
			set
			{
				if ((this._DateTimeFrom != value))
				{
					this.OnDateTimeFromChanging(value);
					this.SendPropertyChanging();
					this._DateTimeFrom = value;
					this.SendPropertyChanged("DateTimeFrom");
					this.OnDateTimeFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeTo", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime DateTimeTo
		{
			get
			{
				return this._DateTimeTo;
			}
			set
			{
				if ((this._DateTimeTo != value))
				{
					this.OnDateTimeToChanging(value);
					this.SendPropertyChanging();
					this._DateTimeTo = value;
					this.SendPropertyChanged("DateTimeTo");
					this.OnDateTimeToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Venue_CRM_CalendarVenue", Storage="_CRM_Venue", ThisKey="CRM_VenueID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Venue CRM_Venue
		{
			get
			{
				return this._CRM_Venue.Entity;
			}
			set
			{
				CRM_Venue previousValue = this._CRM_Venue.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Venue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Venue.Entity = null;
						previousValue.CRM_CalendarVenues.Remove(this);
					}
					this._CRM_Venue.Entity = value;
					if ((value != null))
					{
						value.CRM_CalendarVenues.Add(this);
						this._CRM_VenueID = value.ID;
					}
					else
					{
						this._CRM_VenueID = default(int);
					}
					this.SendPropertyChanged("CRM_Venue");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Calendar_CRM_CalendarVenue", Storage="_CRM_Calendar", ThisKey="CRM_CalendarID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Calendar CRM_Calendar
		{
			get
			{
				return this._CRM_Calendar.Entity;
			}
			set
			{
				CRM_Calendar previousValue = this._CRM_Calendar.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Calendar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Calendar.Entity = null;
						previousValue.CRM_CalendarVenues.Remove(this);
					}
					this._CRM_Calendar.Entity = value;
					if ((value != null))
					{
						value.CRM_CalendarVenues.Add(this);
						this._CRM_CalendarID = value.ID;
					}
					else
					{
						this._CRM_CalendarID = default(int);
					}
					this.SendPropertyChanged("CRM_Calendar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CRM_Venue = default(EntityRef<CRM_Venue>);
			this._CRM_Calendar = default(EntityRef<CRM_Calendar>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Role")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<CRM_PersonSchool> _CRM_PersonSchools;
		
		private EntitySet<CRM_PersonOrganisation> _CRM_PersonOrganisations;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CRM_Role()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Role_CRM_PersonSchool", Storage="_CRM_PersonSchools", ThisKey="ID", OtherKey="CRM_RoleID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<CRM_PersonSchool> CRM_PersonSchools
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_PersonSchools.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_PersonSchools;
			}
			set
			{
				this._CRM_PersonSchools.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Role_CRM_PersonOrganisation", Storage="_CRM_PersonOrganisations", ThisKey="ID", OtherKey="CRM_RoleID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<CRM_PersonOrganisation> CRM_PersonOrganisations
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_PersonOrganisations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_PersonOrganisations;
			}
			set
			{
				this._CRM_PersonOrganisations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_PersonSchools(CRM_PersonSchool entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Role = this;
		}
		
		private void detach_CRM_PersonSchools(CRM_PersonSchool entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Role = null;
		}
		
		private void attach_CRM_PersonOrganisations(CRM_PersonOrganisation entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Role = this;
		}
		
		private void detach_CRM_PersonOrganisations(CRM_PersonOrganisation entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Role = null;
		}
		
		private void Initialize()
		{
			this._CRM_PersonSchools = new EntitySet<CRM_PersonSchool>(new Action<CRM_PersonSchool>(this.attach_CRM_PersonSchools), new Action<CRM_PersonSchool>(this.detach_CRM_PersonSchools));
			this._CRM_PersonOrganisations = new EntitySet<CRM_PersonOrganisation>(new Action<CRM_PersonOrganisation>(this.attach_CRM_PersonOrganisations), new Action<CRM_PersonOrganisation>(this.detach_CRM_PersonOrganisations));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_SchoolKeystage")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_SchoolKeystage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_SchoolID;
		
		private int _CRM_KeyStageID;
		
		private EntityRef<CRM_KeyStage> _CRM_KeyStage;
		
		private EntityRef<CRM_School> _CRM_School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_SchoolIDChanging(int value);
    partial void OnCRM_SchoolIDChanged();
    partial void OnCRM_KeyStageIDChanging(int value);
    partial void OnCRM_KeyStageIDChanged();
    #endregion
		
		public CRM_SchoolKeystage()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_SchoolID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_SchoolID
		{
			get
			{
				return this._CRM_SchoolID;
			}
			set
			{
				if ((this._CRM_SchoolID != value))
				{
					if (this._CRM_School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_SchoolIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_SchoolID = value;
					this.SendPropertyChanged("CRM_SchoolID");
					this.OnCRM_SchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_KeyStageID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CRM_KeyStageID
		{
			get
			{
				return this._CRM_KeyStageID;
			}
			set
			{
				if ((this._CRM_KeyStageID != value))
				{
					if (this._CRM_KeyStage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_KeyStageIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_KeyStageID = value;
					this.SendPropertyChanged("CRM_KeyStageID");
					this.OnCRM_KeyStageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_KeyStage_CRM_SchoolKeystage", Storage="_CRM_KeyStage", ThisKey="CRM_KeyStageID", OtherKey="ID", IsForeignKey=true)]
		public CRM_KeyStage CRM_KeyStage
		{
			get
			{
				return this._CRM_KeyStage.Entity;
			}
			set
			{
				CRM_KeyStage previousValue = this._CRM_KeyStage.Entity;
				if (((previousValue != value) 
							|| (this._CRM_KeyStage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_KeyStage.Entity = null;
						previousValue.CRM_SchoolKeystages.Remove(this);
					}
					this._CRM_KeyStage.Entity = value;
					if ((value != null))
					{
						value.CRM_SchoolKeystages.Add(this);
						this._CRM_KeyStageID = value.ID;
					}
					else
					{
						this._CRM_KeyStageID = default(int);
					}
					this.SendPropertyChanged("CRM_KeyStage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_School_CRM_SchoolKeystage", Storage="_CRM_School", ThisKey="CRM_SchoolID", OtherKey="ID", IsForeignKey=true)]
		public CRM_School CRM_School
		{
			get
			{
				return this._CRM_School.Entity;
			}
			set
			{
				CRM_School previousValue = this._CRM_School.Entity;
				if (((previousValue != value) 
							|| (this._CRM_School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_School.Entity = null;
						previousValue.CRM_SchoolKeystages.Remove(this);
					}
					this._CRM_School.Entity = value;
					if ((value != null))
					{
						value.CRM_SchoolKeystages.Add(this);
						this._CRM_SchoolID = value.ID;
					}
					else
					{
						this._CRM_SchoolID = default(int);
					}
					this.SendPropertyChanged("CRM_School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CRM_KeyStage = default(EntityRef<CRM_KeyStage>);
			this._CRM_School = default(EntityRef<CRM_School>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Source")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_Source : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<CRM_Transaction> _CRM_Transactions;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CRM_Source()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Source_CRM_Transaction", Storage="_CRM_Transactions", ThisKey="ID", OtherKey="CRM_SourceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<CRM_Transaction> CRM_Transactions
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_Transactions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_Transactions;
			}
			set
			{
				this._CRM_Transactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_Transactions(CRM_Transaction entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Source = this;
		}
		
		private void detach_CRM_Transactions(CRM_Transaction entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Source = null;
		}
		
		private void Initialize()
		{
			this._CRM_Transactions = new EntitySet<CRM_Transaction>(new Action<CRM_Transaction>(this.attach_CRM_Transactions), new Action<CRM_Transaction>(this.detach_CRM_Transactions));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Tag")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TargetReference;
		
		private bool _ToAttend;
		
		private System.Nullable<System.DateTime> _StartDateTime;
		
		private System.Nullable<System.DateTime> _EndDateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTargetReferenceChanging(string value);
    partial void OnTargetReferenceChanged();
    partial void OnToAttendChanging(bool value);
    partial void OnToAttendChanged();
    partial void OnStartDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateTimeChanged();
    partial void OnEndDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateTimeChanged();
    #endregion
		
		public CRM_Tag()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string TargetReference
		{
			get
			{
				return this._TargetReference;
			}
			set
			{
				if ((this._TargetReference != value))
				{
					this.OnTargetReferenceChanging(value);
					this.SendPropertyChanging();
					this._TargetReference = value;
					this.SendPropertyChanged("TargetReference");
					this.OnTargetReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToAttend", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool ToAttend
		{
			get
			{
				return this._ToAttend;
			}
			set
			{
				if ((this._ToAttend != value))
				{
					this.OnToAttendChanging(value);
					this.SendPropertyChanging();
					this._ToAttend = value;
					this.SendPropertyChanged("ToAttend");
					this.OnToAttendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateTime", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> StartDateTime
		{
			get
			{
				return this._StartDateTime;
			}
			set
			{
				if ((this._StartDateTime != value))
				{
					this.OnStartDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartDateTime = value;
					this.SendPropertyChanged("StartDateTime");
					this.OnStartDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateTime", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> EndDateTime
		{
			get
			{
				return this._EndDateTime;
			}
			set
			{
				if ((this._EndDateTime != value))
				{
					this.OnEndDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EndDateTime = value;
					this.SendPropertyChanged("EndDateTime");
					this.OnEndDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Transaction")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private decimal _Amount;
		
		private byte _PayMethod;
		
		private System.DateTime _PaymentDateTime;
		
		private int _CRM_SourceID;
		
		private bool _IsGiftAid;
		
		private decimal _GiftAidAmount;
		
		private System.DateTime _GiftAidDateCollected;
		
		private string _Name;
		
		private string _TargetReference;
		
		private EntityRef<CRM_Source> _CRM_Source;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnPayMethodChanging(byte value);
    partial void OnPayMethodChanged();
    partial void OnPaymentDateTimeChanging(System.DateTime value);
    partial void OnPaymentDateTimeChanged();
    partial void OnCRM_SourceIDChanging(int value);
    partial void OnCRM_SourceIDChanged();
    partial void OnIsGiftAidChanging(bool value);
    partial void OnIsGiftAidChanged();
    partial void OnGiftAidAmountChanging(decimal value);
    partial void OnGiftAidAmountChanged();
    partial void OnGiftAidDateCollectedChanging(System.DateTime value);
    partial void OnGiftAidDateCollectedChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTargetReferenceChanging(string value);
    partial void OnTargetReferenceChanged();
    #endregion
		
		public CRM_Transaction()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayMethod", DbType="TinyInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public byte PayMethod
		{
			get
			{
				return this._PayMethod;
			}
			set
			{
				if ((this._PayMethod != value))
				{
					this.OnPayMethodChanging(value);
					this.SendPropertyChanging();
					this._PayMethod = value;
					this.SendPropertyChanged("PayMethod");
					this.OnPayMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDateTime", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime PaymentDateTime
		{
			get
			{
				return this._PaymentDateTime;
			}
			set
			{
				if ((this._PaymentDateTime != value))
				{
					this.OnPaymentDateTimeChanging(value);
					this.SendPropertyChanging();
					this._PaymentDateTime = value;
					this.SendPropertyChanged("PaymentDateTime");
					this.OnPaymentDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_SourceID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int CRM_SourceID
		{
			get
			{
				return this._CRM_SourceID;
			}
			set
			{
				if ((this._CRM_SourceID != value))
				{
					if (this._CRM_Source.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_SourceIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_SourceID = value;
					this.SendPropertyChanged("CRM_SourceID");
					this.OnCRM_SourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGiftAid", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsGiftAid
		{
			get
			{
				return this._IsGiftAid;
			}
			set
			{
				if ((this._IsGiftAid != value))
				{
					this.OnIsGiftAidChanging(value);
					this.SendPropertyChanging();
					this._IsGiftAid = value;
					this.SendPropertyChanged("IsGiftAid");
					this.OnIsGiftAidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiftAidAmount", DbType="Money NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public decimal GiftAidAmount
		{
			get
			{
				return this._GiftAidAmount;
			}
			set
			{
				if ((this._GiftAidAmount != value))
				{
					this.OnGiftAidAmountChanging(value);
					this.SendPropertyChanging();
					this._GiftAidAmount = value;
					this.SendPropertyChanged("GiftAidAmount");
					this.OnGiftAidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiftAidDateCollected", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime GiftAidDateCollected
		{
			get
			{
				return this._GiftAidDateCollected;
			}
			set
			{
				if ((this._GiftAidDateCollected != value))
				{
					this.OnGiftAidDateCollectedChanging(value);
					this.SendPropertyChanging();
					this._GiftAidDateCollected = value;
					this.SendPropertyChanged("GiftAidDateCollected");
					this.OnGiftAidDateCollectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetReference", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string TargetReference
		{
			get
			{
				return this._TargetReference;
			}
			set
			{
				if ((this._TargetReference != value))
				{
					this.OnTargetReferenceChanging(value);
					this.SendPropertyChanging();
					this._TargetReference = value;
					this.SendPropertyChanged("TargetReference");
					this.OnTargetReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Source_CRM_Transaction", Storage="_CRM_Source", ThisKey="CRM_SourceID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Source CRM_Source
		{
			get
			{
				return this._CRM_Source.Entity;
			}
			set
			{
				CRM_Source previousValue = this._CRM_Source.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Source.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Source.Entity = null;
						previousValue.CRM_Transactions.Remove(this);
					}
					this._CRM_Source.Entity = value;
					if ((value != null))
					{
						value.CRM_Transactions.Add(this);
						this._CRM_SourceID = value.ID;
					}
					else
					{
						this._CRM_SourceID = default(int);
					}
					this.SendPropertyChanged("CRM_Source");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CRM_Source = default(EntityRef<CRM_Source>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuthSession")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AuthSession : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _IPAddress;
		
		private System.DateTime _Created;
		
		private string _SessionCode;
		
		private string _CookieID;
		
		private System.Nullable<int> _AdminID;
		
		private System.Nullable<int> _UserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnSessionCodeChanging(string value);
    partial void OnSessionCodeChanged();
    partial void OnCookieIDChanging(string value);
    partial void OnCookieIDChanged();
    partial void OnAdminIDChanging(System.Nullable<int> value);
    partial void OnAdminIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    #endregion
		
		public AuthSession()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionCode", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string SessionCode
		{
			get
			{
				return this._SessionCode;
			}
			set
			{
				if ((this._SessionCode != value))
				{
					this.OnSessionCodeChanging(value);
					this.SendPropertyChanging();
					this._SessionCode = value;
					this.SendPropertyChanged("SessionCode");
					this.OnSessionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CookieID", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string CookieID
		{
			get
			{
				return this._CookieID;
			}
			set
			{
				if ((this._CookieID != value))
				{
					this.OnCookieIDChanging(value);
					this.SendPropertyChanging();
					this._CookieID = value;
					this.SendPropertyChanged("CookieID");
					this.OnCookieIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminPermission")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AdminPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private byte _Section;
		
		private int _AdminID;
		
		private bool _IsAdd;
		
		private bool _IsDelete;
		
		private bool _IsUpdate;
		
		private EntityRef<Admin> _Admin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSectionChanging(byte value);
    partial void OnSectionChanged();
    partial void OnAdminIDChanging(int value);
    partial void OnAdminIDChanged();
    partial void OnIsAddChanging(bool value);
    partial void OnIsAddChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    partial void OnIsUpdateChanging(bool value);
    partial void OnIsUpdateChanged();
    #endregion
		
		public AdminPermission()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Section", DbType="TinyInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public byte Section
		{
			get
			{
				return this._Section;
			}
			set
			{
				if ((this._Section != value))
				{
					this.OnSectionChanging(value);
					this.SendPropertyChanging();
					this._Section = value;
					this.SendPropertyChanged("Section");
					this.OnSectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._Admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdd", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsAdd
		{
			get
			{
				return this._IsAdd;
			}
			set
			{
				if ((this._IsAdd != value))
				{
					this.OnIsAddChanging(value);
					this.SendPropertyChanging();
					this._IsAdd = value;
					this.SendPropertyChanged("IsAdd");
					this.OnIsAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUpdate", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsUpdate
		{
			get
			{
				return this._IsUpdate;
			}
			set
			{
				if ((this._IsUpdate != value))
				{
					this.OnIsUpdateChanging(value);
					this.SendPropertyChanging();
					this._IsUpdate = value;
					this.SendPropertyChanged("IsUpdate");
					this.OnIsUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_AdminPermission", Storage="_Admin", ThisKey="AdminID", OtherKey="ID", IsForeignKey=true)]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.AdminPermissions.Remove(this);
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.AdminPermissions.Add(this);
						this._AdminID = value.ID;
					}
					else
					{
						this._AdminID = default(int);
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Admin = default(EntityRef<Admin>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Setting")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public Setting()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableHistory")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class TableHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TableHistoryID;
		
		private string _TableName;
		
		private string _Key1;
		
		private string _ParentID;
		
		private string _ActionType;
		
		private string _Property;
		
		private string _OldValue;
		
		private string _NewValue;
		
		private string _ActionUserName;
		
		private System.DateTime _ActionDateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTableHistoryIDChanging(int value);
    partial void OnTableHistoryIDChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnKey1Changing(string value);
    partial void OnKey1Changed();
    partial void OnParentIDChanging(string value);
    partial void OnParentIDChanged();
    partial void OnActionTypeChanging(string value);
    partial void OnActionTypeChanged();
    partial void OnPropertyChanging(string value);
    partial void OnPropertyChanged();
    partial void OnOldValueChanging(string value);
    partial void OnOldValueChanged();
    partial void OnNewValueChanging(string value);
    partial void OnNewValueChanged();
    partial void OnActionUserNameChanging(string value);
    partial void OnActionUserNameChanged();
    partial void OnActionDateTimeChanging(System.DateTime value);
    partial void OnActionDateTimeChanged();
    #endregion
		
		public TableHistory()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableHistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int TableHistoryID
		{
			get
			{
				return this._TableHistoryID;
			}
			set
			{
				if ((this._TableHistoryID != value))
				{
					this.OnTableHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._TableHistoryID = value;
					this.SendPropertyChanged("TableHistoryID");
					this.OnTableHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Key1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Key1
		{
			get
			{
				return this._Key1;
			}
			set
			{
				if ((this._Key1 != value))
				{
					this.OnKey1Changing(value);
					this.SendPropertyChanging();
					this._Key1 = value;
					this.SendPropertyChanged("Key1");
					this.OnKey1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionType", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string ActionType
		{
			get
			{
				return this._ActionType;
			}
			set
			{
				if ((this._ActionType != value))
				{
					this.OnActionTypeChanging(value);
					this.SendPropertyChanging();
					this._ActionType = value;
					this.SendPropertyChanged("ActionType");
					this.OnActionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Property", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Property
		{
			get
			{
				return this._Property;
			}
			set
			{
				if ((this._Property != value))
				{
					this.OnPropertyChanging(value);
					this.SendPropertyChanging();
					this._Property = value;
					this.SendPropertyChanged("Property");
					this.OnPropertyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldValue", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string OldValue
		{
			get
			{
				return this._OldValue;
			}
			set
			{
				if ((this._OldValue != value))
				{
					this.OnOldValueChanging(value);
					this.SendPropertyChanging();
					this._OldValue = value;
					this.SendPropertyChanged("OldValue");
					this.OnOldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValue", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string NewValue
		{
			get
			{
				return this._NewValue;
			}
			set
			{
				if ((this._NewValue != value))
				{
					this.OnNewValueChanging(value);
					this.SendPropertyChanging();
					this._NewValue = value;
					this.SendPropertyChanged("NewValue");
					this.OnNewValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionUserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string ActionUserName
		{
			get
			{
				return this._ActionUserName;
			}
			set
			{
				if ((this._ActionUserName != value))
				{
					this.OnActionUserNameChanging(value);
					this.SendPropertyChanging();
					this._ActionUserName = value;
					this.SendPropertyChanged("ActionUserName");
					this.OnActionUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDateTime", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.DateTime ActionDateTime
		{
			get
			{
				return this._ActionDateTime;
			}
			set
			{
				if ((this._ActionDateTime != value))
				{
					this.OnActionDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ActionDateTime = value;
					this.SendPropertyChanged("ActionDateTime");
					this.OnActionDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DBML_Schema")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DBML_Schema
	{
		
		private string _table;
		
		private string _column;
		
		private object _column_desc;
		
		public DBML_Schema()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[table]", Storage="_table", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string table
		{
			get
			{
				return this._table;
			}
			set
			{
				if ((this._table != value))
				{
					this._table = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[column]", Storage="_column", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string column
		{
			get
			{
				return this._column;
			}
			set
			{
				if ((this._column != value))
				{
					this._column = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_column_desc", DbType="Variant", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public object column_desc
		{
			get
			{
				return this._column_desc;
			}
			set
			{
				if ((this._column_desc != value))
				{
					this._column_desc = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_DataTableColumn]")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class _DataTableColumn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _AdminID;
		
		private int @__DataTableID;
		
		private string @__DataFieldName;
		
		private string @__DataFieldFriendly;
		
		private int _OrderNo;
		
		private EntityRef<_DataTable> @__DataTable;
		
		private EntityRef<Admin> _Admin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAdminIDChanging(int value);
    partial void OnAdminIDChanged();
    partial void On_DataTableIDChanging(int value);
    partial void On_DataTableIDChanged();
    partial void On_DataFieldNameChanging(string value);
    partial void On_DataFieldNameChanged();
    partial void On_DataFieldFriendlyChanging(string value);
    partial void On_DataFieldFriendlyChanged();
    partial void OnOrderNoChanging(int value);
    partial void OnOrderNoChanged();
    #endregion
		
		public _DataTableColumn()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._Admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_DataTableID]", Storage="__DataTableID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int _DataTableID
		{
			get
			{
				return this.@__DataTableID;
			}
			set
			{
				if ((this.@__DataTableID != value))
				{
					this.On_DataTableIDChanging(value);
					this.SendPropertyChanging();
					this.@__DataTableID = value;
					this.SendPropertyChanged("_DataTableID");
					this.On_DataTableIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_DataFieldName]", Storage="__DataFieldName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string _DataFieldName
		{
			get
			{
				return this.@__DataFieldName;
			}
			set
			{
				if ((this.@__DataFieldName != value))
				{
					this.On_DataFieldNameChanging(value);
					this.SendPropertyChanging();
					this.@__DataFieldName = value;
					this.SendPropertyChanged("_DataFieldName");
					this.On_DataFieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_DataFieldFriendly]", Storage="__DataFieldFriendly", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string _DataFieldFriendly
		{
			get
			{
				return this.@__DataFieldFriendly;
			}
			set
			{
				if ((this.@__DataFieldFriendly != value))
				{
					this.On_DataFieldFriendlyChanging(value);
					this.SendPropertyChanging();
					this.@__DataFieldFriendly = value;
					this.SendPropertyChanged("_DataFieldFriendly");
					this.On_DataFieldFriendlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_DataTable__DataTableColumn", Storage="__DataTable", ThisKey="_DataTableID", OtherKey="ID", IsForeignKey=true)]
		public _DataTable _DataTable
		{
			get
			{
				return this.@__DataTable.Entity;
			}
			set
			{
				_DataTable previousValue = this.@__DataTable.Entity;
				if (((previousValue != value) 
							|| (this.@__DataTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__DataTable.Entity = null;
						previousValue._DataTableColumns.Remove(this);
					}
					this.@__DataTable.Entity = value;
					if ((value != null))
					{
						value._DataTableColumns.Add(this);
						this.@__DataTableID = value.ID;
					}
					else
					{
						this.@__DataTableID = default(int);
					}
					this.SendPropertyChanged("_DataTable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin__DataTableColumn", Storage="_Admin", ThisKey="AdminID", OtherKey="ID", IsForeignKey=true)]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue._DataTableColumns.Remove(this);
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value._DataTableColumns.Add(this);
						this._AdminID = value.ID;
					}
					else
					{
						this._AdminID = default(int);
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this.@__DataTable = default(EntityRef<_DataTable>);
			this._Admin = default(EntityRef<Admin>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _CountryCode;
		
		private string _CurrencyCode;
		
		private int _CountryZoneID;
		
		private bool _IsActive;
		
		private EntitySet<CRM_Address> _CRM_Addresses;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    partial void OnCurrencyCodeChanging(string value);
    partial void OnCurrencyCodeChanged();
    partial void OnCountryZoneIDChanging(int value);
    partial void OnCountryZoneIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Country()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyCode", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CurrencyCode
		{
			get
			{
				return this._CurrencyCode;
			}
			set
			{
				if ((this._CurrencyCode != value))
				{
					this.OnCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyCode = value;
					this.SendPropertyChanged("CurrencyCode");
					this.OnCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryZoneID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int CountryZoneID
		{
			get
			{
				return this._CountryZoneID;
			}
			set
			{
				if ((this._CountryZoneID != value))
				{
					this.OnCountryZoneIDChanging(value);
					this.SendPropertyChanging();
					this._CountryZoneID = value;
					this.SendPropertyChanged("CountryZoneID");
					this.OnCountryZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_CRM_Address", Storage="_CRM_Addresses", ThisKey="ID", OtherKey="CountryID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<CRM_Address> CRM_Addresses
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_Addresses.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_Addresses;
			}
			set
			{
				this._CRM_Addresses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_Addresses(CRM_Address entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_CRM_Addresses(CRM_Address entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
		
		private void Initialize()
		{
			this._CRM_Addresses = new EntitySet<CRM_Address>(new Action<CRM_Address>(this.attach_CRM_Addresses), new Action<CRM_Address>(this.detach_CRM_Addresses));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Note")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_Note : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TargetReference;
		
		private System.DateTime _DateCreated;
		
		private int _OwnerAdminID;
		
		private string _Body;
		
		private string _Title;
		
		private bool _IsArchived;
		
		private EntitySet<CRM_NoteAdminRead> _CRM_NoteAdminReads;
		
		private EntityRef<Admin> _Admin;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTargetReferenceChanging(string value);
    partial void OnTargetReferenceChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnOwnerAdminIDChanging(int value);
    partial void OnOwnerAdminIDChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    #endregion
		
		public CRM_Note()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string TargetReference
		{
			get
			{
				return this._TargetReference;
			}
			set
			{
				if ((this._TargetReference != value))
				{
					this.OnTargetReferenceChanging(value);
					this.SendPropertyChanging();
					this._TargetReference = value;
					this.SendPropertyChanged("TargetReference");
					this.OnTargetReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerAdminID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int OwnerAdminID
		{
			get
			{
				return this._OwnerAdminID;
			}
			set
			{
				if ((this._OwnerAdminID != value))
				{
					if (this._Admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnerAdminIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerAdminID = value;
					this.SendPropertyChanged("OwnerAdminID");
					this.OnOwnerAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Note_CRM_NoteAdminRead", Storage="_CRM_NoteAdminReads", ThisKey="ID", OtherKey="CRM_NoteID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<CRM_NoteAdminRead> CRM_NoteAdminReads
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_NoteAdminReads.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_NoteAdminReads;
			}
			set
			{
				this._CRM_NoteAdminReads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_CRM_Note", Storage="_Admin", ThisKey="OwnerAdminID", OtherKey="ID", IsForeignKey=true)]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.CRM_Notes.Remove(this);
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.CRM_Notes.Add(this);
						this._OwnerAdminID = value.ID;
					}
					else
					{
						this._OwnerAdminID = default(int);
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_NoteAdminReads(CRM_NoteAdminRead entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Note = this;
		}
		
		private void detach_CRM_NoteAdminReads(CRM_NoteAdminRead entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Note = null;
		}
		
		private void Initialize()
		{
			this._CRM_NoteAdminReads = new EntitySet<CRM_NoteAdminRead>(new Action<CRM_NoteAdminRead>(this.attach_CRM_NoteAdminReads), new Action<CRM_NoteAdminRead>(this.detach_CRM_NoteAdminReads));
			this._Admin = default(EntityRef<Admin>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_LEA")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_LEA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Website;
		
		private EntitySet<CRM_School> _CRM_Schools;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    #endregion
		
		public CRM_LEA()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_LEA_CRM_School", Storage="_CRM_Schools", ThisKey="ID", OtherKey="CRM_LEAID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<CRM_School> CRM_Schools
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_Schools.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_Schools;
			}
			set
			{
				this._CRM_Schools.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_Schools(CRM_School entity)
		{
			this.SendPropertyChanging();
			entity.CRM_LEA = this;
		}
		
		private void detach_CRM_Schools(CRM_School entity)
		{
			this.SendPropertyChanging();
			entity.CRM_LEA = null;
		}
		
		private void Initialize()
		{
			this._CRM_Schools = new EntitySet<CRM_School>(new Action<CRM_School>(this.attach_CRM_Schools), new Action<CRM_School>(this.detach_CRM_Schools));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_FamilyPerson")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_FamilyPerson : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_FamilyID;
		
		private int _CRM_PersonID;
		
		private bool _IsPrimaryContact;
		
		private string _Reference;
		
		private EntityRef<CRM_Family> _CRM_Family;
		
		private EntityRef<CRM_Person> _CRM_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_FamilyIDChanging(int value);
    partial void OnCRM_FamilyIDChanged();
    partial void OnCRM_PersonIDChanging(int value);
    partial void OnCRM_PersonIDChanged();
    partial void OnIsPrimaryContactChanging(bool value);
    partial void OnIsPrimaryContactChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    #endregion
		
		public CRM_FamilyPerson()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_FamilyID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_FamilyID
		{
			get
			{
				return this._CRM_FamilyID;
			}
			set
			{
				if ((this._CRM_FamilyID != value))
				{
					if (this._CRM_Family.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_FamilyIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_FamilyID = value;
					this.SendPropertyChanged("CRM_FamilyID");
					this.OnCRM_FamilyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_PersonID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CRM_PersonID
		{
			get
			{
				return this._CRM_PersonID;
			}
			set
			{
				if ((this._CRM_PersonID != value))
				{
					if (this._CRM_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_PersonIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_PersonID = value;
					this.SendPropertyChanged("CRM_PersonID");
					this.OnCRM_PersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrimaryContact", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsPrimaryContact
		{
			get
			{
				return this._IsPrimaryContact;
			}
			set
			{
				if ((this._IsPrimaryContact != value))
				{
					this.OnIsPrimaryContactChanging(value);
					this.SendPropertyChanging();
					this._IsPrimaryContact = value;
					this.SendPropertyChanged("IsPrimaryContact");
					this.OnIsPrimaryContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(23)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Family_CRM_FamilyPerson", Storage="_CRM_Family", ThisKey="CRM_FamilyID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Family CRM_Family
		{
			get
			{
				return this._CRM_Family.Entity;
			}
			set
			{
				CRM_Family previousValue = this._CRM_Family.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Family.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Family.Entity = null;
						previousValue.CRM_FamilyPersons.Remove(this);
					}
					this._CRM_Family.Entity = value;
					if ((value != null))
					{
						value.CRM_FamilyPersons.Add(this);
						this._CRM_FamilyID = value.ID;
					}
					else
					{
						this._CRM_FamilyID = default(int);
					}
					this.SendPropertyChanged("CRM_Family");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Person_CRM_FamilyPerson", Storage="_CRM_Person", ThisKey="CRM_PersonID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Person CRM_Person
		{
			get
			{
				return this._CRM_Person.Entity;
			}
			set
			{
				CRM_Person previousValue = this._CRM_Person.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Person.Entity = null;
						previousValue.CRM_FamilyPersons.Remove(this);
					}
					this._CRM_Person.Entity = value;
					if ((value != null))
					{
						value.CRM_FamilyPersons.Add(this);
						this._CRM_PersonID = value.ID;
					}
					else
					{
						this._CRM_PersonID = default(int);
					}
					this.SendPropertyChanged("CRM_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CRM_Family = default(EntityRef<CRM_Family>);
			this._CRM_Person = default(EntityRef<CRM_Person>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_CalendarType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_CalendarType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _CSSClass;
		
		private int _OrderNo;
		
		private string _Hex;
		
		private int _FixedRef;
		
		private EntitySet<CRM_Calendar> _CRM_Calendars;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCSSClassChanging(string value);
    partial void OnCSSClassChanged();
    partial void OnOrderNoChanging(int value);
    partial void OnOrderNoChanged();
    partial void OnHexChanging(string value);
    partial void OnHexChanged();
    partial void OnFixedRefChanging(int value);
    partial void OnFixedRefChanged();
    #endregion
		
		public CRM_CalendarType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSSClass", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string CSSClass
		{
			get
			{
				return this._CSSClass;
			}
			set
			{
				if ((this._CSSClass != value))
				{
					this.OnCSSClassChanging(value);
					this.SendPropertyChanging();
					this._CSSClass = value;
					this.SendPropertyChanged("CSSClass");
					this.OnCSSClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hex", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Hex
		{
			get
			{
				return this._Hex;
			}
			set
			{
				if ((this._Hex != value))
				{
					this.OnHexChanging(value);
					this.SendPropertyChanging();
					this._Hex = value;
					this.SendPropertyChanged("Hex");
					this.OnHexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedRef", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int FixedRef
		{
			get
			{
				return this._FixedRef;
			}
			set
			{
				if ((this._FixedRef != value))
				{
					this.OnFixedRefChanging(value);
					this.SendPropertyChanging();
					this._FixedRef = value;
					this.SendPropertyChanged("FixedRef");
					this.OnFixedRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_CalendarType_CRM_Calendar", Storage="_CRM_Calendars", ThisKey="ID", OtherKey="CRM_CalendarTypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<CRM_Calendar> CRM_Calendars
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_Calendars.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_Calendars;
			}
			set
			{
				this._CRM_Calendars.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_Calendars(CRM_Calendar entity)
		{
			this.SendPropertyChanging();
			entity.CRM_CalendarType = this;
		}
		
		private void detach_CRM_Calendars(CRM_Calendar entity)
		{
			this.SendPropertyChanging();
			entity.CRM_CalendarType = null;
		}
		
		private void Initialize()
		{
			this._CRM_Calendars = new EntitySet<CRM_Calendar>(new Action<CRM_Calendar>(this.attach_CRM_Calendars), new Action<CRM_Calendar>(this.detach_CRM_Calendars));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_TaskParticipant")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_TaskParticipant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_TaskID;
		
		private int _AdminID;
		
		private System.DateTime _DateAssigned;
		
		private bool _IsArchived;
		
		private EntityRef<CRM_Task> _CRM_Task;
		
		private EntityRef<Admin> _Admin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_TaskIDChanging(int value);
    partial void OnCRM_TaskIDChanged();
    partial void OnAdminIDChanging(int value);
    partial void OnAdminIDChanged();
    partial void OnDateAssignedChanging(System.DateTime value);
    partial void OnDateAssignedChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    #endregion
		
		public CRM_TaskParticipant()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_TaskID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_TaskID
		{
			get
			{
				return this._CRM_TaskID;
			}
			set
			{
				if ((this._CRM_TaskID != value))
				{
					if (this._CRM_Task.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_TaskIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_TaskID = value;
					this.SendPropertyChanged("CRM_TaskID");
					this.OnCRM_TaskIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._Admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAssigned", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime DateAssigned
		{
			get
			{
				return this._DateAssigned;
			}
			set
			{
				if ((this._DateAssigned != value))
				{
					this.OnDateAssignedChanging(value);
					this.SendPropertyChanging();
					this._DateAssigned = value;
					this.SendPropertyChanged("DateAssigned");
					this.OnDateAssignedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Task_CRM_TaskParticipant", Storage="_CRM_Task", ThisKey="CRM_TaskID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Task CRM_Task
		{
			get
			{
				return this._CRM_Task.Entity;
			}
			set
			{
				CRM_Task previousValue = this._CRM_Task.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Task.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Task.Entity = null;
						previousValue.CRM_TaskParticipants.Remove(this);
					}
					this._CRM_Task.Entity = value;
					if ((value != null))
					{
						value.CRM_TaskParticipants.Add(this);
						this._CRM_TaskID = value.ID;
					}
					else
					{
						this._CRM_TaskID = default(int);
					}
					this.SendPropertyChanged("CRM_Task");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_CRM_TaskParticipant", Storage="_Admin", ThisKey="AdminID", OtherKey="ID", IsForeignKey=true)]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.CRM_TaskParticipants.Remove(this);
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.CRM_TaskParticipants.Add(this);
						this._AdminID = value.ID;
					}
					else
					{
						this._AdminID = default(int);
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CRM_Task = default(EntityRef<CRM_Task>);
			this._Admin = default(EntityRef<Admin>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Task")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_Task : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTime _DueDate;
		
		private bool _IsComplete;
		
		private int _OwnerAdminID;
		
		private bool _IsCancelled;
		
		private bool _IsPublic;
		
		private int _CRM_CalendarID;
		
		private string _Reference;
		
		private EntitySet<CRM_TaskParticipant> _CRM_TaskParticipants;
		
		private EntityRef<Admin> _Admin;
		
		private EntityRef<CRM_Calendar> _CRM_Calendar;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDueDateChanging(System.DateTime value);
    partial void OnDueDateChanged();
    partial void OnIsCompleteChanging(bool value);
    partial void OnIsCompleteChanged();
    partial void OnOwnerAdminIDChanging(int value);
    partial void OnOwnerAdminIDChanged();
    partial void OnIsCancelledChanging(bool value);
    partial void OnIsCancelledChanged();
    partial void OnIsPublicChanging(bool value);
    partial void OnIsPublicChanged();
    partial void OnCRM_CalendarIDChanging(int value);
    partial void OnCRM_CalendarIDChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    #endregion
		
		public CRM_Task()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsComplete", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsComplete
		{
			get
			{
				return this._IsComplete;
			}
			set
			{
				if ((this._IsComplete != value))
				{
					this.OnIsCompleteChanging(value);
					this.SendPropertyChanging();
					this._IsComplete = value;
					this.SendPropertyChanged("IsComplete");
					this.OnIsCompleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerAdminID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int OwnerAdminID
		{
			get
			{
				return this._OwnerAdminID;
			}
			set
			{
				if ((this._OwnerAdminID != value))
				{
					if (this._Admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnerAdminIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerAdminID = value;
					this.SendPropertyChanged("OwnerAdminID");
					this.OnOwnerAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelled", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool IsCancelled
		{
			get
			{
				return this._IsCancelled;
			}
			set
			{
				if ((this._IsCancelled != value))
				{
					this.OnIsCancelledChanging(value);
					this.SendPropertyChanging();
					this._IsCancelled = value;
					this.SendPropertyChanged("IsCancelled");
					this.OnIsCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublic", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this.OnIsPublicChanging(value);
					this.SendPropertyChanging();
					this._IsPublic = value;
					this.SendPropertyChanged("IsPublic");
					this.OnIsPublicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_CalendarID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int CRM_CalendarID
		{
			get
			{
				return this._CRM_CalendarID;
			}
			set
			{
				if ((this._CRM_CalendarID != value))
				{
					if (this._CRM_Calendar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_CalendarIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_CalendarID = value;
					this.SendPropertyChanged("CRM_CalendarID");
					this.OnCRM_CalendarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(15)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Task_CRM_TaskParticipant", Storage="_CRM_TaskParticipants", ThisKey="ID", OtherKey="CRM_TaskID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<CRM_TaskParticipant> CRM_TaskParticipants
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_TaskParticipants.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_TaskParticipants;
			}
			set
			{
				this._CRM_TaskParticipants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_CRM_Task", Storage="_Admin", ThisKey="OwnerAdminID", OtherKey="ID", IsForeignKey=true)]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.CRM_Tasks.Remove(this);
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.CRM_Tasks.Add(this);
						this._OwnerAdminID = value.ID;
					}
					else
					{
						this._OwnerAdminID = default(int);
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Calendar_CRM_Task", Storage="_CRM_Calendar", ThisKey="CRM_CalendarID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Calendar CRM_Calendar
		{
			get
			{
				return this._CRM_Calendar.Entity;
			}
			set
			{
				CRM_Calendar previousValue = this._CRM_Calendar.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Calendar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Calendar.Entity = null;
						previousValue.CRM_Tasks.Remove(this);
					}
					this._CRM_Calendar.Entity = value;
					if ((value != null))
					{
						value.CRM_Tasks.Add(this);
						this._CRM_CalendarID = value.ID;
					}
					else
					{
						this._CRM_CalendarID = default(int);
					}
					this.SendPropertyChanged("CRM_Calendar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_TaskParticipants(CRM_TaskParticipant entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Task = this;
		}
		
		private void detach_CRM_TaskParticipants(CRM_TaskParticipant entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Task = null;
		}
		
		private void Initialize()
		{
			this._CRM_TaskParticipants = new EntitySet<CRM_TaskParticipant>(new Action<CRM_TaskParticipant>(this.attach_CRM_TaskParticipants), new Action<CRM_TaskParticipant>(this.detach_CRM_TaskParticipants));
			this._Admin = default(EntityRef<Admin>);
			this._CRM_Calendar = default(EntityRef<CRM_Calendar>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Venue")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_Venue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _Capacity;
		
		private bool _IsInternal;
		
		private int _CRM_AddressID;
		
		private string _Reference;
		
		private EntitySet<CRM_CalendarVenue> _CRM_CalendarVenues;
		
		private EntityRef<CRM_Address> _CRM_Address;
		
		private EntityRef<CRM_Address> _CRM_Address1;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCapacityChanging(int value);
    partial void OnCapacityChanged();
    partial void OnIsInternalChanging(bool value);
    partial void OnIsInternalChanged();
    partial void OnCRM_AddressIDChanging(int value);
    partial void OnCRM_AddressIDChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    #endregion
		
		public CRM_Venue()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInternal", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsInternal
		{
			get
			{
				return this._IsInternal;
			}
			set
			{
				if ((this._IsInternal != value))
				{
					this.OnIsInternalChanging(value);
					this.SendPropertyChanging();
					this._IsInternal = value;
					this.SendPropertyChanged("IsInternal");
					this.OnIsInternalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_AddressID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int CRM_AddressID
		{
			get
			{
				return this._CRM_AddressID;
			}
			set
			{
				if ((this._CRM_AddressID != value))
				{
					if ((this._CRM_Address.HasLoadedOrAssignedValue || this._CRM_Address1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_AddressIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_AddressID = value;
					this.SendPropertyChanged("CRM_AddressID");
					this.OnCRM_AddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(16)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Venue_CRM_CalendarVenue", Storage="_CRM_CalendarVenues", ThisKey="ID", OtherKey="CRM_VenueID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<CRM_CalendarVenue> CRM_CalendarVenues
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_CalendarVenues.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_CalendarVenues;
			}
			set
			{
				this._CRM_CalendarVenues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Address_CRM_Venue", Storage="_CRM_Address", ThisKey="CRM_AddressID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Address CRM_Address
		{
			get
			{
				return this._CRM_Address.Entity;
			}
			set
			{
				CRM_Address previousValue = this._CRM_Address.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Address.Entity = null;
						previousValue.CRM_Venues.Remove(this);
					}
					this._CRM_Address.Entity = value;
					if ((value != null))
					{
						value.CRM_Venues.Add(this);
						this._CRM_AddressID = value.ID;
					}
					else
					{
						this._CRM_AddressID = default(int);
					}
					this.SendPropertyChanged("CRM_Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Address_CRM_Venue1", Storage="_CRM_Address1", ThisKey="CRM_AddressID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Address CRM_Address1
		{
			get
			{
				return this._CRM_Address1.Entity;
			}
			set
			{
				CRM_Address previousValue = this._CRM_Address1.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Address1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Address1.Entity = null;
						previousValue.CRM_Venues1.Remove(this);
					}
					this._CRM_Address1.Entity = value;
					if ((value != null))
					{
						value.CRM_Venues1.Add(this);
						this._CRM_AddressID = value.ID;
					}
					else
					{
						this._CRM_AddressID = default(int);
					}
					this.SendPropertyChanged("CRM_Address1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_CalendarVenues(CRM_CalendarVenue entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Venue = this;
		}
		
		private void detach_CRM_CalendarVenues(CRM_CalendarVenue entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Venue = null;
		}
		
		private void Initialize()
		{
			this._CRM_CalendarVenues = new EntitySet<CRM_CalendarVenue>(new Action<CRM_CalendarVenue>(this.attach_CRM_CalendarVenues), new Action<CRM_CalendarVenue>(this.detach_CRM_CalendarVenues));
			this._CRM_Address = default(EntityRef<CRM_Address>);
			this._CRM_Address1 = default(EntityRef<CRM_Address>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Family")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_Family : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Reference;
		
		private EntitySet<CRM_FamilyPerson> _CRM_FamilyPersons;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    #endregion
		
		public CRM_Family()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(17)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Family_CRM_FamilyPerson", Storage="_CRM_FamilyPersons", ThisKey="ID", OtherKey="CRM_FamilyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<CRM_FamilyPerson> CRM_FamilyPersons
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_FamilyPersons.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_FamilyPersons;
			}
			set
			{
				this._CRM_FamilyPersons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_FamilyPersons(CRM_FamilyPerson entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Family = this;
		}
		
		private void detach_CRM_FamilyPersons(CRM_FamilyPerson entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Family = null;
		}
		
		private void Initialize()
		{
			this._CRM_FamilyPersons = new EntitySet<CRM_FamilyPerson>(new Action<CRM_FamilyPerson>(this.attach_CRM_FamilyPersons), new Action<CRM_FamilyPerson>(this.detach_CRM_FamilyPersons));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_CalendarPerHead")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_CalendarPerHead : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_CalendarID;
		
		private string _TargetReference;
		
		private decimal _Price;
		
		private int _PlusChildren;
		
		private decimal _ChildrenPrice;
		
		private EntityRef<CRM_Calendar> _CRM_Calendar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_CalendarIDChanging(int value);
    partial void OnCRM_CalendarIDChanged();
    partial void OnTargetReferenceChanging(string value);
    partial void OnTargetReferenceChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnPlusChildrenChanging(int value);
    partial void OnPlusChildrenChanged();
    partial void OnChildrenPriceChanging(decimal value);
    partial void OnChildrenPriceChanged();
    #endregion
		
		public CRM_CalendarPerHead()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_CalendarID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_CalendarID
		{
			get
			{
				return this._CRM_CalendarID;
			}
			set
			{
				if ((this._CRM_CalendarID != value))
				{
					if (this._CRM_Calendar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_CalendarIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_CalendarID = value;
					this.SendPropertyChanged("CRM_CalendarID");
					this.OnCRM_CalendarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string TargetReference
		{
			get
			{
				return this._TargetReference;
			}
			set
			{
				if ((this._TargetReference != value))
				{
					this.OnTargetReferenceChanging(value);
					this.SendPropertyChanging();
					this._TargetReference = value;
					this.SendPropertyChanged("TargetReference");
					this.OnTargetReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlusChildren", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int PlusChildren
		{
			get
			{
				return this._PlusChildren;
			}
			set
			{
				if ((this._PlusChildren != value))
				{
					this.OnPlusChildrenChanging(value);
					this.SendPropertyChanging();
					this._PlusChildren = value;
					this.SendPropertyChanged("PlusChildren");
					this.OnPlusChildrenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildrenPrice", DbType="Money NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public decimal ChildrenPrice
		{
			get
			{
				return this._ChildrenPrice;
			}
			set
			{
				if ((this._ChildrenPrice != value))
				{
					this.OnChildrenPriceChanging(value);
					this.SendPropertyChanging();
					this._ChildrenPrice = value;
					this.SendPropertyChanged("ChildrenPrice");
					this.OnChildrenPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Calendar_CRM_CalendarPerHead", Storage="_CRM_Calendar", ThisKey="CRM_CalendarID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Calendar CRM_Calendar
		{
			get
			{
				return this._CRM_Calendar.Entity;
			}
			set
			{
				CRM_Calendar previousValue = this._CRM_Calendar.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Calendar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Calendar.Entity = null;
						previousValue.CRM_CalendarPerHeads.Remove(this);
					}
					this._CRM_Calendar.Entity = value;
					if ((value != null))
					{
						value.CRM_CalendarPerHeads.Add(this);
						this._CRM_CalendarID = value.ID;
					}
					else
					{
						this._CRM_CalendarID = default(int);
					}
					this.SendPropertyChanged("CRM_Calendar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CRM_Calendar = default(EntityRef<CRM_Calendar>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_AnnualPassCard")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_AnnualPassCard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MembershipNumber;
		
		private EntitySet<CRM_AnnualPass> _CRM_AnnualPasses;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMembershipNumberChanging(int value);
    partial void OnMembershipNumberChanged();
    #endregion
		
		public CRM_AnnualPassCard()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MembershipNumber", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int MembershipNumber
		{
			get
			{
				return this._MembershipNumber;
			}
			set
			{
				if ((this._MembershipNumber != value))
				{
					this.OnMembershipNumberChanging(value);
					this.SendPropertyChanging();
					this._MembershipNumber = value;
					this.SendPropertyChanged("MembershipNumber");
					this.OnMembershipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_AnnualPassCard_CRM_AnnualPass", Storage="_CRM_AnnualPasses", ThisKey="ID", OtherKey="CRM_AnnualPassCardID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<CRM_AnnualPass> CRM_AnnualPasses
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_AnnualPasses.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_AnnualPasses;
			}
			set
			{
				this._CRM_AnnualPasses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_AnnualPasses(CRM_AnnualPass entity)
		{
			this.SendPropertyChanging();
			entity.CRM_AnnualPassCard = this;
		}
		
		private void detach_CRM_AnnualPasses(CRM_AnnualPass entity)
		{
			this.SendPropertyChanging();
			entity.CRM_AnnualPassCard = null;
		}
		
		private void Initialize()
		{
			this._CRM_AnnualPasses = new EntitySet<CRM_AnnualPass>(new Action<CRM_AnnualPass>(this.attach_CRM_AnnualPasses), new Action<CRM_AnnualPass>(this.detach_CRM_AnnualPasses));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_AnnualPassPerson")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_AnnualPassPerson : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_AnnualPassID;
		
		private int _CRM_PersonID;
		
		private bool _IsArchived;
		
		private EntityRef<CRM_Person> _CRM_Person;
		
		private EntityRef<CRM_AnnualPass> _CRM_AnnualPass;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_AnnualPassIDChanging(int value);
    partial void OnCRM_AnnualPassIDChanged();
    partial void OnCRM_PersonIDChanging(int value);
    partial void OnCRM_PersonIDChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    #endregion
		
		public CRM_AnnualPassPerson()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_AnnualPassID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_AnnualPassID
		{
			get
			{
				return this._CRM_AnnualPassID;
			}
			set
			{
				if ((this._CRM_AnnualPassID != value))
				{
					if (this._CRM_AnnualPass.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_AnnualPassIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_AnnualPassID = value;
					this.SendPropertyChanged("CRM_AnnualPassID");
					this.OnCRM_AnnualPassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_PersonID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CRM_PersonID
		{
			get
			{
				return this._CRM_PersonID;
			}
			set
			{
				if ((this._CRM_PersonID != value))
				{
					if (this._CRM_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_PersonIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_PersonID = value;
					this.SendPropertyChanged("CRM_PersonID");
					this.OnCRM_PersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Person_CRM_AnnualPassPerson", Storage="_CRM_Person", ThisKey="CRM_PersonID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Person CRM_Person
		{
			get
			{
				return this._CRM_Person.Entity;
			}
			set
			{
				CRM_Person previousValue = this._CRM_Person.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Person.Entity = null;
						previousValue.CRM_AnnualPassPersons.Remove(this);
					}
					this._CRM_Person.Entity = value;
					if ((value != null))
					{
						value.CRM_AnnualPassPersons.Add(this);
						this._CRM_PersonID = value.ID;
					}
					else
					{
						this._CRM_PersonID = default(int);
					}
					this.SendPropertyChanged("CRM_Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_AnnualPass_CRM_AnnualPassPerson", Storage="_CRM_AnnualPass", ThisKey="CRM_AnnualPassID", OtherKey="ID", IsForeignKey=true)]
		public CRM_AnnualPass CRM_AnnualPass
		{
			get
			{
				return this._CRM_AnnualPass.Entity;
			}
			set
			{
				CRM_AnnualPass previousValue = this._CRM_AnnualPass.Entity;
				if (((previousValue != value) 
							|| (this._CRM_AnnualPass.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_AnnualPass.Entity = null;
						previousValue.CRM_AnnualPassPersons.Remove(this);
					}
					this._CRM_AnnualPass.Entity = value;
					if ((value != null))
					{
						value.CRM_AnnualPassPersons.Add(this);
						this._CRM_AnnualPassID = value.ID;
					}
					else
					{
						this._CRM_AnnualPassID = default(int);
					}
					this.SendPropertyChanged("CRM_AnnualPass");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CRM_Person = default(EntityRef<CRM_Person>);
			this._CRM_AnnualPass = default(EntityRef<CRM_AnnualPass>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_CalendarAttendance")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_CalendarAttendance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _Timestamp;
		
		private int _CRM_CalendarID;
		
		private int _CRM_PersonID;
		
		private int _Admin_ID;
		
		private EntityRef<Admin> _Admin;
		
		private EntityRef<CRM_Person> _CRM_Person;
		
		private EntityRef<CRM_Calendar> _CRM_Calendar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    partial void OnCRM_CalendarIDChanging(int value);
    partial void OnCRM_CalendarIDChanged();
    partial void OnCRM_PersonIDChanging(int value);
    partial void OnCRM_PersonIDChanged();
    partial void OnAdmin_IDChanging(int value);
    partial void OnAdmin_IDChanged();
    #endregion
		
		public CRM_CalendarAttendance()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_CalendarID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CRM_CalendarID
		{
			get
			{
				return this._CRM_CalendarID;
			}
			set
			{
				if ((this._CRM_CalendarID != value))
				{
					if (this._CRM_Calendar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_CalendarIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_CalendarID = value;
					this.SendPropertyChanged("CRM_CalendarID");
					this.OnCRM_CalendarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_PersonID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int CRM_PersonID
		{
			get
			{
				return this._CRM_PersonID;
			}
			set
			{
				if ((this._CRM_PersonID != value))
				{
					if (this._CRM_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_PersonIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_PersonID = value;
					this.SendPropertyChanged("CRM_PersonID");
					this.OnCRM_PersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admin_ID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int Admin_ID
		{
			get
			{
				return this._Admin_ID;
			}
			set
			{
				if ((this._Admin_ID != value))
				{
					if (this._Admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdmin_IDChanging(value);
					this.SendPropertyChanging();
					this._Admin_ID = value;
					this.SendPropertyChanged("Admin_ID");
					this.OnAdmin_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_CRM_CalendarAttendance", Storage="_Admin", ThisKey="Admin_ID", OtherKey="ID", IsForeignKey=true)]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.CRM_CalendarAttendances.Remove(this);
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.CRM_CalendarAttendances.Add(this);
						this._Admin_ID = value.ID;
					}
					else
					{
						this._Admin_ID = default(int);
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Person_CRM_CalendarAttendance", Storage="_CRM_Person", ThisKey="CRM_PersonID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Person CRM_Person
		{
			get
			{
				return this._CRM_Person.Entity;
			}
			set
			{
				CRM_Person previousValue = this._CRM_Person.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Person.Entity = null;
						previousValue.CRM_CalendarAttendances.Remove(this);
					}
					this._CRM_Person.Entity = value;
					if ((value != null))
					{
						value.CRM_CalendarAttendances.Add(this);
						this._CRM_PersonID = value.ID;
					}
					else
					{
						this._CRM_PersonID = default(int);
					}
					this.SendPropertyChanged("CRM_Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Calendar_CRM_CalendarAttendance", Storage="_CRM_Calendar", ThisKey="CRM_CalendarID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Calendar CRM_Calendar
		{
			get
			{
				return this._CRM_Calendar.Entity;
			}
			set
			{
				CRM_Calendar previousValue = this._CRM_Calendar.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Calendar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Calendar.Entity = null;
						previousValue.CRM_CalendarAttendances.Remove(this);
					}
					this._CRM_Calendar.Entity = value;
					if ((value != null))
					{
						value.CRM_CalendarAttendances.Add(this);
						this._CRM_CalendarID = value.ID;
					}
					else
					{
						this._CRM_CalendarID = default(int);
					}
					this.SendPropertyChanged("CRM_Calendar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Admin = default(EntityRef<Admin>);
			this._CRM_Person = default(EntityRef<CRM_Person>);
			this._CRM_Calendar = default(EntityRef<CRM_Calendar>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.DateTime _DateFrom;
		
		private System.DateTime _DateTo;
		
		private string _ShortDescription;
		
		private string _SharePromo;
		
		private string _Body;
		
		private string _RelatedInfo;
		
		private bool _IsActive;
		
		private bool _IsArchived;
		
		private string _OverrideDates;
		
		private bool _IsExhibition;
		
		private bool _IsRequiresAnnualPass;
		
		private bool _IsRequiresDayTicket;
		
		private bool _IsFeatured;
		
		private int _VATCodeID;
		
		private string _OverrideSoldOut;
		
		private EntitySet<CRM_CalendarGroupBooking> _CRM_CalendarGroupBookings;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateFromChanging(System.DateTime value);
    partial void OnDateFromChanged();
    partial void OnDateToChanging(System.DateTime value);
    partial void OnDateToChanged();
    partial void OnShortDescriptionChanging(string value);
    partial void OnShortDescriptionChanged();
    partial void OnSharePromoChanging(string value);
    partial void OnSharePromoChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnRelatedInfoChanging(string value);
    partial void OnRelatedInfoChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    partial void OnOverrideDatesChanging(string value);
    partial void OnOverrideDatesChanged();
    partial void OnIsExhibitionChanging(bool value);
    partial void OnIsExhibitionChanged();
    partial void OnIsRequiresAnnualPassChanging(bool value);
    partial void OnIsRequiresAnnualPassChanged();
    partial void OnIsRequiresDayTicketChanging(bool value);
    partial void OnIsRequiresDayTicketChanged();
    partial void OnIsFeaturedChanging(bool value);
    partial void OnIsFeaturedChanged();
    partial void OnVATCodeIDChanging(int value);
    partial void OnVATCodeIDChanged();
    partial void OnOverrideSoldOutChanging(string value);
    partial void OnOverrideSoldOutChanged();
    #endregion
		
		public Event()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFrom", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime DateFrom
		{
			get
			{
				return this._DateFrom;
			}
			set
			{
				if ((this._DateFrom != value))
				{
					this.OnDateFromChanging(value);
					this.SendPropertyChanging();
					this._DateFrom = value;
					this.SendPropertyChanged("DateFrom");
					this.OnDateFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTo", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime DateTo
		{
			get
			{
				return this._DateTo;
			}
			set
			{
				if ((this._DateTo != value))
				{
					this.OnDateToChanging(value);
					this.SendPropertyChanging();
					this._DateTo = value;
					this.SendPropertyChanged("DateTo");
					this.OnDateToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string ShortDescription
		{
			get
			{
				return this._ShortDescription;
			}
			set
			{
				if ((this._ShortDescription != value))
				{
					this.OnShortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShortDescription = value;
					this.SendPropertyChanged("ShortDescription");
					this.OnShortDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SharePromo", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string SharePromo
		{
			get
			{
				return this._SharePromo;
			}
			set
			{
				if ((this._SharePromo != value))
				{
					this.OnSharePromoChanging(value);
					this.SendPropertyChanging();
					this._SharePromo = value;
					this.SendPropertyChanged("SharePromo");
					this.OnSharePromoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelatedInfo", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string RelatedInfo
		{
			get
			{
				return this._RelatedInfo;
			}
			set
			{
				if ((this._RelatedInfo != value))
				{
					this.OnRelatedInfoChanging(value);
					this.SendPropertyChanging();
					this._RelatedInfo = value;
					this.SendPropertyChanged("RelatedInfo");
					this.OnRelatedInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideDates", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string OverrideDates
		{
			get
			{
				return this._OverrideDates;
			}
			set
			{
				if ((this._OverrideDates != value))
				{
					this.OnOverrideDatesChanging(value);
					this.SendPropertyChanging();
					this._OverrideDates = value;
					this.SendPropertyChanged("OverrideDates");
					this.OnOverrideDatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExhibition", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public bool IsExhibition
		{
			get
			{
				return this._IsExhibition;
			}
			set
			{
				if ((this._IsExhibition != value))
				{
					this.OnIsExhibitionChanging(value);
					this.SendPropertyChanging();
					this._IsExhibition = value;
					this.SendPropertyChanged("IsExhibition");
					this.OnIsExhibitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresAnnualPass", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public bool IsRequiresAnnualPass
		{
			get
			{
				return this._IsRequiresAnnualPass;
			}
			set
			{
				if ((this._IsRequiresAnnualPass != value))
				{
					this.OnIsRequiresAnnualPassChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresAnnualPass = value;
					this.SendPropertyChanged("IsRequiresAnnualPass");
					this.OnIsRequiresAnnualPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresDayTicket", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public bool IsRequiresDayTicket
		{
			get
			{
				return this._IsRequiresDayTicket;
			}
			set
			{
				if ((this._IsRequiresDayTicket != value))
				{
					this.OnIsRequiresDayTicketChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresDayTicket = value;
					this.SendPropertyChanged("IsRequiresDayTicket");
					this.OnIsRequiresDayTicketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFeatured", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public bool IsFeatured
		{
			get
			{
				return this._IsFeatured;
			}
			set
			{
				if ((this._IsFeatured != value))
				{
					this.OnIsFeaturedChanging(value);
					this.SendPropertyChanging();
					this._IsFeatured = value;
					this.SendPropertyChanged("IsFeatured");
					this.OnIsFeaturedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VATCodeID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public int VATCodeID
		{
			get
			{
				return this._VATCodeID;
			}
			set
			{
				if ((this._VATCodeID != value))
				{
					this.OnVATCodeIDChanging(value);
					this.SendPropertyChanging();
					this._VATCodeID = value;
					this.SendPropertyChanged("VATCodeID");
					this.OnVATCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideSoldOut", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string OverrideSoldOut
		{
			get
			{
				return this._OverrideSoldOut;
			}
			set
			{
				if ((this._OverrideSoldOut != value))
				{
					this.OnOverrideSoldOutChanging(value);
					this.SendPropertyChanging();
					this._OverrideSoldOut = value;
					this.SendPropertyChanged("OverrideSoldOut");
					this.OnOverrideSoldOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_CRM_CalendarGroupBooking", Storage="_CRM_CalendarGroupBookings", ThisKey="ID", OtherKey="EventID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<CRM_CalendarGroupBooking> CRM_CalendarGroupBookings
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_CalendarGroupBookings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_CalendarGroupBookings;
			}
			set
			{
				this._CRM_CalendarGroupBookings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_CalendarGroupBookings(CRM_CalendarGroupBooking entity)
		{
			this.SendPropertyChanging();
			entity.Event = this;
		}
		
		private void detach_CRM_CalendarGroupBookings(CRM_CalendarGroupBooking entity)
		{
			this.SendPropertyChanging();
			entity.Event = null;
		}
		
		private void Initialize()
		{
			this._CRM_CalendarGroupBookings = new EntitySet<CRM_CalendarGroupBooking>(new Action<CRM_CalendarGroupBooking>(this.attach_CRM_CalendarGroupBookings), new Action<CRM_CalendarGroupBooking>(this.detach_CRM_CalendarGroupBookings));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_CalendarParty")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_CalendarParty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_CalendarID;
		
		private string _Theme;
		
		private int _AgeOnBirthday;
		
		private int _NumberOfChildren;
		
		private int _AdditionalAdults;
		
		private string _CateringRequirements;
		
		private decimal _CateringPrice;
		
		private bool _AgreedToTerms;
		
		private string _AdditionalEmail;
		
		private string _Reference;
		
		private EntityRef<CRM_Calendar> _CRM_Calendar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_CalendarIDChanging(int value);
    partial void OnCRM_CalendarIDChanged();
    partial void OnThemeChanging(string value);
    partial void OnThemeChanged();
    partial void OnAgeOnBirthdayChanging(int value);
    partial void OnAgeOnBirthdayChanged();
    partial void OnNumberOfChildrenChanging(int value);
    partial void OnNumberOfChildrenChanged();
    partial void OnAdditionalAdultsChanging(int value);
    partial void OnAdditionalAdultsChanged();
    partial void OnCateringRequirementsChanging(string value);
    partial void OnCateringRequirementsChanged();
    partial void OnCateringPriceChanging(decimal value);
    partial void OnCateringPriceChanged();
    partial void OnAgreedToTermsChanging(bool value);
    partial void OnAgreedToTermsChanged();
    partial void OnAdditionalEmailChanging(string value);
    partial void OnAdditionalEmailChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    #endregion
		
		public CRM_CalendarParty()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_CalendarID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_CalendarID
		{
			get
			{
				return this._CRM_CalendarID;
			}
			set
			{
				if ((this._CRM_CalendarID != value))
				{
					if (this._CRM_Calendar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_CalendarIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_CalendarID = value;
					this.SendPropertyChanged("CRM_CalendarID");
					this.OnCRM_CalendarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Theme", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Theme
		{
			get
			{
				return this._Theme;
			}
			set
			{
				if ((this._Theme != value))
				{
					this.OnThemeChanging(value);
					this.SendPropertyChanging();
					this._Theme = value;
					this.SendPropertyChanged("Theme");
					this.OnThemeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgeOnBirthday", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int AgeOnBirthday
		{
			get
			{
				return this._AgeOnBirthday;
			}
			set
			{
				if ((this._AgeOnBirthday != value))
				{
					this.OnAgeOnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._AgeOnBirthday = value;
					this.SendPropertyChanged("AgeOnBirthday");
					this.OnAgeOnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfChildren", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int NumberOfChildren
		{
			get
			{
				return this._NumberOfChildren;
			}
			set
			{
				if ((this._NumberOfChildren != value))
				{
					this.OnNumberOfChildrenChanging(value);
					this.SendPropertyChanging();
					this._NumberOfChildren = value;
					this.SendPropertyChanged("NumberOfChildren");
					this.OnNumberOfChildrenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalAdults", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int AdditionalAdults
		{
			get
			{
				return this._AdditionalAdults;
			}
			set
			{
				if ((this._AdditionalAdults != value))
				{
					this.OnAdditionalAdultsChanging(value);
					this.SendPropertyChanging();
					this._AdditionalAdults = value;
					this.SendPropertyChanged("AdditionalAdults");
					this.OnAdditionalAdultsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CateringRequirements", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string CateringRequirements
		{
			get
			{
				return this._CateringRequirements;
			}
			set
			{
				if ((this._CateringRequirements != value))
				{
					this.OnCateringRequirementsChanging(value);
					this.SendPropertyChanging();
					this._CateringRequirements = value;
					this.SendPropertyChanged("CateringRequirements");
					this.OnCateringRequirementsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CateringPrice", DbType="Money NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public decimal CateringPrice
		{
			get
			{
				return this._CateringPrice;
			}
			set
			{
				if ((this._CateringPrice != value))
				{
					this.OnCateringPriceChanging(value);
					this.SendPropertyChanging();
					this._CateringPrice = value;
					this.SendPropertyChanged("CateringPrice");
					this.OnCateringPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreedToTerms", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool AgreedToTerms
		{
			get
			{
				return this._AgreedToTerms;
			}
			set
			{
				if ((this._AgreedToTerms != value))
				{
					this.OnAgreedToTermsChanging(value);
					this.SendPropertyChanging();
					this._AgreedToTerms = value;
					this.SendPropertyChanged("AgreedToTerms");
					this.OnAgreedToTermsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalEmail", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string AdditionalEmail
		{
			get
			{
				return this._AdditionalEmail;
			}
			set
			{
				if ((this._AdditionalEmail != value))
				{
					this.OnAdditionalEmailChanging(value);
					this.SendPropertyChanging();
					this._AdditionalEmail = value;
					this.SendPropertyChanged("AdditionalEmail");
					this.OnAdditionalEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(16)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Calendar_CRM_CalendarParty", Storage="_CRM_Calendar", ThisKey="CRM_CalendarID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Calendar CRM_Calendar
		{
			get
			{
				return this._CRM_Calendar.Entity;
			}
			set
			{
				CRM_Calendar previousValue = this._CRM_Calendar.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Calendar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Calendar.Entity = null;
						previousValue.CRM_CalendarParties.Remove(this);
					}
					this._CRM_Calendar.Entity = value;
					if ((value != null))
					{
						value.CRM_CalendarParties.Add(this);
						this._CRM_CalendarID = value.ID;
					}
					else
					{
						this._CRM_CalendarID = default(int);
					}
					this.SendPropertyChanged("CRM_Calendar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CRM_Calendar = default(EntityRef<CRM_Calendar>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Package")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_Package : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _IsActive;
		
		private EntitySet<CRM_CalendarCPD> _CRM_CalendarCPDs;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public CRM_Package()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Package_CRM_CalendarCPD", Storage="_CRM_CalendarCPDs", ThisKey="ID", OtherKey="CRM_PackageID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<CRM_CalendarCPD> CRM_CalendarCPDs
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_CalendarCPDs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_CalendarCPDs;
			}
			set
			{
				this._CRM_CalendarCPDs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_CalendarCPDs(CRM_CalendarCPD entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Package = this;
		}
		
		private void detach_CRM_CalendarCPDs(CRM_CalendarCPD entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Package = null;
		}
		
		private void Initialize()
		{
			this._CRM_CalendarCPDs = new EntitySet<CRM_CalendarCPD>(new Action<CRM_CalendarCPD>(this.attach_CRM_CalendarCPDs), new Action<CRM_CalendarCPD>(this.detach_CRM_CalendarCPDs));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_DataTable]")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class _DataTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TableReference;
		
		private string _FriendlyName;
		
		private bool _IsAllowCustom;
		
		private EntitySet<_DataTableColumn> @__DataTableColumns;
		
		private EntitySet<CRM_FormField> _CRM_FormFields;
		
		private EntitySet<AdminDataQuery> _AdminDataQueries;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTableReferenceChanging(string value);
    partial void OnTableReferenceChanged();
    partial void OnFriendlyNameChanging(string value);
    partial void OnFriendlyNameChanged();
    partial void OnIsAllowCustomChanging(bool value);
    partial void OnIsAllowCustomChanged();
    #endregion
		
		public _DataTable()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableReference", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string TableReference
		{
			get
			{
				return this._TableReference;
			}
			set
			{
				if ((this._TableReference != value))
				{
					this.OnTableReferenceChanging(value);
					this.SendPropertyChanging();
					this._TableReference = value;
					this.SendPropertyChanged("TableReference");
					this.OnTableReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string FriendlyName
		{
			get
			{
				return this._FriendlyName;
			}
			set
			{
				if ((this._FriendlyName != value))
				{
					this.OnFriendlyNameChanging(value);
					this.SendPropertyChanging();
					this._FriendlyName = value;
					this.SendPropertyChanged("FriendlyName");
					this.OnFriendlyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAllowCustom", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsAllowCustom
		{
			get
			{
				return this._IsAllowCustom;
			}
			set
			{
				if ((this._IsAllowCustom != value))
				{
					this.OnIsAllowCustomChanging(value);
					this.SendPropertyChanging();
					this._IsAllowCustom = value;
					this.SendPropertyChanged("IsAllowCustom");
					this.OnIsAllowCustomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_DataTable__DataTableColumn", Storage="__DataTableColumns", ThisKey="ID", OtherKey="_DataTableID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<_DataTableColumn> _DataTableColumns
		{
			get
			{
				if ((this.serializing 
							&& (this.@__DataTableColumns.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this.@__DataTableColumns;
			}
			set
			{
				this.@__DataTableColumns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_DataTable_CRM_FormField", Storage="_CRM_FormFields", ThisKey="ID", OtherKey="_DataTableID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<CRM_FormField> CRM_FormFields
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_FormFields.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_FormFields;
			}
			set
			{
				this._CRM_FormFields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_DataTable_AdminDataQuery", Storage="_AdminDataQueries", ThisKey="ID", OtherKey="_DataTableID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<AdminDataQuery> AdminDataQueries
		{
			get
			{
				if ((this.serializing 
							&& (this._AdminDataQueries.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AdminDataQueries;
			}
			set
			{
				this._AdminDataQueries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach__DataTableColumns(_DataTableColumn entity)
		{
			this.SendPropertyChanging();
			entity._DataTable = this;
		}
		
		private void detach__DataTableColumns(_DataTableColumn entity)
		{
			this.SendPropertyChanging();
			entity._DataTable = null;
		}
		
		private void attach_CRM_FormFields(CRM_FormField entity)
		{
			this.SendPropertyChanging();
			entity._DataTable = this;
		}
		
		private void detach_CRM_FormFields(CRM_FormField entity)
		{
			this.SendPropertyChanging();
			entity._DataTable = null;
		}
		
		private void attach_AdminDataQueries(AdminDataQuery entity)
		{
			this.SendPropertyChanging();
			entity._DataTable = this;
		}
		
		private void detach_AdminDataQueries(AdminDataQuery entity)
		{
			this.SendPropertyChanging();
			entity._DataTable = null;
		}
		
		private void Initialize()
		{
			this.@__DataTableColumns = new EntitySet<_DataTableColumn>(new Action<_DataTableColumn>(this.attach__DataTableColumns), new Action<_DataTableColumn>(this.detach__DataTableColumns));
			this._CRM_FormFields = new EntitySet<CRM_FormField>(new Action<CRM_FormField>(this.attach_CRM_FormFields), new Action<CRM_FormField>(this.detach_CRM_FormFields));
			this._AdminDataQueries = new EntitySet<AdminDataQuery>(new Action<AdminDataQuery>(this.attach_AdminDataQueries), new Action<AdminDataQuery>(this.detach_AdminDataQueries));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_FormField")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_FormField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int @__DataTableID;
		
		private string _Name;
		
		private int _OrderNo;
		
		private byte _Type;
		
		private bool _IsRequired;
		
		private bool _IsActive;
		
		private bool _IsArchived;
		
		private EntitySet<CRM_FormFieldItem> _CRM_FormFieldItems;
		
		private EntitySet<CRM_FormFieldAnswer> _CRM_FormFieldAnswers;
		
		private EntitySet<CRM_FormFieldResponse> _CRM_FormFieldResponses;
		
		private EntityRef<_DataTable> @__DataTable;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void On_DataTableIDChanging(int value);
    partial void On_DataTableIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOrderNoChanging(int value);
    partial void OnOrderNoChanged();
    partial void OnTypeChanging(byte value);
    partial void OnTypeChanged();
    partial void OnIsRequiredChanging(bool value);
    partial void OnIsRequiredChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    #endregion
		
		public CRM_FormField()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_DataTableID]", Storage="__DataTableID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int _DataTableID
		{
			get
			{
				return this.@__DataTableID;
			}
			set
			{
				if ((this.@__DataTableID != value))
				{
					this.On_DataTableIDChanging(value);
					this.SendPropertyChanging();
					this.@__DataTableID = value;
					this.SendPropertyChanged("_DataTableID");
					this.On_DataTableIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public byte Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequired", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsRequired
		{
			get
			{
				return this._IsRequired;
			}
			set
			{
				if ((this._IsRequired != value))
				{
					this.OnIsRequiredChanging(value);
					this.SendPropertyChanging();
					this._IsRequired = value;
					this.SendPropertyChanged("IsRequired");
					this.OnIsRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_FormField_CRM_FormFieldItem", Storage="_CRM_FormFieldItems", ThisKey="ID", OtherKey="CRM_FormFieldID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<CRM_FormFieldItem> CRM_FormFieldItems
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_FormFieldItems.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_FormFieldItems;
			}
			set
			{
				this._CRM_FormFieldItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_FormField_CRM_FormFieldAnswer", Storage="_CRM_FormFieldAnswers", ThisKey="ID", OtherKey="CRM_FormFieldID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<CRM_FormFieldAnswer> CRM_FormFieldAnswers
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_FormFieldAnswers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_FormFieldAnswers;
			}
			set
			{
				this._CRM_FormFieldAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_FormField_CRM_FormFieldResponse", Storage="_CRM_FormFieldResponses", ThisKey="ID", OtherKey="CRM_FormFieldID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<CRM_FormFieldResponse> CRM_FormFieldResponses
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_FormFieldResponses.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_FormFieldResponses;
			}
			set
			{
				this._CRM_FormFieldResponses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_DataTable_CRM_FormField", Storage="__DataTable", ThisKey="_DataTableID", OtherKey="ID", IsForeignKey=true)]
		public _DataTable _DataTable
		{
			get
			{
				return this.@__DataTable.Entity;
			}
			set
			{
				_DataTable previousValue = this.@__DataTable.Entity;
				if (((previousValue != value) 
							|| (this.@__DataTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__DataTable.Entity = null;
						previousValue.CRM_FormFields.Remove(this);
					}
					this.@__DataTable.Entity = value;
					if ((value != null))
					{
						value.CRM_FormFields.Add(this);
						this.@__DataTableID = value.ID;
					}
					else
					{
						this.@__DataTableID = default(int);
					}
					this.SendPropertyChanged("_DataTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_FormFieldItems(CRM_FormFieldItem entity)
		{
			this.SendPropertyChanging();
			entity.CRM_FormField = this;
		}
		
		private void detach_CRM_FormFieldItems(CRM_FormFieldItem entity)
		{
			this.SendPropertyChanging();
			entity.CRM_FormField = null;
		}
		
		private void attach_CRM_FormFieldAnswers(CRM_FormFieldAnswer entity)
		{
			this.SendPropertyChanging();
			entity.CRM_FormField = this;
		}
		
		private void detach_CRM_FormFieldAnswers(CRM_FormFieldAnswer entity)
		{
			this.SendPropertyChanging();
			entity.CRM_FormField = null;
		}
		
		private void attach_CRM_FormFieldResponses(CRM_FormFieldResponse entity)
		{
			this.SendPropertyChanging();
			entity.CRM_FormField = this;
		}
		
		private void detach_CRM_FormFieldResponses(CRM_FormFieldResponse entity)
		{
			this.SendPropertyChanging();
			entity.CRM_FormField = null;
		}
		
		private void Initialize()
		{
			this._CRM_FormFieldItems = new EntitySet<CRM_FormFieldItem>(new Action<CRM_FormFieldItem>(this.attach_CRM_FormFieldItems), new Action<CRM_FormFieldItem>(this.detach_CRM_FormFieldItems));
			this._CRM_FormFieldAnswers = new EntitySet<CRM_FormFieldAnswer>(new Action<CRM_FormFieldAnswer>(this.attach_CRM_FormFieldAnswers), new Action<CRM_FormFieldAnswer>(this.detach_CRM_FormFieldAnswers));
			this._CRM_FormFieldResponses = new EntitySet<CRM_FormFieldResponse>(new Action<CRM_FormFieldResponse>(this.attach_CRM_FormFieldResponses), new Action<CRM_FormFieldResponse>(this.detach_CRM_FormFieldResponses));
			this.@__DataTable = default(EntityRef<_DataTable>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_FormFieldItem")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_FormFieldItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_FormFieldID;
		
		private string _Label;
		
		private int _OrderNo;
		
		private bool _IsActive;
		
		private bool _IsArchived;
		
		private EntitySet<CRM_FormFieldResponse> _CRM_FormFieldResponses;
		
		private EntityRef<CRM_FormField> _CRM_FormField;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_FormFieldIDChanging(int value);
    partial void OnCRM_FormFieldIDChanged();
    partial void OnLabelChanging(string value);
    partial void OnLabelChanged();
    partial void OnOrderNoChanging(int value);
    partial void OnOrderNoChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    #endregion
		
		public CRM_FormFieldItem()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_FormFieldID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_FormFieldID
		{
			get
			{
				return this._CRM_FormFieldID;
			}
			set
			{
				if ((this._CRM_FormFieldID != value))
				{
					if (this._CRM_FormField.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_FormFieldIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_FormFieldID = value;
					this.SendPropertyChanged("CRM_FormFieldID");
					this.OnCRM_FormFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_FormFieldItem_CRM_FormFieldResponse", Storage="_CRM_FormFieldResponses", ThisKey="ID", OtherKey="CRM_FormFieldItemID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<CRM_FormFieldResponse> CRM_FormFieldResponses
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_FormFieldResponses.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_FormFieldResponses;
			}
			set
			{
				this._CRM_FormFieldResponses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_FormField_CRM_FormFieldItem", Storage="_CRM_FormField", ThisKey="CRM_FormFieldID", OtherKey="ID", IsForeignKey=true)]
		public CRM_FormField CRM_FormField
		{
			get
			{
				return this._CRM_FormField.Entity;
			}
			set
			{
				CRM_FormField previousValue = this._CRM_FormField.Entity;
				if (((previousValue != value) 
							|| (this._CRM_FormField.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_FormField.Entity = null;
						previousValue.CRM_FormFieldItems.Remove(this);
					}
					this._CRM_FormField.Entity = value;
					if ((value != null))
					{
						value.CRM_FormFieldItems.Add(this);
						this._CRM_FormFieldID = value.ID;
					}
					else
					{
						this._CRM_FormFieldID = default(int);
					}
					this.SendPropertyChanged("CRM_FormField");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_FormFieldResponses(CRM_FormFieldResponse entity)
		{
			this.SendPropertyChanging();
			entity.CRM_FormFieldItem = this;
		}
		
		private void detach_CRM_FormFieldResponses(CRM_FormFieldResponse entity)
		{
			this.SendPropertyChanging();
			entity.CRM_FormFieldItem = null;
		}
		
		private void Initialize()
		{
			this._CRM_FormFieldResponses = new EntitySet<CRM_FormFieldResponse>(new Action<CRM_FormFieldResponse>(this.attach_CRM_FormFieldResponses), new Action<CRM_FormFieldResponse>(this.detach_CRM_FormFieldResponses));
			this._CRM_FormField = default(EntityRef<CRM_FormField>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_NoteAdminRead")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_NoteAdminRead : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_NoteID;
		
		private int _AdminID;
		
		private EntityRef<CRM_Note> _CRM_Note;
		
		private EntityRef<Admin> _Admin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_NoteIDChanging(int value);
    partial void OnCRM_NoteIDChanged();
    partial void OnAdminIDChanging(int value);
    partial void OnAdminIDChanged();
    #endregion
		
		public CRM_NoteAdminRead()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_NoteID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_NoteID
		{
			get
			{
				return this._CRM_NoteID;
			}
			set
			{
				if ((this._CRM_NoteID != value))
				{
					if (this._CRM_Note.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_NoteIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_NoteID = value;
					this.SendPropertyChanged("CRM_NoteID");
					this.OnCRM_NoteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._Admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Note_CRM_NoteAdminRead", Storage="_CRM_Note", ThisKey="CRM_NoteID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Note CRM_Note
		{
			get
			{
				return this._CRM_Note.Entity;
			}
			set
			{
				CRM_Note previousValue = this._CRM_Note.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Note.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Note.Entity = null;
						previousValue.CRM_NoteAdminReads.Remove(this);
					}
					this._CRM_Note.Entity = value;
					if ((value != null))
					{
						value.CRM_NoteAdminReads.Add(this);
						this._CRM_NoteID = value.ID;
					}
					else
					{
						this._CRM_NoteID = default(int);
					}
					this.SendPropertyChanged("CRM_Note");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_CRM_NoteAdminRead", Storage="_Admin", ThisKey="AdminID", OtherKey="ID", IsForeignKey=true)]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.CRM_NoteAdminReads.Remove(this);
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.CRM_NoteAdminReads.Add(this);
						this._AdminID = value.ID;
					}
					else
					{
						this._AdminID = default(int);
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CRM_Note = default(EntityRef<CRM_Note>);
			this._Admin = default(EntityRef<Admin>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminDataQuery")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AdminDataQuery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int @__DataTableID;
		
		private int _AdminID;
		
		private bool _IsPublic;
		
		private System.DateTime _Timestamp;
		
		private string _Name;
		
		private EntitySet<AdminDataQueryFilter> _AdminDataQueryFilters;
		
		private EntityRef<_DataTable> @__DataTable;
		
		private EntityRef<Admin> _Admin;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void On_DataTableIDChanging(int value);
    partial void On_DataTableIDChanged();
    partial void OnAdminIDChanging(int value);
    partial void OnAdminIDChanged();
    partial void OnIsPublicChanging(bool value);
    partial void OnIsPublicChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public AdminDataQuery()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_DataTableID]", Storage="__DataTableID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int _DataTableID
		{
			get
			{
				return this.@__DataTableID;
			}
			set
			{
				if ((this.@__DataTableID != value))
				{
					this.On_DataTableIDChanging(value);
					this.SendPropertyChanging();
					this.@__DataTableID = value;
					this.SendPropertyChanged("_DataTableID");
					this.On_DataTableIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._Admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublic", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this.OnIsPublicChanging(value);
					this.SendPropertyChanging();
					this._IsPublic = value;
					this.SendPropertyChanged("IsPublic");
					this.OnIsPublicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminDataQuery_AdminDataQueryFilter", Storage="_AdminDataQueryFilters", ThisKey="ID", OtherKey="AdminDataQueryID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<AdminDataQueryFilter> AdminDataQueryFilters
		{
			get
			{
				if ((this.serializing 
							&& (this._AdminDataQueryFilters.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AdminDataQueryFilters;
			}
			set
			{
				this._AdminDataQueryFilters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_DataTable_AdminDataQuery", Storage="__DataTable", ThisKey="_DataTableID", OtherKey="ID", IsForeignKey=true)]
		public _DataTable _DataTable
		{
			get
			{
				return this.@__DataTable.Entity;
			}
			set
			{
				_DataTable previousValue = this.@__DataTable.Entity;
				if (((previousValue != value) 
							|| (this.@__DataTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__DataTable.Entity = null;
						previousValue.AdminDataQueries.Remove(this);
					}
					this.@__DataTable.Entity = value;
					if ((value != null))
					{
						value.AdminDataQueries.Add(this);
						this.@__DataTableID = value.ID;
					}
					else
					{
						this.@__DataTableID = default(int);
					}
					this.SendPropertyChanged("_DataTable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_AdminDataQuery", Storage="_Admin", ThisKey="AdminID", OtherKey="ID", IsForeignKey=true)]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.AdminDataQueries.Remove(this);
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.AdminDataQueries.Add(this);
						this._AdminID = value.ID;
					}
					else
					{
						this._AdminID = default(int);
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdminDataQueryFilters(AdminDataQueryFilter entity)
		{
			this.SendPropertyChanging();
			entity.AdminDataQuery = this;
		}
		
		private void detach_AdminDataQueryFilters(AdminDataQueryFilter entity)
		{
			this.SendPropertyChanging();
			entity.AdminDataQuery = null;
		}
		
		private void Initialize()
		{
			this._AdminDataQueryFilters = new EntitySet<AdminDataQueryFilter>(new Action<AdminDataQueryFilter>(this.attach_AdminDataQueryFilters), new Action<AdminDataQueryFilter>(this.detach_AdminDataQueryFilters));
			this.@__DataTable = default(EntityRef<_DataTable>);
			this._Admin = default(EntityRef<Admin>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminDataQueryFilter")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AdminDataQueryFilter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _AdminDataQueryID;
		
		private string _DataFieldName;
		
		private string _Operator;
		
		private string _Value;
		
		private string _Concat;
		
		private EntityRef<AdminDataQuery> _AdminDataQuery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAdminDataQueryIDChanging(int value);
    partial void OnAdminDataQueryIDChanged();
    partial void OnDataFieldNameChanging(string value);
    partial void OnDataFieldNameChanged();
    partial void OnOperatorChanging(string value);
    partial void OnOperatorChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnConcatChanging(string value);
    partial void OnConcatChanged();
    #endregion
		
		public AdminDataQueryFilter()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminDataQueryID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AdminDataQueryID
		{
			get
			{
				return this._AdminDataQueryID;
			}
			set
			{
				if ((this._AdminDataQueryID != value))
				{
					if (this._AdminDataQuery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminDataQueryIDChanging(value);
					this.SendPropertyChanging();
					this._AdminDataQueryID = value;
					this.SendPropertyChanged("AdminDataQueryID");
					this.OnAdminDataQueryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFieldName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string DataFieldName
		{
			get
			{
				return this._DataFieldName;
			}
			set
			{
				if ((this._DataFieldName != value))
				{
					this.OnDataFieldNameChanging(value);
					this.SendPropertyChanging();
					this._DataFieldName = value;
					this.SendPropertyChanged("DataFieldName");
					this.OnDataFieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operator", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Operator
		{
			get
			{
				return this._Operator;
			}
			set
			{
				if ((this._Operator != value))
				{
					this.OnOperatorChanging(value);
					this.SendPropertyChanging();
					this._Operator = value;
					this.SendPropertyChanged("Operator");
					this.OnOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Concat", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Concat
		{
			get
			{
				return this._Concat;
			}
			set
			{
				if ((this._Concat != value))
				{
					this.OnConcatChanging(value);
					this.SendPropertyChanging();
					this._Concat = value;
					this.SendPropertyChanged("Concat");
					this.OnConcatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminDataQuery_AdminDataQueryFilter", Storage="_AdminDataQuery", ThisKey="AdminDataQueryID", OtherKey="ID", IsForeignKey=true)]
		public AdminDataQuery AdminDataQuery
		{
			get
			{
				return this._AdminDataQuery.Entity;
			}
			set
			{
				AdminDataQuery previousValue = this._AdminDataQuery.Entity;
				if (((previousValue != value) 
							|| (this._AdminDataQuery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminDataQuery.Entity = null;
						previousValue.AdminDataQueryFilters.Remove(this);
					}
					this._AdminDataQuery.Entity = value;
					if ((value != null))
					{
						value.AdminDataQueryFilters.Add(this);
						this._AdminDataQueryID = value.ID;
					}
					else
					{
						this._AdminDataQueryID = default(int);
					}
					this.SendPropertyChanged("AdminDataQuery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._AdminDataQuery = default(EntityRef<AdminDataQuery>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_FundraisingReason")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_FundraisingReason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _IsActive;
		
		private bool _IsArchived;
		
		private int _OrderNo;
		
		private EntitySet<CRM_Fundraising> _CRM_Fundraisings;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    partial void OnOrderNoChanging(int value);
    partial void OnOrderNoChanged();
    #endregion
		
		public CRM_FundraisingReason()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_FundraisingReason_CRM_Fundraising", Storage="_CRM_Fundraisings", ThisKey="ID", OtherKey="CRM_FundraisingReasonID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<CRM_Fundraising> CRM_Fundraisings
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_Fundraisings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_Fundraisings;
			}
			set
			{
				this._CRM_Fundraisings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_Fundraisings(CRM_Fundraising entity)
		{
			this.SendPropertyChanging();
			entity.CRM_FundraisingReason = this;
		}
		
		private void detach_CRM_Fundraisings(CRM_Fundraising entity)
		{
			this.SendPropertyChanging();
			entity.CRM_FundraisingReason = null;
		}
		
		private void Initialize()
		{
			this._CRM_Fundraisings = new EntitySet<CRM_Fundraising>(new Action<CRM_Fundraising>(this.attach_CRM_Fundraisings), new Action<CRM_Fundraising>(this.detach_CRM_Fundraisings));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_FundraisingSplit")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_FundraisingSplit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_FundID;
		
		private int _CRM_FundRaisingID;
		
		private decimal _Amount;
		
		private System.DateTime _DateGiven;
		
		private decimal _GiftAidRate;
		
		private EntityRef<CRM_Fund> _CRM_Fund;
		
		private EntityRef<CRM_Fundraising> _CRM_Fundraising;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_FundIDChanging(int value);
    partial void OnCRM_FundIDChanged();
    partial void OnCRM_FundRaisingIDChanging(int value);
    partial void OnCRM_FundRaisingIDChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnDateGivenChanging(System.DateTime value);
    partial void OnDateGivenChanged();
    partial void OnGiftAidRateChanging(decimal value);
    partial void OnGiftAidRateChanged();
    #endregion
		
		public CRM_FundraisingSplit()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_FundID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_FundID
		{
			get
			{
				return this._CRM_FundID;
			}
			set
			{
				if ((this._CRM_FundID != value))
				{
					if (this._CRM_Fund.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_FundIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_FundID = value;
					this.SendPropertyChanged("CRM_FundID");
					this.OnCRM_FundIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_FundRaisingID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CRM_FundRaisingID
		{
			get
			{
				return this._CRM_FundRaisingID;
			}
			set
			{
				if ((this._CRM_FundRaisingID != value))
				{
					if (this._CRM_Fundraising.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_FundRaisingIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_FundRaisingID = value;
					this.SendPropertyChanged("CRM_FundRaisingID");
					this.OnCRM_FundRaisingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateGiven", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime DateGiven
		{
			get
			{
				return this._DateGiven;
			}
			set
			{
				if ((this._DateGiven != value))
				{
					this.OnDateGivenChanging(value);
					this.SendPropertyChanging();
					this._DateGiven = value;
					this.SendPropertyChanged("DateGiven");
					this.OnDateGivenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiftAidRate", DbType="Money NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public decimal GiftAidRate
		{
			get
			{
				return this._GiftAidRate;
			}
			set
			{
				if ((this._GiftAidRate != value))
				{
					this.OnGiftAidRateChanging(value);
					this.SendPropertyChanging();
					this._GiftAidRate = value;
					this.SendPropertyChanged("GiftAidRate");
					this.OnGiftAidRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Fund_CRM_FundraisingSplit", Storage="_CRM_Fund", ThisKey="CRM_FundID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Fund CRM_Fund
		{
			get
			{
				return this._CRM_Fund.Entity;
			}
			set
			{
				CRM_Fund previousValue = this._CRM_Fund.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Fund.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Fund.Entity = null;
						previousValue.CRM_FundraisingSplits.Remove(this);
					}
					this._CRM_Fund.Entity = value;
					if ((value != null))
					{
						value.CRM_FundraisingSplits.Add(this);
						this._CRM_FundID = value.ID;
					}
					else
					{
						this._CRM_FundID = default(int);
					}
					this.SendPropertyChanged("CRM_Fund");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Fundraising_CRM_FundraisingSplit", Storage="_CRM_Fundraising", ThisKey="CRM_FundRaisingID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Fundraising CRM_Fundraising
		{
			get
			{
				return this._CRM_Fundraising.Entity;
			}
			set
			{
				CRM_Fundraising previousValue = this._CRM_Fundraising.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Fundraising.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Fundraising.Entity = null;
						previousValue.CRM_FundraisingSplits.Remove(this);
					}
					this._CRM_Fundraising.Entity = value;
					if ((value != null))
					{
						value.CRM_FundraisingSplits.Add(this);
						this._CRM_FundRaisingID = value.ID;
					}
					else
					{
						this._CRM_FundRaisingID = default(int);
					}
					this.SendPropertyChanged("CRM_Fundraising");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CRM_Fund = default(EntityRef<CRM_Fund>);
			this._CRM_Fundraising = default(EntityRef<CRM_Fundraising>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_PaymentType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_PaymentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _IsActive;
		
		private bool _IsArchived;
		
		private int _OrderNo;
		
		private EntitySet<CRM_Fundraising> _CRM_Fundraisings;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    partial void OnOrderNoChanging(int value);
    partial void OnOrderNoChanged();
    #endregion
		
		public CRM_PaymentType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_PaymentType_CRM_Fundraising", Storage="_CRM_Fundraisings", ThisKey="ID", OtherKey="CRM_PaymentTypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<CRM_Fundraising> CRM_Fundraisings
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_Fundraisings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_Fundraisings;
			}
			set
			{
				this._CRM_Fundraisings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_Fundraisings(CRM_Fundraising entity)
		{
			this.SendPropertyChanging();
			entity.CRM_PaymentType = this;
		}
		
		private void detach_CRM_Fundraisings(CRM_Fundraising entity)
		{
			this.SendPropertyChanging();
			entity.CRM_PaymentType = null;
		}
		
		private void Initialize()
		{
			this._CRM_Fundraisings = new EntitySet<CRM_Fundraising>(new Action<CRM_Fundraising>(this.attach_CRM_Fundraisings), new Action<CRM_Fundraising>(this.detach_CRM_Fundraisings));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Fund")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_Fund : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _ThankyouTemplate;
		
		private bool _IsActive;
		
		private bool _IsArchived;
		
		private int _OrderNo;
		
		private string _Reference;
		
		private EntitySet<CRM_FundraisingSplit> _CRM_FundraisingSplits;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnThankyouTemplateChanging(string value);
    partial void OnThankyouTemplateChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    partial void OnOrderNoChanging(int value);
    partial void OnOrderNoChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    #endregion
		
		public CRM_Fund()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThankyouTemplate", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ThankyouTemplate
		{
			get
			{
				return this._ThankyouTemplate;
			}
			set
			{
				if ((this._ThankyouTemplate != value))
				{
					this.OnThankyouTemplateChanging(value);
					this.SendPropertyChanging();
					this._ThankyouTemplate = value;
					this.SendPropertyChanged("ThankyouTemplate");
					this.OnThankyouTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(15)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Fund_CRM_FundraisingSplit", Storage="_CRM_FundraisingSplits", ThisKey="ID", OtherKey="CRM_FundID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<CRM_FundraisingSplit> CRM_FundraisingSplits
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_FundraisingSplits.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_FundraisingSplits;
			}
			set
			{
				this._CRM_FundraisingSplits.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_FundraisingSplits(CRM_FundraisingSplit entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Fund = this;
		}
		
		private void detach_CRM_FundraisingSplits(CRM_FundraisingSplit entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Fund = null;
		}
		
		private void Initialize()
		{
			this._CRM_FundraisingSplits = new EntitySet<CRM_FundraisingSplit>(new Action<CRM_FundraisingSplit>(this.attach_CRM_FundraisingSplits), new Action<CRM_FundraisingSplit>(this.detach_CRM_FundraisingSplits));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_OrganisationType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_OrganisationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _IsActive;
		
		private bool _IsArchived;
		
		private EntitySet<CRM_Organisation> _CRM_Organisations;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    #endregion
		
		public CRM_OrganisationType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_OrganisationType_CRM_Organisation", Storage="_CRM_Organisations", ThisKey="ID", OtherKey="CRM_OrganisationTypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<CRM_Organisation> CRM_Organisations
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_Organisations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_Organisations;
			}
			set
			{
				this._CRM_Organisations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_Organisations(CRM_Organisation entity)
		{
			this.SendPropertyChanging();
			entity.CRM_OrganisationType = this;
		}
		
		private void detach_CRM_Organisations(CRM_Organisation entity)
		{
			this.SendPropertyChanging();
			entity.CRM_OrganisationType = null;
		}
		
		private void Initialize()
		{
			this._CRM_Organisations = new EntitySet<CRM_Organisation>(new Action<CRM_Organisation>(this.attach_CRM_Organisations), new Action<CRM_Organisation>(this.detach_CRM_Organisations));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_SystemAccess")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_SystemAccess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Path;
		
		private string _FriendlyName;
		
		private byte _Type;
		
		private bool _IsPermissable;
		
		private EntitySet<CRM_SystemAccessAdmin> _CRM_SystemAccessAdmins;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnFriendlyNameChanging(string value);
    partial void OnFriendlyNameChanged();
    partial void OnTypeChanging(byte value);
    partial void OnTypeChanged();
    partial void OnIsPermissableChanging(bool value);
    partial void OnIsPermissableChanged();
    #endregion
		
		public CRM_SystemAccess()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string FriendlyName
		{
			get
			{
				return this._FriendlyName;
			}
			set
			{
				if ((this._FriendlyName != value))
				{
					this.OnFriendlyNameChanging(value);
					this.SendPropertyChanging();
					this._FriendlyName = value;
					this.SendPropertyChanged("FriendlyName");
					this.OnFriendlyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public byte Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPermissable", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsPermissable
		{
			get
			{
				return this._IsPermissable;
			}
			set
			{
				if ((this._IsPermissable != value))
				{
					this.OnIsPermissableChanging(value);
					this.SendPropertyChanging();
					this._IsPermissable = value;
					this.SendPropertyChanged("IsPermissable");
					this.OnIsPermissableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_SystemAccess_CRM_SystemAccessAdmin", Storage="_CRM_SystemAccessAdmins", ThisKey="ID", OtherKey="CRM_SystemAccessID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<CRM_SystemAccessAdmin> CRM_SystemAccessAdmins
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_SystemAccessAdmins.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_SystemAccessAdmins;
			}
			set
			{
				this._CRM_SystemAccessAdmins.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_SystemAccessAdmins(CRM_SystemAccessAdmin entity)
		{
			this.SendPropertyChanging();
			entity.CRM_SystemAccess = this;
		}
		
		private void detach_CRM_SystemAccessAdmins(CRM_SystemAccessAdmin entity)
		{
			this.SendPropertyChanging();
			entity.CRM_SystemAccess = null;
		}
		
		private void Initialize()
		{
			this._CRM_SystemAccessAdmins = new EntitySet<CRM_SystemAccessAdmin>(new Action<CRM_SystemAccessAdmin>(this.attach_CRM_SystemAccessAdmins), new Action<CRM_SystemAccessAdmin>(this.detach_CRM_SystemAccessAdmins));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Username;
		
		private string _Password;
		
		private System.Nullable<System.DateTime> _LastLogin;
		
		private bool _IsMasterAdmin;
		
		private string _FirstName;
		
		private string _Surname;
		
		private bool _IsReducedContentAccess;
		
		private System.Nullable<System.DateTime> _LastReset;
		
		private string _Email;
		
		private string _ResetLink;
		
		private EntitySet<AdminPermission> _AdminPermissions;
		
		private EntitySet<_DataTableColumn> @__DataTableColumns;
		
		private EntitySet<CRM_Note> _CRM_Notes;
		
		private EntitySet<CRM_TaskParticipant> _CRM_TaskParticipants;
		
		private EntitySet<CRM_Task> _CRM_Tasks;
		
		private EntitySet<CRM_CalendarAttendance> _CRM_CalendarAttendances;
		
		private EntitySet<CRM_NoteAdminRead> _CRM_NoteAdminReads;
		
		private EntitySet<AdminDataQuery> _AdminDataQueries;
		
		private EntitySet<CRM_NavHistory> _CRM_NavHistories;
		
		private EntitySet<CRM_CalendarInvite> _CRM_CalendarInvites;
		
		private EntitySet<CRM_CalendarAdmin> _CRM_CalendarAdmins;
		
		private EntitySet<CRM_SystemAccessAdmin> _CRM_SystemAccessAdmins;
		
		private EntitySet<CRM_Communication> _CRM_Communications;
		
		private EntitySet<CRM_Calendar> _CRM_Calendars;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnLastLoginChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginChanged();
    partial void OnIsMasterAdminChanging(bool value);
    partial void OnIsMasterAdminChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnIsReducedContentAccessChanging(bool value);
    partial void OnIsReducedContentAccessChanged();
    partial void OnLastResetChanging(System.Nullable<System.DateTime> value);
    partial void OnLastResetChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnResetLinkChanging(string value);
    partial void OnResetLinkChanged();
    #endregion
		
		public Admin()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this.OnLastLoginChanging(value);
					this.SendPropertyChanging();
					this._LastLogin = value;
					this.SendPropertyChanged("LastLogin");
					this.OnLastLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMasterAdmin", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsMasterAdmin
		{
			get
			{
				return this._IsMasterAdmin;
			}
			set
			{
				if ((this._IsMasterAdmin != value))
				{
					this.OnIsMasterAdminChanging(value);
					this.SendPropertyChanging();
					this._IsMasterAdmin = value;
					this.SendPropertyChanged("IsMasterAdmin");
					this.OnIsMasterAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReducedContentAccess", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool IsReducedContentAccess
		{
			get
			{
				return this._IsReducedContentAccess;
			}
			set
			{
				if ((this._IsReducedContentAccess != value))
				{
					this.OnIsReducedContentAccessChanging(value);
					this.SendPropertyChanging();
					this._IsReducedContentAccess = value;
					this.SendPropertyChanged("IsReducedContentAccess");
					this.OnIsReducedContentAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastReset", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.DateTime> LastReset
		{
			get
			{
				return this._LastReset;
			}
			set
			{
				if ((this._LastReset != value))
				{
					this.OnLastResetChanging(value);
					this.SendPropertyChanging();
					this._LastReset = value;
					this.SendPropertyChanged("LastReset");
					this.OnLastResetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResetLink", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string ResetLink
		{
			get
			{
				return this._ResetLink;
			}
			set
			{
				if ((this._ResetLink != value))
				{
					this.OnResetLinkChanging(value);
					this.SendPropertyChanging();
					this._ResetLink = value;
					this.SendPropertyChanged("ResetLink");
					this.OnResetLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_AdminPermission", Storage="_AdminPermissions", ThisKey="ID", OtherKey="AdminID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<AdminPermission> AdminPermissions
		{
			get
			{
				if ((this.serializing 
							&& (this._AdminPermissions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AdminPermissions;
			}
			set
			{
				this._AdminPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin__DataTableColumn", Storage="__DataTableColumns", ThisKey="ID", OtherKey="AdminID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<_DataTableColumn> _DataTableColumns
		{
			get
			{
				if ((this.serializing 
							&& (this.@__DataTableColumns.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this.@__DataTableColumns;
			}
			set
			{
				this.@__DataTableColumns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_CRM_Note", Storage="_CRM_Notes", ThisKey="ID", OtherKey="OwnerAdminID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<CRM_Note> CRM_Notes
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_Notes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_Notes;
			}
			set
			{
				this._CRM_Notes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_CRM_TaskParticipant", Storage="_CRM_TaskParticipants", ThisKey="ID", OtherKey="AdminID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<CRM_TaskParticipant> CRM_TaskParticipants
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_TaskParticipants.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_TaskParticipants;
			}
			set
			{
				this._CRM_TaskParticipants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_CRM_Task", Storage="_CRM_Tasks", ThisKey="ID", OtherKey="OwnerAdminID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<CRM_Task> CRM_Tasks
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_Tasks.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_Tasks;
			}
			set
			{
				this._CRM_Tasks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_CRM_CalendarAttendance", Storage="_CRM_CalendarAttendances", ThisKey="ID", OtherKey="Admin_ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<CRM_CalendarAttendance> CRM_CalendarAttendances
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_CalendarAttendances.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_CalendarAttendances;
			}
			set
			{
				this._CRM_CalendarAttendances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_CRM_NoteAdminRead", Storage="_CRM_NoteAdminReads", ThisKey="ID", OtherKey="AdminID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<CRM_NoteAdminRead> CRM_NoteAdminReads
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_NoteAdminReads.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_NoteAdminReads;
			}
			set
			{
				this._CRM_NoteAdminReads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_AdminDataQuery", Storage="_AdminDataQueries", ThisKey="ID", OtherKey="AdminID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<AdminDataQuery> AdminDataQueries
		{
			get
			{
				if ((this.serializing 
							&& (this._AdminDataQueries.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AdminDataQueries;
			}
			set
			{
				this._AdminDataQueries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_CRM_NavHistory", Storage="_CRM_NavHistories", ThisKey="ID", OtherKey="AdminID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<CRM_NavHistory> CRM_NavHistories
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_NavHistories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_NavHistories;
			}
			set
			{
				this._CRM_NavHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_CRM_CalendarInvite", Storage="_CRM_CalendarInvites", ThisKey="ID", OtherKey="LastAmendedAdminID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21, EmitDefaultValue=false)]
		public EntitySet<CRM_CalendarInvite> CRM_CalendarInvites
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_CalendarInvites.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_CalendarInvites;
			}
			set
			{
				this._CRM_CalendarInvites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_CRM_CalendarAdmin", Storage="_CRM_CalendarAdmins", ThisKey="ID", OtherKey="AdminID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public EntitySet<CRM_CalendarAdmin> CRM_CalendarAdmins
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_CalendarAdmins.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_CalendarAdmins;
			}
			set
			{
				this._CRM_CalendarAdmins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_CRM_SystemAccessAdmin", Storage="_CRM_SystemAccessAdmins", ThisKey="ID", OtherKey="AdminID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public EntitySet<CRM_SystemAccessAdmin> CRM_SystemAccessAdmins
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_SystemAccessAdmins.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_SystemAccessAdmins;
			}
			set
			{
				this._CRM_SystemAccessAdmins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_CRM_Communication", Storage="_CRM_Communications", ThisKey="ID", OtherKey="AdminID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<CRM_Communication> CRM_Communications
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_Communications.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_Communications;
			}
			set
			{
				this._CRM_Communications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_CRM_Calendar", Storage="_CRM_Calendars", ThisKey="ID", OtherKey="CreatedByAdminID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25, EmitDefaultValue=false)]
		public EntitySet<CRM_Calendar> CRM_Calendars
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_Calendars.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_Calendars;
			}
			set
			{
				this._CRM_Calendars.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdminPermissions(AdminPermission entity)
		{
			this.SendPropertyChanging();
			entity.Admin = this;
		}
		
		private void detach_AdminPermissions(AdminPermission entity)
		{
			this.SendPropertyChanging();
			entity.Admin = null;
		}
		
		private void attach__DataTableColumns(_DataTableColumn entity)
		{
			this.SendPropertyChanging();
			entity.Admin = this;
		}
		
		private void detach__DataTableColumns(_DataTableColumn entity)
		{
			this.SendPropertyChanging();
			entity.Admin = null;
		}
		
		private void attach_CRM_Notes(CRM_Note entity)
		{
			this.SendPropertyChanging();
			entity.Admin = this;
		}
		
		private void detach_CRM_Notes(CRM_Note entity)
		{
			this.SendPropertyChanging();
			entity.Admin = null;
		}
		
		private void attach_CRM_TaskParticipants(CRM_TaskParticipant entity)
		{
			this.SendPropertyChanging();
			entity.Admin = this;
		}
		
		private void detach_CRM_TaskParticipants(CRM_TaskParticipant entity)
		{
			this.SendPropertyChanging();
			entity.Admin = null;
		}
		
		private void attach_CRM_Tasks(CRM_Task entity)
		{
			this.SendPropertyChanging();
			entity.Admin = this;
		}
		
		private void detach_CRM_Tasks(CRM_Task entity)
		{
			this.SendPropertyChanging();
			entity.Admin = null;
		}
		
		private void attach_CRM_CalendarAttendances(CRM_CalendarAttendance entity)
		{
			this.SendPropertyChanging();
			entity.Admin = this;
		}
		
		private void detach_CRM_CalendarAttendances(CRM_CalendarAttendance entity)
		{
			this.SendPropertyChanging();
			entity.Admin = null;
		}
		
		private void attach_CRM_NoteAdminReads(CRM_NoteAdminRead entity)
		{
			this.SendPropertyChanging();
			entity.Admin = this;
		}
		
		private void detach_CRM_NoteAdminReads(CRM_NoteAdminRead entity)
		{
			this.SendPropertyChanging();
			entity.Admin = null;
		}
		
		private void attach_AdminDataQueries(AdminDataQuery entity)
		{
			this.SendPropertyChanging();
			entity.Admin = this;
		}
		
		private void detach_AdminDataQueries(AdminDataQuery entity)
		{
			this.SendPropertyChanging();
			entity.Admin = null;
		}
		
		private void attach_CRM_NavHistories(CRM_NavHistory entity)
		{
			this.SendPropertyChanging();
			entity.Admin = this;
		}
		
		private void detach_CRM_NavHistories(CRM_NavHistory entity)
		{
			this.SendPropertyChanging();
			entity.Admin = null;
		}
		
		private void attach_CRM_CalendarInvites(CRM_CalendarInvite entity)
		{
			this.SendPropertyChanging();
			entity.Admin = this;
		}
		
		private void detach_CRM_CalendarInvites(CRM_CalendarInvite entity)
		{
			this.SendPropertyChanging();
			entity.Admin = null;
		}
		
		private void attach_CRM_CalendarAdmins(CRM_CalendarAdmin entity)
		{
			this.SendPropertyChanging();
			entity.Admin = this;
		}
		
		private void detach_CRM_CalendarAdmins(CRM_CalendarAdmin entity)
		{
			this.SendPropertyChanging();
			entity.Admin = null;
		}
		
		private void attach_CRM_SystemAccessAdmins(CRM_SystemAccessAdmin entity)
		{
			this.SendPropertyChanging();
			entity.Admin = this;
		}
		
		private void detach_CRM_SystemAccessAdmins(CRM_SystemAccessAdmin entity)
		{
			this.SendPropertyChanging();
			entity.Admin = null;
		}
		
		private void attach_CRM_Communications(CRM_Communication entity)
		{
			this.SendPropertyChanging();
			entity.Admin = this;
		}
		
		private void detach_CRM_Communications(CRM_Communication entity)
		{
			this.SendPropertyChanging();
			entity.Admin = null;
		}
		
		private void attach_CRM_Calendars(CRM_Calendar entity)
		{
			this.SendPropertyChanging();
			entity.Admin = this;
		}
		
		private void detach_CRM_Calendars(CRM_Calendar entity)
		{
			this.SendPropertyChanging();
			entity.Admin = null;
		}
		
		private void Initialize()
		{
			this._AdminPermissions = new EntitySet<AdminPermission>(new Action<AdminPermission>(this.attach_AdminPermissions), new Action<AdminPermission>(this.detach_AdminPermissions));
			this.@__DataTableColumns = new EntitySet<_DataTableColumn>(new Action<_DataTableColumn>(this.attach__DataTableColumns), new Action<_DataTableColumn>(this.detach__DataTableColumns));
			this._CRM_Notes = new EntitySet<CRM_Note>(new Action<CRM_Note>(this.attach_CRM_Notes), new Action<CRM_Note>(this.detach_CRM_Notes));
			this._CRM_TaskParticipants = new EntitySet<CRM_TaskParticipant>(new Action<CRM_TaskParticipant>(this.attach_CRM_TaskParticipants), new Action<CRM_TaskParticipant>(this.detach_CRM_TaskParticipants));
			this._CRM_Tasks = new EntitySet<CRM_Task>(new Action<CRM_Task>(this.attach_CRM_Tasks), new Action<CRM_Task>(this.detach_CRM_Tasks));
			this._CRM_CalendarAttendances = new EntitySet<CRM_CalendarAttendance>(new Action<CRM_CalendarAttendance>(this.attach_CRM_CalendarAttendances), new Action<CRM_CalendarAttendance>(this.detach_CRM_CalendarAttendances));
			this._CRM_NoteAdminReads = new EntitySet<CRM_NoteAdminRead>(new Action<CRM_NoteAdminRead>(this.attach_CRM_NoteAdminReads), new Action<CRM_NoteAdminRead>(this.detach_CRM_NoteAdminReads));
			this._AdminDataQueries = new EntitySet<AdminDataQuery>(new Action<AdminDataQuery>(this.attach_AdminDataQueries), new Action<AdminDataQuery>(this.detach_AdminDataQueries));
			this._CRM_NavHistories = new EntitySet<CRM_NavHistory>(new Action<CRM_NavHistory>(this.attach_CRM_NavHistories), new Action<CRM_NavHistory>(this.detach_CRM_NavHistories));
			this._CRM_CalendarInvites = new EntitySet<CRM_CalendarInvite>(new Action<CRM_CalendarInvite>(this.attach_CRM_CalendarInvites), new Action<CRM_CalendarInvite>(this.detach_CRM_CalendarInvites));
			this._CRM_CalendarAdmins = new EntitySet<CRM_CalendarAdmin>(new Action<CRM_CalendarAdmin>(this.attach_CRM_CalendarAdmins), new Action<CRM_CalendarAdmin>(this.detach_CRM_CalendarAdmins));
			this._CRM_SystemAccessAdmins = new EntitySet<CRM_SystemAccessAdmin>(new Action<CRM_SystemAccessAdmin>(this.attach_CRM_SystemAccessAdmins), new Action<CRM_SystemAccessAdmin>(this.detach_CRM_SystemAccessAdmins));
			this._CRM_Communications = new EntitySet<CRM_Communication>(new Action<CRM_Communication>(this.attach_CRM_Communications), new Action<CRM_Communication>(this.detach_CRM_Communications));
			this._CRM_Calendars = new EntitySet<CRM_Calendar>(new Action<CRM_Calendar>(this.attach_CRM_Calendars), new Action<CRM_Calendar>(this.detach_CRM_Calendars));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_KeyStage")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_KeyStage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _OrderNo;
		
		private bool _IsActive;
		
		private bool _IsArchived;
		
		private EntitySet<CRM_SchoolKeystage> _CRM_SchoolKeystages;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOrderNoChanging(int value);
    partial void OnOrderNoChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    #endregion
		
		public CRM_KeyStage()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_KeyStage_CRM_SchoolKeystage", Storage="_CRM_SchoolKeystages", ThisKey="ID", OtherKey="CRM_KeyStageID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<CRM_SchoolKeystage> CRM_SchoolKeystages
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_SchoolKeystages.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_SchoolKeystages;
			}
			set
			{
				this._CRM_SchoolKeystages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_SchoolKeystages(CRM_SchoolKeystage entity)
		{
			this.SendPropertyChanging();
			entity.CRM_KeyStage = this;
		}
		
		private void detach_CRM_SchoolKeystages(CRM_SchoolKeystage entity)
		{
			this.SendPropertyChanging();
			entity.CRM_KeyStage = null;
		}
		
		private void Initialize()
		{
			this._CRM_SchoolKeystages = new EntitySet<CRM_SchoolKeystage>(new Action<CRM_SchoolKeystage>(this.attach_CRM_SchoolKeystages), new Action<CRM_SchoolKeystage>(this.detach_CRM_SchoolKeystages));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Offer")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_Offer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _IsActive;
		
		private bool _IsArchived;
		
		private EntitySet<CRM_CalendarGroupBooking> _CRM_CalendarGroupBookings;
		
		private EntitySet<CRM_CalendarOutreach> _CRM_CalendarOutreaches;
		
		private EntitySet<CRM_AnnualPass> _CRM_AnnualPasses;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    #endregion
		
		public CRM_Offer()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Offer_CRM_CalendarGroupBooking", Storage="_CRM_CalendarGroupBookings", ThisKey="ID", OtherKey="OfferID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<CRM_CalendarGroupBooking> CRM_CalendarGroupBookings
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_CalendarGroupBookings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_CalendarGroupBookings;
			}
			set
			{
				this._CRM_CalendarGroupBookings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Offer_CRM_CalendarOutreach", Storage="_CRM_CalendarOutreaches", ThisKey="ID", OtherKey="CRM_OfferID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<CRM_CalendarOutreach> CRM_CalendarOutreaches
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_CalendarOutreaches.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_CalendarOutreaches;
			}
			set
			{
				this._CRM_CalendarOutreaches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Offer_CRM_AnnualPass", Storage="_CRM_AnnualPasses", ThisKey="ID", OtherKey="CRM_OfferID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<CRM_AnnualPass> CRM_AnnualPasses
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_AnnualPasses.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_AnnualPasses;
			}
			set
			{
				this._CRM_AnnualPasses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_CalendarGroupBookings(CRM_CalendarGroupBooking entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Offer = this;
		}
		
		private void detach_CRM_CalendarGroupBookings(CRM_CalendarGroupBooking entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Offer = null;
		}
		
		private void attach_CRM_CalendarOutreaches(CRM_CalendarOutreach entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Offer = this;
		}
		
		private void detach_CRM_CalendarOutreaches(CRM_CalendarOutreach entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Offer = null;
		}
		
		private void attach_CRM_AnnualPasses(CRM_AnnualPass entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Offer = this;
		}
		
		private void detach_CRM_AnnualPasses(CRM_AnnualPass entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Offer = null;
		}
		
		private void Initialize()
		{
			this._CRM_CalendarGroupBookings = new EntitySet<CRM_CalendarGroupBooking>(new Action<CRM_CalendarGroupBooking>(this.attach_CRM_CalendarGroupBookings), new Action<CRM_CalendarGroupBooking>(this.detach_CRM_CalendarGroupBookings));
			this._CRM_CalendarOutreaches = new EntitySet<CRM_CalendarOutreach>(new Action<CRM_CalendarOutreach>(this.attach_CRM_CalendarOutreaches), new Action<CRM_CalendarOutreach>(this.detach_CRM_CalendarOutreaches));
			this._CRM_AnnualPasses = new EntitySet<CRM_AnnualPass>(new Action<CRM_AnnualPass>(this.attach_CRM_AnnualPasses), new Action<CRM_AnnualPass>(this.detach_CRM_AnnualPasses));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_NavHistory")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_NavHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _AdminID;
		
		private string _URL;
		
		private string _FriendlyName;
		
		private System.DateTime _LastAccessed;
		
		private bool _IsStarred;
		
		private string _ContextName;
		
		private EntityRef<Admin> _Admin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAdminIDChanging(int value);
    partial void OnAdminIDChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnFriendlyNameChanging(string value);
    partial void OnFriendlyNameChanged();
    partial void OnLastAccessedChanging(System.DateTime value);
    partial void OnLastAccessedChanged();
    partial void OnIsStarredChanging(bool value);
    partial void OnIsStarredChanged();
    partial void OnContextNameChanging(string value);
    partial void OnContextNameChanged();
    #endregion
		
		public CRM_NavHistory()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._Admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string FriendlyName
		{
			get
			{
				return this._FriendlyName;
			}
			set
			{
				if ((this._FriendlyName != value))
				{
					this.OnFriendlyNameChanging(value);
					this.SendPropertyChanging();
					this._FriendlyName = value;
					this.SendPropertyChanged("FriendlyName");
					this.OnFriendlyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAccessed", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime LastAccessed
		{
			get
			{
				return this._LastAccessed;
			}
			set
			{
				if ((this._LastAccessed != value))
				{
					this.OnLastAccessedChanging(value);
					this.SendPropertyChanging();
					this._LastAccessed = value;
					this.SendPropertyChanged("LastAccessed");
					this.OnLastAccessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsStarred", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsStarred
		{
			get
			{
				return this._IsStarred;
			}
			set
			{
				if ((this._IsStarred != value))
				{
					this.OnIsStarredChanging(value);
					this.SendPropertyChanging();
					this._IsStarred = value;
					this.SendPropertyChanged("IsStarred");
					this.OnIsStarredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContextName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string ContextName
		{
			get
			{
				return this._ContextName;
			}
			set
			{
				if ((this._ContextName != value))
				{
					this.OnContextNameChanging(value);
					this.SendPropertyChanging();
					this._ContextName = value;
					this.SendPropertyChanged("ContextName");
					this.OnContextNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_CRM_NavHistory", Storage="_Admin", ThisKey="AdminID", OtherKey="ID", IsForeignKey=true)]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.CRM_NavHistories.Remove(this);
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.CRM_NavHistories.Add(this);
						this._AdminID = value.ID;
					}
					else
					{
						this._AdminID = default(int);
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Admin = default(EntityRef<Admin>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Title")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_Title : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _OrderNo;
		
		private bool _IsActive;
		
		private bool _IsArchived;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOrderNoChanging(int value);
    partial void OnOrderNoChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    #endregion
		
		public CRM_Title()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_OrganisationSchool")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_OrganisationSchool : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_OrganisationID;
		
		private int _CRM_SchoolID;
		
		private EntityRef<CRM_School> _CRM_School;
		
		private EntityRef<CRM_Organisation> _CRM_Organisation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_OrganisationIDChanging(int value);
    partial void OnCRM_OrganisationIDChanged();
    partial void OnCRM_SchoolIDChanging(int value);
    partial void OnCRM_SchoolIDChanged();
    #endregion
		
		public CRM_OrganisationSchool()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_OrganisationID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_OrganisationID
		{
			get
			{
				return this._CRM_OrganisationID;
			}
			set
			{
				if ((this._CRM_OrganisationID != value))
				{
					if (this._CRM_Organisation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_OrganisationIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_OrganisationID = value;
					this.SendPropertyChanged("CRM_OrganisationID");
					this.OnCRM_OrganisationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_SchoolID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CRM_SchoolID
		{
			get
			{
				return this._CRM_SchoolID;
			}
			set
			{
				if ((this._CRM_SchoolID != value))
				{
					if (this._CRM_School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_SchoolIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_SchoolID = value;
					this.SendPropertyChanged("CRM_SchoolID");
					this.OnCRM_SchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_School_CRM_OrganisationSchool", Storage="_CRM_School", ThisKey="CRM_SchoolID", OtherKey="ID", IsForeignKey=true)]
		public CRM_School CRM_School
		{
			get
			{
				return this._CRM_School.Entity;
			}
			set
			{
				CRM_School previousValue = this._CRM_School.Entity;
				if (((previousValue != value) 
							|| (this._CRM_School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_School.Entity = null;
						previousValue.CRM_OrganisationSchools.Remove(this);
					}
					this._CRM_School.Entity = value;
					if ((value != null))
					{
						value.CRM_OrganisationSchools.Add(this);
						this._CRM_SchoolID = value.ID;
					}
					else
					{
						this._CRM_SchoolID = default(int);
					}
					this.SendPropertyChanged("CRM_School");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Organisation_CRM_OrganisationSchool", Storage="_CRM_Organisation", ThisKey="CRM_OrganisationID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Organisation CRM_Organisation
		{
			get
			{
				return this._CRM_Organisation.Entity;
			}
			set
			{
				CRM_Organisation previousValue = this._CRM_Organisation.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Organisation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Organisation.Entity = null;
						previousValue.CRM_OrganisationSchools.Remove(this);
					}
					this._CRM_Organisation.Entity = value;
					if ((value != null))
					{
						value.CRM_OrganisationSchools.Add(this);
						this._CRM_OrganisationID = value.ID;
					}
					else
					{
						this._CRM_OrganisationID = default(int);
					}
					this.SendPropertyChanged("CRM_Organisation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CRM_School = default(EntityRef<CRM_School>);
			this._CRM_Organisation = default(EntityRef<CRM_Organisation>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_CalendarInvite")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_CalendarInvite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_CalendarID;
		
		private string _Reference;
		
		private string _ContactName;
		
		private bool _IsInvited;
		
		private bool _IsAttended;
		
		private bool _IsCancelled;
		
		private bool _IsBooked;
		
		private int _LastAmendedAdminID;
		
		private System.DateTime _LastUpdated;
		
		private EntityRef<Admin> _Admin;
		
		private EntityRef<CRM_Calendar> _CRM_Calendar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_CalendarIDChanging(int value);
    partial void OnCRM_CalendarIDChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnIsInvitedChanging(bool value);
    partial void OnIsInvitedChanged();
    partial void OnIsAttendedChanging(bool value);
    partial void OnIsAttendedChanged();
    partial void OnIsCancelledChanging(bool value);
    partial void OnIsCancelledChanged();
    partial void OnIsBookedChanging(bool value);
    partial void OnIsBookedChanged();
    partial void OnLastAmendedAdminIDChanging(int value);
    partial void OnLastAmendedAdminIDChanged();
    partial void OnLastUpdatedChanging(System.DateTime value);
    partial void OnLastUpdatedChanged();
    #endregion
		
		public CRM_CalendarInvite()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_CalendarID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_CalendarID
		{
			get
			{
				return this._CRM_CalendarID;
			}
			set
			{
				if ((this._CRM_CalendarID != value))
				{
					if (this._CRM_Calendar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_CalendarIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_CalendarID = value;
					this.SendPropertyChanged("CRM_CalendarID");
					this.OnCRM_CalendarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInvited", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsInvited
		{
			get
			{
				return this._IsInvited;
			}
			set
			{
				if ((this._IsInvited != value))
				{
					this.OnIsInvitedChanging(value);
					this.SendPropertyChanging();
					this._IsInvited = value;
					this.SendPropertyChanged("IsInvited");
					this.OnIsInvitedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAttended", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsAttended
		{
			get
			{
				return this._IsAttended;
			}
			set
			{
				if ((this._IsAttended != value))
				{
					this.OnIsAttendedChanging(value);
					this.SendPropertyChanging();
					this._IsAttended = value;
					this.SendPropertyChanged("IsAttended");
					this.OnIsAttendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelled", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool IsCancelled
		{
			get
			{
				return this._IsCancelled;
			}
			set
			{
				if ((this._IsCancelled != value))
				{
					this.OnIsCancelledChanging(value);
					this.SendPropertyChanging();
					this._IsCancelled = value;
					this.SendPropertyChanged("IsCancelled");
					this.OnIsCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBooked", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool IsBooked
		{
			get
			{
				return this._IsBooked;
			}
			set
			{
				if ((this._IsBooked != value))
				{
					this.OnIsBookedChanging(value);
					this.SendPropertyChanging();
					this._IsBooked = value;
					this.SendPropertyChanged("IsBooked");
					this.OnIsBookedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAmendedAdminID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int LastAmendedAdminID
		{
			get
			{
				return this._LastAmendedAdminID;
			}
			set
			{
				if ((this._LastAmendedAdminID != value))
				{
					if (this._Admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastAmendedAdminIDChanging(value);
					this.SendPropertyChanging();
					this._LastAmendedAdminID = value;
					this.SendPropertyChanged("LastAmendedAdminID");
					this.OnLastAmendedAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.DateTime LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_CRM_CalendarInvite", Storage="_Admin", ThisKey="LastAmendedAdminID", OtherKey="ID", IsForeignKey=true)]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.CRM_CalendarInvites.Remove(this);
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.CRM_CalendarInvites.Add(this);
						this._LastAmendedAdminID = value.ID;
					}
					else
					{
						this._LastAmendedAdminID = default(int);
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Calendar_CRM_CalendarInvite", Storage="_CRM_Calendar", ThisKey="CRM_CalendarID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Calendar CRM_Calendar
		{
			get
			{
				return this._CRM_Calendar.Entity;
			}
			set
			{
				CRM_Calendar previousValue = this._CRM_Calendar.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Calendar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Calendar.Entity = null;
						previousValue.CRM_CalendarInvites.Remove(this);
					}
					this._CRM_Calendar.Entity = value;
					if ((value != null))
					{
						value.CRM_CalendarInvites.Add(this);
						this._CRM_CalendarID = value.ID;
					}
					else
					{
						this._CRM_CalendarID = default(int);
					}
					this.SendPropertyChanged("CRM_Calendar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Admin = default(EntityRef<Admin>);
			this._CRM_Calendar = default(EntityRef<CRM_Calendar>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_SchoolType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_SchoolType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Reference;
		
		private bool _IsActive;
		
		private bool _IsArchived;
		
		private int _OrderNo;
		
		private EntitySet<CRM_School> _CRM_Schools;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    partial void OnOrderNoChanging(int value);
    partial void OnOrderNoChanged();
    #endregion
		
		public CRM_SchoolType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(21)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_SchoolType_CRM_School", Storage="_CRM_Schools", ThisKey="ID", OtherKey="CRM_SchoolTypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<CRM_School> CRM_Schools
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_Schools.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_Schools;
			}
			set
			{
				this._CRM_Schools.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_Schools(CRM_School entity)
		{
			this.SendPropertyChanging();
			entity.CRM_SchoolType = this;
		}
		
		private void detach_CRM_Schools(CRM_School entity)
		{
			this.SendPropertyChanging();
			entity.CRM_SchoolType = null;
		}
		
		private void Initialize()
		{
			this._CRM_Schools = new EntitySet<CRM_School>(new Action<CRM_School>(this.attach_CRM_Schools), new Action<CRM_School>(this.detach_CRM_Schools));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Exhibition")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_Exhibition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _IsActive;
		
		private bool _IsArchived;
		
		private EntitySet<CRM_CalendarGroupBooking> _CRM_CalendarGroupBookings;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    #endregion
		
		public CRM_Exhibition()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Exhibition_CRM_CalendarGroupBooking", Storage="_CRM_CalendarGroupBookings", ThisKey="ID", OtherKey="CRM_ExhibitionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<CRM_CalendarGroupBooking> CRM_CalendarGroupBookings
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_CalendarGroupBookings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_CalendarGroupBookings;
			}
			set
			{
				this._CRM_CalendarGroupBookings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_CalendarGroupBookings(CRM_CalendarGroupBooking entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Exhibition = this;
		}
		
		private void detach_CRM_CalendarGroupBookings(CRM_CalendarGroupBooking entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Exhibition = null;
		}
		
		private void Initialize()
		{
			this._CRM_CalendarGroupBookings = new EntitySet<CRM_CalendarGroupBooking>(new Action<CRM_CalendarGroupBooking>(this.attach_CRM_CalendarGroupBookings), new Action<CRM_CalendarGroupBooking>(this.detach_CRM_CalendarGroupBookings));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_School")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_School : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _CRM_LEAID;
		
		private System.Nullable<int> _CRM_RegionID;
		
		private int _CRM_AddressID;
		
		private int _CRM_SchoolTypeID;
		
		private string _PrimaryContactReference;
		
		private bool _IsArchived;
		
		private bool _IsSEN;
		
		private string _SENSupportFreq;
		
		private int _ApproxPupils;
		
		private string _SageAccountNumber;
		
		private string _Reference;
		
		private string _Phone;
		
		private string _Email;
		
		private EntitySet<CRM_SchoolKeystage> _CRM_SchoolKeystages;
		
		private EntitySet<CRM_OrganisationSchool> _CRM_OrganisationSchools;
		
		private EntitySet<CRM_PersonSchool> _CRM_PersonSchools;
		
		private EntitySet<CRM_CalendarGroupBooking> _CRM_CalendarGroupBookings;
		
		private EntityRef<CRM_Address> _CRM_Address;
		
		private EntityRef<CRM_LEA> _CRM_LEA;
		
		private EntityRef<CRM_SchoolType> _CRM_SchoolType;
		
		private EntityRef<CRM_Region> _CRM_Region;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCRM_LEAIDChanging(System.Nullable<int> value);
    partial void OnCRM_LEAIDChanged();
    partial void OnCRM_RegionIDChanging(System.Nullable<int> value);
    partial void OnCRM_RegionIDChanged();
    partial void OnCRM_AddressIDChanging(int value);
    partial void OnCRM_AddressIDChanged();
    partial void OnCRM_SchoolTypeIDChanging(int value);
    partial void OnCRM_SchoolTypeIDChanged();
    partial void OnPrimaryContactReferenceChanging(string value);
    partial void OnPrimaryContactReferenceChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    partial void OnIsSENChanging(bool value);
    partial void OnIsSENChanged();
    partial void OnSENSupportFreqChanging(string value);
    partial void OnSENSupportFreqChanged();
    partial void OnApproxPupilsChanging(int value);
    partial void OnApproxPupilsChanged();
    partial void OnSageAccountNumberChanging(string value);
    partial void OnSageAccountNumberChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public CRM_School()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_LEAID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> CRM_LEAID
		{
			get
			{
				return this._CRM_LEAID;
			}
			set
			{
				if ((this._CRM_LEAID != value))
				{
					if (this._CRM_LEA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_LEAIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_LEAID = value;
					this.SendPropertyChanged("CRM_LEAID");
					this.OnCRM_LEAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_RegionID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> CRM_RegionID
		{
			get
			{
				return this._CRM_RegionID;
			}
			set
			{
				if ((this._CRM_RegionID != value))
				{
					if (this._CRM_Region.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_RegionIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_RegionID = value;
					this.SendPropertyChanged("CRM_RegionID");
					this.OnCRM_RegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_AddressID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int CRM_AddressID
		{
			get
			{
				return this._CRM_AddressID;
			}
			set
			{
				if ((this._CRM_AddressID != value))
				{
					if (this._CRM_Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_AddressIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_AddressID = value;
					this.SendPropertyChanged("CRM_AddressID");
					this.OnCRM_AddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_SchoolTypeID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int CRM_SchoolTypeID
		{
			get
			{
				return this._CRM_SchoolTypeID;
			}
			set
			{
				if ((this._CRM_SchoolTypeID != value))
				{
					if (this._CRM_SchoolType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_SchoolTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_SchoolTypeID = value;
					this.SendPropertyChanged("CRM_SchoolTypeID");
					this.OnCRM_SchoolTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryContactReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string PrimaryContactReference
		{
			get
			{
				return this._PrimaryContactReference;
			}
			set
			{
				if ((this._PrimaryContactReference != value))
				{
					this.OnPrimaryContactReferenceChanging(value);
					this.SendPropertyChanging();
					this._PrimaryContactReference = value;
					this.SendPropertyChanged("PrimaryContactReference");
					this.OnPrimaryContactReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSEN", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool IsSEN
		{
			get
			{
				return this._IsSEN;
			}
			set
			{
				if ((this._IsSEN != value))
				{
					this.OnIsSENChanging(value);
					this.SendPropertyChanging();
					this._IsSEN = value;
					this.SendPropertyChanged("IsSEN");
					this.OnIsSENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SENSupportFreq", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string SENSupportFreq
		{
			get
			{
				return this._SENSupportFreq;
			}
			set
			{
				if ((this._SENSupportFreq != value))
				{
					this.OnSENSupportFreqChanging(value);
					this.SendPropertyChanging();
					this._SENSupportFreq = value;
					this.SendPropertyChanged("SENSupportFreq");
					this.OnSENSupportFreqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproxPupils", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public int ApproxPupils
		{
			get
			{
				return this._ApproxPupils;
			}
			set
			{
				if ((this._ApproxPupils != value))
				{
					this.OnApproxPupilsChanging(value);
					this.SendPropertyChanging();
					this._ApproxPupils = value;
					this.SendPropertyChanged("ApproxPupils");
					this.OnApproxPupilsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SageAccountNumber", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string SageAccountNumber
		{
			get
			{
				return this._SageAccountNumber;
			}
			set
			{
				if ((this._SageAccountNumber != value))
				{
					this.OnSageAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._SageAccountNumber = value;
					this.SendPropertyChanged("SageAccountNumber");
					this.OnSageAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(17)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_School_CRM_SchoolKeystage", Storage="_CRM_SchoolKeystages", ThisKey="ID", OtherKey="CRM_SchoolID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<CRM_SchoolKeystage> CRM_SchoolKeystages
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_SchoolKeystages.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_SchoolKeystages;
			}
			set
			{
				this._CRM_SchoolKeystages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_School_CRM_OrganisationSchool", Storage="_CRM_OrganisationSchools", ThisKey="ID", OtherKey="CRM_SchoolID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<CRM_OrganisationSchool> CRM_OrganisationSchools
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_OrganisationSchools.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_OrganisationSchools;
			}
			set
			{
				this._CRM_OrganisationSchools.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_School_CRM_PersonSchool", Storage="_CRM_PersonSchools", ThisKey="ID", OtherKey="CRM_SchoolID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<CRM_PersonSchool> CRM_PersonSchools
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_PersonSchools.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_PersonSchools;
			}
			set
			{
				this._CRM_PersonSchools.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_School_CRM_CalendarGroupBooking", Storage="_CRM_CalendarGroupBookings", ThisKey="ID", OtherKey="CRM_SchoolID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<CRM_CalendarGroupBooking> CRM_CalendarGroupBookings
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_CalendarGroupBookings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_CalendarGroupBookings;
			}
			set
			{
				this._CRM_CalendarGroupBookings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Address_CRM_School", Storage="_CRM_Address", ThisKey="CRM_AddressID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Address CRM_Address
		{
			get
			{
				return this._CRM_Address.Entity;
			}
			set
			{
				CRM_Address previousValue = this._CRM_Address.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Address.Entity = null;
						previousValue.CRM_Schools.Remove(this);
					}
					this._CRM_Address.Entity = value;
					if ((value != null))
					{
						value.CRM_Schools.Add(this);
						this._CRM_AddressID = value.ID;
					}
					else
					{
						this._CRM_AddressID = default(int);
					}
					this.SendPropertyChanged("CRM_Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_LEA_CRM_School", Storage="_CRM_LEA", ThisKey="CRM_LEAID", OtherKey="ID", IsForeignKey=true)]
		public CRM_LEA CRM_LEA
		{
			get
			{
				return this._CRM_LEA.Entity;
			}
			set
			{
				CRM_LEA previousValue = this._CRM_LEA.Entity;
				if (((previousValue != value) 
							|| (this._CRM_LEA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_LEA.Entity = null;
						previousValue.CRM_Schools.Remove(this);
					}
					this._CRM_LEA.Entity = value;
					if ((value != null))
					{
						value.CRM_Schools.Add(this);
						this._CRM_LEAID = value.ID;
					}
					else
					{
						this._CRM_LEAID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CRM_LEA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_SchoolType_CRM_School", Storage="_CRM_SchoolType", ThisKey="CRM_SchoolTypeID", OtherKey="ID", IsForeignKey=true)]
		public CRM_SchoolType CRM_SchoolType
		{
			get
			{
				return this._CRM_SchoolType.Entity;
			}
			set
			{
				CRM_SchoolType previousValue = this._CRM_SchoolType.Entity;
				if (((previousValue != value) 
							|| (this._CRM_SchoolType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_SchoolType.Entity = null;
						previousValue.CRM_Schools.Remove(this);
					}
					this._CRM_SchoolType.Entity = value;
					if ((value != null))
					{
						value.CRM_Schools.Add(this);
						this._CRM_SchoolTypeID = value.ID;
					}
					else
					{
						this._CRM_SchoolTypeID = default(int);
					}
					this.SendPropertyChanged("CRM_SchoolType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Region_CRM_School", Storage="_CRM_Region", ThisKey="CRM_RegionID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Region CRM_Region
		{
			get
			{
				return this._CRM_Region.Entity;
			}
			set
			{
				CRM_Region previousValue = this._CRM_Region.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Region.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Region.Entity = null;
						previousValue.CRM_Schools.Remove(this);
					}
					this._CRM_Region.Entity = value;
					if ((value != null))
					{
						value.CRM_Schools.Add(this);
						this._CRM_RegionID = value.ID;
					}
					else
					{
						this._CRM_RegionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CRM_Region");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_SchoolKeystages(CRM_SchoolKeystage entity)
		{
			this.SendPropertyChanging();
			entity.CRM_School = this;
		}
		
		private void detach_CRM_SchoolKeystages(CRM_SchoolKeystage entity)
		{
			this.SendPropertyChanging();
			entity.CRM_School = null;
		}
		
		private void attach_CRM_OrganisationSchools(CRM_OrganisationSchool entity)
		{
			this.SendPropertyChanging();
			entity.CRM_School = this;
		}
		
		private void detach_CRM_OrganisationSchools(CRM_OrganisationSchool entity)
		{
			this.SendPropertyChanging();
			entity.CRM_School = null;
		}
		
		private void attach_CRM_PersonSchools(CRM_PersonSchool entity)
		{
			this.SendPropertyChanging();
			entity.CRM_School = this;
		}
		
		private void detach_CRM_PersonSchools(CRM_PersonSchool entity)
		{
			this.SendPropertyChanging();
			entity.CRM_School = null;
		}
		
		private void attach_CRM_CalendarGroupBookings(CRM_CalendarGroupBooking entity)
		{
			this.SendPropertyChanging();
			entity.CRM_School = this;
		}
		
		private void detach_CRM_CalendarGroupBookings(CRM_CalendarGroupBooking entity)
		{
			this.SendPropertyChanging();
			entity.CRM_School = null;
		}
		
		private void Initialize()
		{
			this._CRM_SchoolKeystages = new EntitySet<CRM_SchoolKeystage>(new Action<CRM_SchoolKeystage>(this.attach_CRM_SchoolKeystages), new Action<CRM_SchoolKeystage>(this.detach_CRM_SchoolKeystages));
			this._CRM_OrganisationSchools = new EntitySet<CRM_OrganisationSchool>(new Action<CRM_OrganisationSchool>(this.attach_CRM_OrganisationSchools), new Action<CRM_OrganisationSchool>(this.detach_CRM_OrganisationSchools));
			this._CRM_PersonSchools = new EntitySet<CRM_PersonSchool>(new Action<CRM_PersonSchool>(this.attach_CRM_PersonSchools), new Action<CRM_PersonSchool>(this.detach_CRM_PersonSchools));
			this._CRM_CalendarGroupBookings = new EntitySet<CRM_CalendarGroupBooking>(new Action<CRM_CalendarGroupBooking>(this.attach_CRM_CalendarGroupBookings), new Action<CRM_CalendarGroupBooking>(this.detach_CRM_CalendarGroupBookings));
			this._CRM_Address = default(EntityRef<CRM_Address>);
			this._CRM_LEA = default(EntityRef<CRM_LEA>);
			this._CRM_SchoolType = default(EntityRef<CRM_SchoolType>);
			this._CRM_Region = default(EntityRef<CRM_Region>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Region")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_Region : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _IsActive;
		
		private bool _IsArchived;
		
		private EntitySet<CRM_School> _CRM_Schools;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    #endregion
		
		public CRM_Region()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Region_CRM_School", Storage="_CRM_Schools", ThisKey="ID", OtherKey="CRM_RegionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<CRM_School> CRM_Schools
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_Schools.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_Schools;
			}
			set
			{
				this._CRM_Schools.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_Schools(CRM_School entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Region = this;
		}
		
		private void detach_CRM_Schools(CRM_School entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Region = null;
		}
		
		private void Initialize()
		{
			this._CRM_Schools = new EntitySet<CRM_School>(new Action<CRM_School>(this.attach_CRM_Schools), new Action<CRM_School>(this.detach_CRM_Schools));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Person")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _Lastname;
		
		private string _Firstname;
		
		private bool _IsGiftAid;
		
		private string _PreviousNames;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private bool _IsChild;
		
		private bool _IsConcession;
		
		private bool _IsCarerMinder;
		
		private string _PrimaryEmail;
		
		private string _PrimaryTelephone;
		
		private int _CRM_AddressID;
		
		private bool _IsContactEmail;
		
		private bool _IsContactPost;
		
		private bool _IsDeceased;
		
		private string _Reference;
		
		private bool _IsArchived;
		
		private System.DateTime _DateAdded;
		
		private System.DateTime _DateModified;
		
		private bool _IsDoNotMail;
		
		private bool _IsDoNotEmail;
		
		private System.Nullable<int> _WebsiteAccountID;
		
		private System.Nullable<int> _LegacyID;
		
		private System.Nullable<bool> _IsMale;
		
		private byte _AddressType;
		
		private string _Telephone2;
		
		private System.Nullable<int> _PrimaryAddressID;
		
		private EntitySet<CRM_FamilyPerson> _CRM_FamilyPersons;
		
		private EntitySet<CRM_AnnualPassPerson> _CRM_AnnualPassPersons;
		
		private EntitySet<CRM_CalendarAttendance> _CRM_CalendarAttendances;
		
		private EntitySet<CRM_PersonSchool> _CRM_PersonSchools;
		
		private EntitySet<CRM_PersonOrganisation> _CRM_PersonOrganisations;
		
		private EntitySet<CRM_PersonPersonal> _CRM_PersonPersonals;
		
		private EntitySet<CRM_FundraisingGiftProfile> _CRM_FundraisingGiftProfiles;
		
		private EntitySet<CRM_PersonRelationship> _CRM_PersonRelationships;
		
		private EntitySet<CRM_PersonRelationship> _CRM_PersonRelationships1;
		
		private EntitySet<CRM_PersonRelationship> _CRM_PersonRelationships2;
		
		private EntityRef<CRM_Address> _CRM_Address;
		
		private EntityRef<CRM_Address> _CRM_Address1;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnLastnameChanging(string value);
    partial void OnLastnameChanged();
    partial void OnFirstnameChanging(string value);
    partial void OnFirstnameChanged();
    partial void OnIsGiftAidChanging(bool value);
    partial void OnIsGiftAidChanged();
    partial void OnPreviousNamesChanging(string value);
    partial void OnPreviousNamesChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnIsChildChanging(bool value);
    partial void OnIsChildChanged();
    partial void OnIsConcessionChanging(bool value);
    partial void OnIsConcessionChanged();
    partial void OnIsCarerMinderChanging(bool value);
    partial void OnIsCarerMinderChanged();
    partial void OnPrimaryEmailChanging(string value);
    partial void OnPrimaryEmailChanged();
    partial void OnPrimaryTelephoneChanging(string value);
    partial void OnPrimaryTelephoneChanged();
    partial void OnCRM_AddressIDChanging(int value);
    partial void OnCRM_AddressIDChanged();
    partial void OnIsContactEmailChanging(bool value);
    partial void OnIsContactEmailChanged();
    partial void OnIsContactPostChanging(bool value);
    partial void OnIsContactPostChanged();
    partial void OnIsDeceasedChanging(bool value);
    partial void OnIsDeceasedChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    partial void OnDateAddedChanging(System.DateTime value);
    partial void OnDateAddedChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    partial void OnIsDoNotMailChanging(bool value);
    partial void OnIsDoNotMailChanged();
    partial void OnIsDoNotEmailChanging(bool value);
    partial void OnIsDoNotEmailChanged();
    partial void OnWebsiteAccountIDChanging(System.Nullable<int> value);
    partial void OnWebsiteAccountIDChanged();
    partial void OnLegacyIDChanging(System.Nullable<int> value);
    partial void OnLegacyIDChanged();
    partial void OnIsMaleChanging(System.Nullable<bool> value);
    partial void OnIsMaleChanged();
    partial void OnAddressTypeChanging(byte value);
    partial void OnAddressTypeChanged();
    partial void OnTelephone2Changing(string value);
    partial void OnTelephone2Changed();
    partial void OnPrimaryAddressIDChanging(System.Nullable<int> value);
    partial void OnPrimaryAddressIDChanged();
    #endregion
		
		public CRM_Person()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this.OnLastnameChanging(value);
					this.SendPropertyChanging();
					this._Lastname = value;
					this.SendPropertyChanged("Lastname");
					this.OnLastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this.OnFirstnameChanging(value);
					this.SendPropertyChanging();
					this._Firstname = value;
					this.SendPropertyChanged("Firstname");
					this.OnFirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGiftAid", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsGiftAid
		{
			get
			{
				return this._IsGiftAid;
			}
			set
			{
				if ((this._IsGiftAid != value))
				{
					this.OnIsGiftAidChanging(value);
					this.SendPropertyChanging();
					this._IsGiftAid = value;
					this.SendPropertyChanged("IsGiftAid");
					this.OnIsGiftAidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousNames", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string PreviousNames
		{
			get
			{
				return this._PreviousNames;
			}
			set
			{
				if ((this._PreviousNames != value))
				{
					this.OnPreviousNamesChanging(value);
					this.SendPropertyChanging();
					this._PreviousNames = value;
					this.SendPropertyChanged("PreviousNames");
					this.OnPreviousNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChild", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool IsChild
		{
			get
			{
				return this._IsChild;
			}
			set
			{
				if ((this._IsChild != value))
				{
					this.OnIsChildChanging(value);
					this.SendPropertyChanging();
					this._IsChild = value;
					this.SendPropertyChanged("IsChild");
					this.OnIsChildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConcession", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool IsConcession
		{
			get
			{
				return this._IsConcession;
			}
			set
			{
				if ((this._IsConcession != value))
				{
					this.OnIsConcessionChanging(value);
					this.SendPropertyChanging();
					this._IsConcession = value;
					this.SendPropertyChanged("IsConcession");
					this.OnIsConcessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCarerMinder", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool IsCarerMinder
		{
			get
			{
				return this._IsCarerMinder;
			}
			set
			{
				if ((this._IsCarerMinder != value))
				{
					this.OnIsCarerMinderChanging(value);
					this.SendPropertyChanging();
					this._IsCarerMinder = value;
					this.SendPropertyChanged("IsCarerMinder");
					this.OnIsCarerMinderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryEmail", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string PrimaryEmail
		{
			get
			{
				return this._PrimaryEmail;
			}
			set
			{
				if ((this._PrimaryEmail != value))
				{
					this.OnPrimaryEmailChanging(value);
					this.SendPropertyChanging();
					this._PrimaryEmail = value;
					this.SendPropertyChanged("PrimaryEmail");
					this.OnPrimaryEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryTelephone", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string PrimaryTelephone
		{
			get
			{
				return this._PrimaryTelephone;
			}
			set
			{
				if ((this._PrimaryTelephone != value))
				{
					this.OnPrimaryTelephoneChanging(value);
					this.SendPropertyChanging();
					this._PrimaryTelephone = value;
					this.SendPropertyChanged("PrimaryTelephone");
					this.OnPrimaryTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_AddressID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public int CRM_AddressID
		{
			get
			{
				return this._CRM_AddressID;
			}
			set
			{
				if ((this._CRM_AddressID != value))
				{
					if (this._CRM_Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_AddressIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_AddressID = value;
					this.SendPropertyChanged("CRM_AddressID");
					this.OnCRM_AddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsContactEmail", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public bool IsContactEmail
		{
			get
			{
				return this._IsContactEmail;
			}
			set
			{
				if ((this._IsContactEmail != value))
				{
					this.OnIsContactEmailChanging(value);
					this.SendPropertyChanging();
					this._IsContactEmail = value;
					this.SendPropertyChanged("IsContactEmail");
					this.OnIsContactEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsContactPost", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public bool IsContactPost
		{
			get
			{
				return this._IsContactPost;
			}
			set
			{
				if ((this._IsContactPost != value))
				{
					this.OnIsContactPostChanging(value);
					this.SendPropertyChanging();
					this._IsContactPost = value;
					this.SendPropertyChanged("IsContactPost");
					this.OnIsContactPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeceased", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public bool IsDeceased
		{
			get
			{
				return this._IsDeceased;
			}
			set
			{
				if ((this._IsDeceased != value))
				{
					this.OnIsDeceasedChanging(value);
					this.SendPropertyChanging();
					this._IsDeceased = value;
					this.SendPropertyChanged("IsDeceased");
					this.OnIsDeceasedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(17)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.DateTime DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDoNotMail", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public bool IsDoNotMail
		{
			get
			{
				return this._IsDoNotMail;
			}
			set
			{
				if ((this._IsDoNotMail != value))
				{
					this.OnIsDoNotMailChanging(value);
					this.SendPropertyChanging();
					this._IsDoNotMail = value;
					this.SendPropertyChanged("IsDoNotMail");
					this.OnIsDoNotMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDoNotEmail", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public bool IsDoNotEmail
		{
			get
			{
				return this._IsDoNotEmail;
			}
			set
			{
				if ((this._IsDoNotEmail != value))
				{
					this.OnIsDoNotEmailChanging(value);
					this.SendPropertyChanging();
					this._IsDoNotEmail = value;
					this.SendPropertyChanged("IsDoNotEmail");
					this.OnIsDoNotEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebsiteAccountID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public System.Nullable<int> WebsiteAccountID
		{
			get
			{
				return this._WebsiteAccountID;
			}
			set
			{
				if ((this._WebsiteAccountID != value))
				{
					this.OnWebsiteAccountIDChanging(value);
					this.SendPropertyChanging();
					this._WebsiteAccountID = value;
					this.SendPropertyChanged("WebsiteAccountID");
					this.OnWebsiteAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LegacyID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public System.Nullable<int> LegacyID
		{
			get
			{
				return this._LegacyID;
			}
			set
			{
				if ((this._LegacyID != value))
				{
					this.OnLegacyIDChanging(value);
					this.SendPropertyChanging();
					this._LegacyID = value;
					this.SendPropertyChanged("LegacyID");
					this.OnLegacyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMale", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public System.Nullable<bool> IsMale
		{
			get
			{
				return this._IsMale;
			}
			set
			{
				if ((this._IsMale != value))
				{
					this.OnIsMaleChanging(value);
					this.SendPropertyChanging();
					this._IsMale = value;
					this.SendPropertyChanged("IsMale");
					this.OnIsMaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressType", DbType="TinyInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public byte AddressType
		{
			get
			{
				return this._AddressType;
			}
			set
			{
				if ((this._AddressType != value))
				{
					this.OnAddressTypeChanging(value);
					this.SendPropertyChanging();
					this._AddressType = value;
					this.SendPropertyChanged("AddressType");
					this.OnAddressTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone2", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public string Telephone2
		{
			get
			{
				return this._Telephone2;
			}
			set
			{
				if ((this._Telephone2 != value))
				{
					this.OnTelephone2Changing(value);
					this.SendPropertyChanging();
					this._Telephone2 = value;
					this.SendPropertyChanged("Telephone2");
					this.OnTelephone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryAddressID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public System.Nullable<int> PrimaryAddressID
		{
			get
			{
				return this._PrimaryAddressID;
			}
			set
			{
				if ((this._PrimaryAddressID != value))
				{
					if (this._CRM_Address1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrimaryAddressIDChanging(value);
					this.SendPropertyChanging();
					this._PrimaryAddressID = value;
					this.SendPropertyChanged("PrimaryAddressID");
					this.OnPrimaryAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Person_CRM_FamilyPerson", Storage="_CRM_FamilyPersons", ThisKey="ID", OtherKey="CRM_PersonID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29, EmitDefaultValue=false)]
		public EntitySet<CRM_FamilyPerson> CRM_FamilyPersons
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_FamilyPersons.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_FamilyPersons;
			}
			set
			{
				this._CRM_FamilyPersons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Person_CRM_AnnualPassPerson", Storage="_CRM_AnnualPassPersons", ThisKey="ID", OtherKey="CRM_PersonID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30, EmitDefaultValue=false)]
		public EntitySet<CRM_AnnualPassPerson> CRM_AnnualPassPersons
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_AnnualPassPersons.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_AnnualPassPersons;
			}
			set
			{
				this._CRM_AnnualPassPersons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Person_CRM_CalendarAttendance", Storage="_CRM_CalendarAttendances", ThisKey="ID", OtherKey="CRM_PersonID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31, EmitDefaultValue=false)]
		public EntitySet<CRM_CalendarAttendance> CRM_CalendarAttendances
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_CalendarAttendances.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_CalendarAttendances;
			}
			set
			{
				this._CRM_CalendarAttendances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Person_CRM_PersonSchool", Storage="_CRM_PersonSchools", ThisKey="ID", OtherKey="CRM_PersonID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32, EmitDefaultValue=false)]
		public EntitySet<CRM_PersonSchool> CRM_PersonSchools
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_PersonSchools.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_PersonSchools;
			}
			set
			{
				this._CRM_PersonSchools.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Person_CRM_PersonOrganisation", Storage="_CRM_PersonOrganisations", ThisKey="ID", OtherKey="CRM_PersonID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33, EmitDefaultValue=false)]
		public EntitySet<CRM_PersonOrganisation> CRM_PersonOrganisations
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_PersonOrganisations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_PersonOrganisations;
			}
			set
			{
				this._CRM_PersonOrganisations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Person_CRM_PersonPersonal", Storage="_CRM_PersonPersonals", ThisKey="ID", OtherKey="CRM_PersonID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34, EmitDefaultValue=false)]
		public EntitySet<CRM_PersonPersonal> CRM_PersonPersonals
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_PersonPersonals.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_PersonPersonals;
			}
			set
			{
				this._CRM_PersonPersonals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Person_CRM_FundraisingGiftProfile", Storage="_CRM_FundraisingGiftProfiles", ThisKey="ID", OtherKey="CRM_PersonID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35, EmitDefaultValue=false)]
		public EntitySet<CRM_FundraisingGiftProfile> CRM_FundraisingGiftProfiles
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_FundraisingGiftProfiles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_FundraisingGiftProfiles;
			}
			set
			{
				this._CRM_FundraisingGiftProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Person_CRM_PersonRelationship", Storage="_CRM_PersonRelationships", ThisKey="ID", OtherKey="CRM_PersonID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=36, EmitDefaultValue=false)]
		public EntitySet<CRM_PersonRelationship> CRM_PersonRelationships
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_PersonRelationships.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_PersonRelationships;
			}
			set
			{
				this._CRM_PersonRelationships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Person_CRM_PersonRelationship1", Storage="_CRM_PersonRelationships1", ThisKey="ID", OtherKey="CRM_PersonID2")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=37, EmitDefaultValue=false)]
		public EntitySet<CRM_PersonRelationship> CRM_PersonRelationships1
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_PersonRelationships1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_PersonRelationships1;
			}
			set
			{
				this._CRM_PersonRelationships1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Person_CRM_PersonRelationship2", Storage="_CRM_PersonRelationships2", ThisKey="ID", OtherKey="CRM_PersonIDAddress")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=38, EmitDefaultValue=false)]
		public EntitySet<CRM_PersonRelationship> CRM_PersonRelationships2
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_PersonRelationships2.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_PersonRelationships2;
			}
			set
			{
				this._CRM_PersonRelationships2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Address_CRM_Person", Storage="_CRM_Address", ThisKey="CRM_AddressID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Address CRM_Address
		{
			get
			{
				return this._CRM_Address.Entity;
			}
			set
			{
				CRM_Address previousValue = this._CRM_Address.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Address.Entity = null;
						previousValue.CRM_Persons.Remove(this);
					}
					this._CRM_Address.Entity = value;
					if ((value != null))
					{
						value.CRM_Persons.Add(this);
						this._CRM_AddressID = value.ID;
					}
					else
					{
						this._CRM_AddressID = default(int);
					}
					this.SendPropertyChanged("CRM_Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Address_CRM_Person1", Storage="_CRM_Address1", ThisKey="PrimaryAddressID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Address CRM_Address1
		{
			get
			{
				return this._CRM_Address1.Entity;
			}
			set
			{
				CRM_Address previousValue = this._CRM_Address1.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Address1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Address1.Entity = null;
						previousValue.CRM_Persons1.Remove(this);
					}
					this._CRM_Address1.Entity = value;
					if ((value != null))
					{
						value.CRM_Persons1.Add(this);
						this._PrimaryAddressID = value.ID;
					}
					else
					{
						this._PrimaryAddressID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CRM_Address1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_FamilyPersons(CRM_FamilyPerson entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Person = this;
		}
		
		private void detach_CRM_FamilyPersons(CRM_FamilyPerson entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Person = null;
		}
		
		private void attach_CRM_AnnualPassPersons(CRM_AnnualPassPerson entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Person = this;
		}
		
		private void detach_CRM_AnnualPassPersons(CRM_AnnualPassPerson entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Person = null;
		}
		
		private void attach_CRM_CalendarAttendances(CRM_CalendarAttendance entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Person = this;
		}
		
		private void detach_CRM_CalendarAttendances(CRM_CalendarAttendance entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Person = null;
		}
		
		private void attach_CRM_PersonSchools(CRM_PersonSchool entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Person = this;
		}
		
		private void detach_CRM_PersonSchools(CRM_PersonSchool entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Person = null;
		}
		
		private void attach_CRM_PersonOrganisations(CRM_PersonOrganisation entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Person = this;
		}
		
		private void detach_CRM_PersonOrganisations(CRM_PersonOrganisation entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Person = null;
		}
		
		private void attach_CRM_PersonPersonals(CRM_PersonPersonal entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Person = this;
		}
		
		private void detach_CRM_PersonPersonals(CRM_PersonPersonal entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Person = null;
		}
		
		private void attach_CRM_FundraisingGiftProfiles(CRM_FundraisingGiftProfile entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Person = this;
		}
		
		private void detach_CRM_FundraisingGiftProfiles(CRM_FundraisingGiftProfile entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Person = null;
		}
		
		private void attach_CRM_PersonRelationships(CRM_PersonRelationship entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Person = this;
		}
		
		private void detach_CRM_PersonRelationships(CRM_PersonRelationship entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Person = null;
		}
		
		private void attach_CRM_PersonRelationships1(CRM_PersonRelationship entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Person1 = this;
		}
		
		private void detach_CRM_PersonRelationships1(CRM_PersonRelationship entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Person1 = null;
		}
		
		private void attach_CRM_PersonRelationships2(CRM_PersonRelationship entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Person2 = this;
		}
		
		private void detach_CRM_PersonRelationships2(CRM_PersonRelationship entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Person2 = null;
		}
		
		private void Initialize()
		{
			this._CRM_FamilyPersons = new EntitySet<CRM_FamilyPerson>(new Action<CRM_FamilyPerson>(this.attach_CRM_FamilyPersons), new Action<CRM_FamilyPerson>(this.detach_CRM_FamilyPersons));
			this._CRM_AnnualPassPersons = new EntitySet<CRM_AnnualPassPerson>(new Action<CRM_AnnualPassPerson>(this.attach_CRM_AnnualPassPersons), new Action<CRM_AnnualPassPerson>(this.detach_CRM_AnnualPassPersons));
			this._CRM_CalendarAttendances = new EntitySet<CRM_CalendarAttendance>(new Action<CRM_CalendarAttendance>(this.attach_CRM_CalendarAttendances), new Action<CRM_CalendarAttendance>(this.detach_CRM_CalendarAttendances));
			this._CRM_PersonSchools = new EntitySet<CRM_PersonSchool>(new Action<CRM_PersonSchool>(this.attach_CRM_PersonSchools), new Action<CRM_PersonSchool>(this.detach_CRM_PersonSchools));
			this._CRM_PersonOrganisations = new EntitySet<CRM_PersonOrganisation>(new Action<CRM_PersonOrganisation>(this.attach_CRM_PersonOrganisations), new Action<CRM_PersonOrganisation>(this.detach_CRM_PersonOrganisations));
			this._CRM_PersonPersonals = new EntitySet<CRM_PersonPersonal>(new Action<CRM_PersonPersonal>(this.attach_CRM_PersonPersonals), new Action<CRM_PersonPersonal>(this.detach_CRM_PersonPersonals));
			this._CRM_FundraisingGiftProfiles = new EntitySet<CRM_FundraisingGiftProfile>(new Action<CRM_FundraisingGiftProfile>(this.attach_CRM_FundraisingGiftProfiles), new Action<CRM_FundraisingGiftProfile>(this.detach_CRM_FundraisingGiftProfiles));
			this._CRM_PersonRelationships = new EntitySet<CRM_PersonRelationship>(new Action<CRM_PersonRelationship>(this.attach_CRM_PersonRelationships), new Action<CRM_PersonRelationship>(this.detach_CRM_PersonRelationships));
			this._CRM_PersonRelationships1 = new EntitySet<CRM_PersonRelationship>(new Action<CRM_PersonRelationship>(this.attach_CRM_PersonRelationships1), new Action<CRM_PersonRelationship>(this.detach_CRM_PersonRelationships1));
			this._CRM_PersonRelationships2 = new EntitySet<CRM_PersonRelationship>(new Action<CRM_PersonRelationship>(this.attach_CRM_PersonRelationships2), new Action<CRM_PersonRelationship>(this.detach_CRM_PersonRelationships2));
			this._CRM_Address = default(EntityRef<CRM_Address>);
			this._CRM_Address1 = default(EntityRef<CRM_Address>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_CalendarAdmin")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_CalendarAdmin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_CalendarID;
		
		private int _AdminID;
		
		private System.DateTime _Timestamp;
		
		private byte _Status;
		
		private EntityRef<Admin> _Admin;
		
		private EntityRef<CRM_Calendar> _CRM_Calendar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_CalendarIDChanging(int value);
    partial void OnCRM_CalendarIDChanged();
    partial void OnAdminIDChanging(int value);
    partial void OnAdminIDChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public CRM_CalendarAdmin()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_CalendarID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_CalendarID
		{
			get
			{
				return this._CRM_CalendarID;
			}
			set
			{
				if ((this._CRM_CalendarID != value))
				{
					if (this._CRM_Calendar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_CalendarIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_CalendarID = value;
					this.SendPropertyChanged("CRM_CalendarID");
					this.OnCRM_CalendarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._Admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_CRM_CalendarAdmin", Storage="_Admin", ThisKey="AdminID", OtherKey="ID", IsForeignKey=true)]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.CRM_CalendarAdmins.Remove(this);
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.CRM_CalendarAdmins.Add(this);
						this._AdminID = value.ID;
					}
					else
					{
						this._AdminID = default(int);
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Calendar_CRM_CalendarAdmin", Storage="_CRM_Calendar", ThisKey="CRM_CalendarID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Calendar CRM_Calendar
		{
			get
			{
				return this._CRM_Calendar.Entity;
			}
			set
			{
				CRM_Calendar previousValue = this._CRM_Calendar.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Calendar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Calendar.Entity = null;
						previousValue.CRM_CalendarAdmins.Remove(this);
					}
					this._CRM_Calendar.Entity = value;
					if ((value != null))
					{
						value.CRM_CalendarAdmins.Add(this);
						this._CRM_CalendarID = value.ID;
					}
					else
					{
						this._CRM_CalendarID = default(int);
					}
					this.SendPropertyChanged("CRM_Calendar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Admin = default(EntityRef<Admin>);
			this._CRM_Calendar = default(EntityRef<CRM_Calendar>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_PersonSchool")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_PersonSchool : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_SchoolID;
		
		private int _CRM_PersonID;
		
		private int _CRM_RoleID;
		
		private string _Email;
		
		private string _Telephone;
		
		private bool _IsPrimary;
		
		private string _Reference;
		
		private bool _IsArchived;
		
		private EntitySet<CRM_CalendarGroupBooking> _CRM_CalendarGroupBookings;
		
		private EntityRef<CRM_Person> _CRM_Person;
		
		private EntityRef<CRM_Role> _CRM_Role;
		
		private EntityRef<CRM_School> _CRM_School;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_SchoolIDChanging(int value);
    partial void OnCRM_SchoolIDChanged();
    partial void OnCRM_PersonIDChanging(int value);
    partial void OnCRM_PersonIDChanged();
    partial void OnCRM_RoleIDChanging(int value);
    partial void OnCRM_RoleIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnIsPrimaryChanging(bool value);
    partial void OnIsPrimaryChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    #endregion
		
		public CRM_PersonSchool()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_SchoolID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_SchoolID
		{
			get
			{
				return this._CRM_SchoolID;
			}
			set
			{
				if ((this._CRM_SchoolID != value))
				{
					if (this._CRM_School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_SchoolIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_SchoolID = value;
					this.SendPropertyChanged("CRM_SchoolID");
					this.OnCRM_SchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_PersonID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CRM_PersonID
		{
			get
			{
				return this._CRM_PersonID;
			}
			set
			{
				if ((this._CRM_PersonID != value))
				{
					if (this._CRM_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_PersonIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_PersonID = value;
					this.SendPropertyChanged("CRM_PersonID");
					this.OnCRM_PersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_RoleID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int CRM_RoleID
		{
			get
			{
				return this._CRM_RoleID;
			}
			set
			{
				if ((this._CRM_RoleID != value))
				{
					if (this._CRM_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_RoleIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_RoleID = value;
					this.SendPropertyChanged("CRM_RoleID");
					this.OnCRM_RoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrimary", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool IsPrimary
		{
			get
			{
				return this._IsPrimary;
			}
			set
			{
				if ((this._IsPrimary != value))
				{
					this.OnIsPrimaryChanging(value);
					this.SendPropertyChanging();
					this._IsPrimary = value;
					this.SendPropertyChanged("IsPrimary");
					this.OnIsPrimaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(23)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_PersonSchool_CRM_CalendarGroupBooking", Storage="_CRM_CalendarGroupBookings", ThisKey="ID", OtherKey="CRM_PersonSchoolID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<CRM_CalendarGroupBooking> CRM_CalendarGroupBookings
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_CalendarGroupBookings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_CalendarGroupBookings;
			}
			set
			{
				this._CRM_CalendarGroupBookings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Person_CRM_PersonSchool", Storage="_CRM_Person", ThisKey="CRM_PersonID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Person CRM_Person
		{
			get
			{
				return this._CRM_Person.Entity;
			}
			set
			{
				CRM_Person previousValue = this._CRM_Person.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Person.Entity = null;
						previousValue.CRM_PersonSchools.Remove(this);
					}
					this._CRM_Person.Entity = value;
					if ((value != null))
					{
						value.CRM_PersonSchools.Add(this);
						this._CRM_PersonID = value.ID;
					}
					else
					{
						this._CRM_PersonID = default(int);
					}
					this.SendPropertyChanged("CRM_Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Role_CRM_PersonSchool", Storage="_CRM_Role", ThisKey="CRM_RoleID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Role CRM_Role
		{
			get
			{
				return this._CRM_Role.Entity;
			}
			set
			{
				CRM_Role previousValue = this._CRM_Role.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Role.Entity = null;
						previousValue.CRM_PersonSchools.Remove(this);
					}
					this._CRM_Role.Entity = value;
					if ((value != null))
					{
						value.CRM_PersonSchools.Add(this);
						this._CRM_RoleID = value.ID;
					}
					else
					{
						this._CRM_RoleID = default(int);
					}
					this.SendPropertyChanged("CRM_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_School_CRM_PersonSchool", Storage="_CRM_School", ThisKey="CRM_SchoolID", OtherKey="ID", IsForeignKey=true)]
		public CRM_School CRM_School
		{
			get
			{
				return this._CRM_School.Entity;
			}
			set
			{
				CRM_School previousValue = this._CRM_School.Entity;
				if (((previousValue != value) 
							|| (this._CRM_School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_School.Entity = null;
						previousValue.CRM_PersonSchools.Remove(this);
					}
					this._CRM_School.Entity = value;
					if ((value != null))
					{
						value.CRM_PersonSchools.Add(this);
						this._CRM_SchoolID = value.ID;
					}
					else
					{
						this._CRM_SchoolID = default(int);
					}
					this.SendPropertyChanged("CRM_School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_CalendarGroupBookings(CRM_CalendarGroupBooking entity)
		{
			this.SendPropertyChanging();
			entity.CRM_PersonSchool = this;
		}
		
		private void detach_CRM_CalendarGroupBookings(CRM_CalendarGroupBooking entity)
		{
			this.SendPropertyChanging();
			entity.CRM_PersonSchool = null;
		}
		
		private void Initialize()
		{
			this._CRM_CalendarGroupBookings = new EntitySet<CRM_CalendarGroupBooking>(new Action<CRM_CalendarGroupBooking>(this.attach_CRM_CalendarGroupBookings), new Action<CRM_CalendarGroupBooking>(this.detach_CRM_CalendarGroupBookings));
			this._CRM_Person = default(EntityRef<CRM_Person>);
			this._CRM_Role = default(EntityRef<CRM_Role>);
			this._CRM_School = default(EntityRef<CRM_School>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_PersonOrganisation")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_PersonOrganisation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_PersonID;
		
		private int _CRM_OrganisationID;
		
		private int _CRM_RoleID;
		
		private string _Email;
		
		private string _Telephone;
		
		private string _Reference;
		
		private bool _IsArchived;
		
		private EntityRef<CRM_Person> _CRM_Person;
		
		private EntityRef<CRM_Role> _CRM_Role;
		
		private EntityRef<CRM_Organisation> _CRM_Organisation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_PersonIDChanging(int value);
    partial void OnCRM_PersonIDChanged();
    partial void OnCRM_OrganisationIDChanging(int value);
    partial void OnCRM_OrganisationIDChanged();
    partial void OnCRM_RoleIDChanging(int value);
    partial void OnCRM_RoleIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    #endregion
		
		public CRM_PersonOrganisation()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_PersonID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_PersonID
		{
			get
			{
				return this._CRM_PersonID;
			}
			set
			{
				if ((this._CRM_PersonID != value))
				{
					if (this._CRM_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_PersonIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_PersonID = value;
					this.SendPropertyChanged("CRM_PersonID");
					this.OnCRM_PersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_OrganisationID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CRM_OrganisationID
		{
			get
			{
				return this._CRM_OrganisationID;
			}
			set
			{
				if ((this._CRM_OrganisationID != value))
				{
					if (this._CRM_Organisation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_OrganisationIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_OrganisationID = value;
					this.SendPropertyChanged("CRM_OrganisationID");
					this.OnCRM_OrganisationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_RoleID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int CRM_RoleID
		{
			get
			{
				return this._CRM_RoleID;
			}
			set
			{
				if ((this._CRM_RoleID != value))
				{
					if (this._CRM_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_RoleIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_RoleID = value;
					this.SendPropertyChanged("CRM_RoleID");
					this.OnCRM_RoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(29)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Person_CRM_PersonOrganisation", Storage="_CRM_Person", ThisKey="CRM_PersonID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Person CRM_Person
		{
			get
			{
				return this._CRM_Person.Entity;
			}
			set
			{
				CRM_Person previousValue = this._CRM_Person.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Person.Entity = null;
						previousValue.CRM_PersonOrganisations.Remove(this);
					}
					this._CRM_Person.Entity = value;
					if ((value != null))
					{
						value.CRM_PersonOrganisations.Add(this);
						this._CRM_PersonID = value.ID;
					}
					else
					{
						this._CRM_PersonID = default(int);
					}
					this.SendPropertyChanged("CRM_Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Role_CRM_PersonOrganisation", Storage="_CRM_Role", ThisKey="CRM_RoleID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Role CRM_Role
		{
			get
			{
				return this._CRM_Role.Entity;
			}
			set
			{
				CRM_Role previousValue = this._CRM_Role.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Role.Entity = null;
						previousValue.CRM_PersonOrganisations.Remove(this);
					}
					this._CRM_Role.Entity = value;
					if ((value != null))
					{
						value.CRM_PersonOrganisations.Add(this);
						this._CRM_RoleID = value.ID;
					}
					else
					{
						this._CRM_RoleID = default(int);
					}
					this.SendPropertyChanged("CRM_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Organisation_CRM_PersonOrganisation", Storage="_CRM_Organisation", ThisKey="CRM_OrganisationID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Organisation CRM_Organisation
		{
			get
			{
				return this._CRM_Organisation.Entity;
			}
			set
			{
				CRM_Organisation previousValue = this._CRM_Organisation.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Organisation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Organisation.Entity = null;
						previousValue.CRM_PersonOrganisations.Remove(this);
					}
					this._CRM_Organisation.Entity = value;
					if ((value != null))
					{
						value.CRM_PersonOrganisations.Add(this);
						this._CRM_OrganisationID = value.ID;
					}
					else
					{
						this._CRM_OrganisationID = default(int);
					}
					this.SendPropertyChanged("CRM_Organisation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CRM_Person = default(EntityRef<CRM_Person>);
			this._CRM_Role = default(EntityRef<CRM_Role>);
			this._CRM_Organisation = default(EntityRef<CRM_Organisation>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_PersonPersonal")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_PersonPersonal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_PersonID;
		
		private int _AddressID;
		
		private string _Email;
		
		private string _Telephone;
		
		private bool _IsPrimary;
		
		private string _Description;
		
		private string _Reference;
		
		private bool _IsArchived;
		
		private EntityRef<CRM_Address> _CRM_Address;
		
		private EntityRef<CRM_Person> _CRM_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_PersonIDChanging(int value);
    partial void OnCRM_PersonIDChanged();
    partial void OnAddressIDChanging(int value);
    partial void OnAddressIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnIsPrimaryChanging(bool value);
    partial void OnIsPrimaryChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    #endregion
		
		public CRM_PersonPersonal()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_PersonID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_PersonID
		{
			get
			{
				return this._CRM_PersonID;
			}
			set
			{
				if ((this._CRM_PersonID != value))
				{
					if (this._CRM_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_PersonIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_PersonID = value;
					this.SendPropertyChanged("CRM_PersonID");
					this.OnCRM_PersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int AddressID
		{
			get
			{
				return this._AddressID;
			}
			set
			{
				if ((this._AddressID != value))
				{
					if (this._CRM_Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddressIDChanging(value);
					this.SendPropertyChanging();
					this._AddressID = value;
					this.SendPropertyChanged("AddressID");
					this.OnAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrimary", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsPrimary
		{
			get
			{
				return this._IsPrimary;
			}
			set
			{
				if ((this._IsPrimary != value))
				{
					this.OnIsPrimaryChanging(value);
					this.SendPropertyChanging();
					this._IsPrimary = value;
					this.SendPropertyChanged("IsPrimary");
					this.OnIsPrimaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(25)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Address_CRM_PersonPersonal", Storage="_CRM_Address", ThisKey="AddressID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Address CRM_Address
		{
			get
			{
				return this._CRM_Address.Entity;
			}
			set
			{
				CRM_Address previousValue = this._CRM_Address.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Address.Entity = null;
						previousValue.CRM_PersonPersonals.Remove(this);
					}
					this._CRM_Address.Entity = value;
					if ((value != null))
					{
						value.CRM_PersonPersonals.Add(this);
						this._AddressID = value.ID;
					}
					else
					{
						this._AddressID = default(int);
					}
					this.SendPropertyChanged("CRM_Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Person_CRM_PersonPersonal", Storage="_CRM_Person", ThisKey="CRM_PersonID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Person CRM_Person
		{
			get
			{
				return this._CRM_Person.Entity;
			}
			set
			{
				CRM_Person previousValue = this._CRM_Person.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Person.Entity = null;
						previousValue.CRM_PersonPersonals.Remove(this);
					}
					this._CRM_Person.Entity = value;
					if ((value != null))
					{
						value.CRM_PersonPersonals.Add(this);
						this._CRM_PersonID = value.ID;
					}
					else
					{
						this._CRM_PersonID = default(int);
					}
					this.SendPropertyChanged("CRM_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CRM_Address = default(EntityRef<CRM_Address>);
			this._CRM_Person = default(EntityRef<CRM_Person>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Organisation")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_Organisation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _CRM_OrganisationTypeID;
		
		private int _CRM_AddressID;
		
		private string _PrimaryContactReference;
		
		private string _Reference;
		
		private bool _IsArchived;
		
		private EntitySet<CRM_OrganisationSchool> _CRM_OrganisationSchools;
		
		private EntitySet<CRM_PersonOrganisation> _CRM_PersonOrganisations;
		
		private EntityRef<CRM_Address> _CRM_Address;
		
		private EntityRef<CRM_OrganisationType> _CRM_OrganisationType;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCRM_OrganisationTypeIDChanging(int value);
    partial void OnCRM_OrganisationTypeIDChanged();
    partial void OnCRM_AddressIDChanging(int value);
    partial void OnCRM_AddressIDChanged();
    partial void OnPrimaryContactReferenceChanging(string value);
    partial void OnPrimaryContactReferenceChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    #endregion
		
		public CRM_Organisation()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_OrganisationTypeID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CRM_OrganisationTypeID
		{
			get
			{
				return this._CRM_OrganisationTypeID;
			}
			set
			{
				if ((this._CRM_OrganisationTypeID != value))
				{
					if (this._CRM_OrganisationType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_OrganisationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_OrganisationTypeID = value;
					this.SendPropertyChanged("CRM_OrganisationTypeID");
					this.OnCRM_OrganisationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_AddressID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int CRM_AddressID
		{
			get
			{
				return this._CRM_AddressID;
			}
			set
			{
				if ((this._CRM_AddressID != value))
				{
					if (this._CRM_Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_AddressIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_AddressID = value;
					this.SendPropertyChanged("CRM_AddressID");
					this.OnCRM_AddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryContactReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string PrimaryContactReference
		{
			get
			{
				return this._PrimaryContactReference;
			}
			set
			{
				if ((this._PrimaryContactReference != value))
				{
					this.OnPrimaryContactReferenceChanging(value);
					this.SendPropertyChanging();
					this._PrimaryContactReference = value;
					this.SendPropertyChanged("PrimaryContactReference");
					this.OnPrimaryContactReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(23)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Organisation_CRM_OrganisationSchool", Storage="_CRM_OrganisationSchools", ThisKey="ID", OtherKey="CRM_OrganisationID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<CRM_OrganisationSchool> CRM_OrganisationSchools
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_OrganisationSchools.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_OrganisationSchools;
			}
			set
			{
				this._CRM_OrganisationSchools.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Organisation_CRM_PersonOrganisation", Storage="_CRM_PersonOrganisations", ThisKey="ID", OtherKey="CRM_OrganisationID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<CRM_PersonOrganisation> CRM_PersonOrganisations
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_PersonOrganisations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_PersonOrganisations;
			}
			set
			{
				this._CRM_PersonOrganisations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Address_CRM_Organisation", Storage="_CRM_Address", ThisKey="CRM_AddressID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Address CRM_Address
		{
			get
			{
				return this._CRM_Address.Entity;
			}
			set
			{
				CRM_Address previousValue = this._CRM_Address.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Address.Entity = null;
						previousValue.CRM_Organisations.Remove(this);
					}
					this._CRM_Address.Entity = value;
					if ((value != null))
					{
						value.CRM_Organisations.Add(this);
						this._CRM_AddressID = value.ID;
					}
					else
					{
						this._CRM_AddressID = default(int);
					}
					this.SendPropertyChanged("CRM_Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_OrganisationType_CRM_Organisation", Storage="_CRM_OrganisationType", ThisKey="CRM_OrganisationTypeID", OtherKey="ID", IsForeignKey=true)]
		public CRM_OrganisationType CRM_OrganisationType
		{
			get
			{
				return this._CRM_OrganisationType.Entity;
			}
			set
			{
				CRM_OrganisationType previousValue = this._CRM_OrganisationType.Entity;
				if (((previousValue != value) 
							|| (this._CRM_OrganisationType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_OrganisationType.Entity = null;
						previousValue.CRM_Organisations.Remove(this);
					}
					this._CRM_OrganisationType.Entity = value;
					if ((value != null))
					{
						value.CRM_Organisations.Add(this);
						this._CRM_OrganisationTypeID = value.ID;
					}
					else
					{
						this._CRM_OrganisationTypeID = default(int);
					}
					this.SendPropertyChanged("CRM_OrganisationType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_OrganisationSchools(CRM_OrganisationSchool entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Organisation = this;
		}
		
		private void detach_CRM_OrganisationSchools(CRM_OrganisationSchool entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Organisation = null;
		}
		
		private void attach_CRM_PersonOrganisations(CRM_PersonOrganisation entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Organisation = this;
		}
		
		private void detach_CRM_PersonOrganisations(CRM_PersonOrganisation entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Organisation = null;
		}
		
		private void Initialize()
		{
			this._CRM_OrganisationSchools = new EntitySet<CRM_OrganisationSchool>(new Action<CRM_OrganisationSchool>(this.attach_CRM_OrganisationSchools), new Action<CRM_OrganisationSchool>(this.detach_CRM_OrganisationSchools));
			this._CRM_PersonOrganisations = new EntitySet<CRM_PersonOrganisation>(new Action<CRM_PersonOrganisation>(this.attach_CRM_PersonOrganisations), new Action<CRM_PersonOrganisation>(this.detach_CRM_PersonOrganisations));
			this._CRM_Address = default(EntityRef<CRM_Address>);
			this._CRM_OrganisationType = default(EntityRef<CRM_OrganisationType>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_SystemAccessAdmin")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_SystemAccessAdmin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _AdminID;
		
		private System.Nullable<int> _CRM_SystemAccessID;
		
		private bool _IsAdd;
		
		private bool _IsRead;
		
		private bool _IsWrite;
		
		private bool _IsDelete;
		
		private string _BespokeURL;
		
		private string _BespokeName;
		
		private EntityRef<Admin> _Admin;
		
		private EntityRef<CRM_SystemAccess> _CRM_SystemAccess;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAdminIDChanging(int value);
    partial void OnAdminIDChanged();
    partial void OnCRM_SystemAccessIDChanging(System.Nullable<int> value);
    partial void OnCRM_SystemAccessIDChanged();
    partial void OnIsAddChanging(bool value);
    partial void OnIsAddChanged();
    partial void OnIsReadChanging(bool value);
    partial void OnIsReadChanged();
    partial void OnIsWriteChanging(bool value);
    partial void OnIsWriteChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    partial void OnBespokeURLChanging(string value);
    partial void OnBespokeURLChanged();
    partial void OnBespokeNameChanging(string value);
    partial void OnBespokeNameChanged();
    #endregion
		
		public CRM_SystemAccessAdmin()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._Admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_SystemAccessID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> CRM_SystemAccessID
		{
			get
			{
				return this._CRM_SystemAccessID;
			}
			set
			{
				if ((this._CRM_SystemAccessID != value))
				{
					if (this._CRM_SystemAccess.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_SystemAccessIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_SystemAccessID = value;
					this.SendPropertyChanged("CRM_SystemAccessID");
					this.OnCRM_SystemAccessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdd", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsAdd
		{
			get
			{
				return this._IsAdd;
			}
			set
			{
				if ((this._IsAdd != value))
				{
					this.OnIsAddChanging(value);
					this.SendPropertyChanging();
					this._IsAdd = value;
					this.SendPropertyChanged("IsAdd");
					this.OnIsAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRead", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsRead
		{
			get
			{
				return this._IsRead;
			}
			set
			{
				if ((this._IsRead != value))
				{
					this.OnIsReadChanging(value);
					this.SendPropertyChanging();
					this._IsRead = value;
					this.SendPropertyChanged("IsRead");
					this.OnIsReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWrite", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsWrite
		{
			get
			{
				return this._IsWrite;
			}
			set
			{
				if ((this._IsWrite != value))
				{
					this.OnIsWriteChanging(value);
					this.SendPropertyChanging();
					this._IsWrite = value;
					this.SendPropertyChanged("IsWrite");
					this.OnIsWriteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BespokeURL", DbType="VarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string BespokeURL
		{
			get
			{
				return this._BespokeURL;
			}
			set
			{
				if ((this._BespokeURL != value))
				{
					this.OnBespokeURLChanging(value);
					this.SendPropertyChanging();
					this._BespokeURL = value;
					this.SendPropertyChanged("BespokeURL");
					this.OnBespokeURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BespokeName", DbType="VarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string BespokeName
		{
			get
			{
				return this._BespokeName;
			}
			set
			{
				if ((this._BespokeName != value))
				{
					this.OnBespokeNameChanging(value);
					this.SendPropertyChanging();
					this._BespokeName = value;
					this.SendPropertyChanged("BespokeName");
					this.OnBespokeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_CRM_SystemAccessAdmin", Storage="_Admin", ThisKey="AdminID", OtherKey="ID", IsForeignKey=true)]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.CRM_SystemAccessAdmins.Remove(this);
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.CRM_SystemAccessAdmins.Add(this);
						this._AdminID = value.ID;
					}
					else
					{
						this._AdminID = default(int);
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_SystemAccess_CRM_SystemAccessAdmin", Storage="_CRM_SystemAccess", ThisKey="CRM_SystemAccessID", OtherKey="ID", IsForeignKey=true)]
		public CRM_SystemAccess CRM_SystemAccess
		{
			get
			{
				return this._CRM_SystemAccess.Entity;
			}
			set
			{
				CRM_SystemAccess previousValue = this._CRM_SystemAccess.Entity;
				if (((previousValue != value) 
							|| (this._CRM_SystemAccess.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_SystemAccess.Entity = null;
						previousValue.CRM_SystemAccessAdmins.Remove(this);
					}
					this._CRM_SystemAccess.Entity = value;
					if ((value != null))
					{
						value.CRM_SystemAccessAdmins.Add(this);
						this._CRM_SystemAccessID = value.ID;
					}
					else
					{
						this._CRM_SystemAccessID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CRM_SystemAccess");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Admin = default(EntityRef<Admin>);
			this._CRM_SystemAccess = default(EntityRef<CRM_SystemAccess>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_CalendarCPD")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_CalendarCPD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_CalendarID;
		
		private int _Attendees;
		
		private System.Nullable<int> _CRM_PackageID;
		
		private byte _Length;
		
		private System.Nullable<int> _CRM_OrganisationID;
		
		private System.Nullable<System.DateTime> _ConfirmationSent;
		
		private string _Reference;
		
		private string _ConfirmationInitials;
		
		private string _SchoolOrganisationReference;
		
		private EntityRef<CRM_Package> _CRM_Package;
		
		private EntityRef<CRM_Calendar> _CRM_Calendar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_CalendarIDChanging(int value);
    partial void OnCRM_CalendarIDChanged();
    partial void OnAttendeesChanging(int value);
    partial void OnAttendeesChanged();
    partial void OnCRM_PackageIDChanging(System.Nullable<int> value);
    partial void OnCRM_PackageIDChanged();
    partial void OnLengthChanging(byte value);
    partial void OnLengthChanged();
    partial void OnCRM_OrganisationIDChanging(System.Nullable<int> value);
    partial void OnCRM_OrganisationIDChanged();
    partial void OnConfirmationSentChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmationSentChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnConfirmationInitialsChanging(string value);
    partial void OnConfirmationInitialsChanged();
    partial void OnSchoolOrganisationReferenceChanging(string value);
    partial void OnSchoolOrganisationReferenceChanged();
    #endregion
		
		public CRM_CalendarCPD()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_CalendarID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_CalendarID
		{
			get
			{
				return this._CRM_CalendarID;
			}
			set
			{
				if ((this._CRM_CalendarID != value))
				{
					if (this._CRM_Calendar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_CalendarIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_CalendarID = value;
					this.SendPropertyChanged("CRM_CalendarID");
					this.OnCRM_CalendarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attendees", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Attendees
		{
			get
			{
				return this._Attendees;
			}
			set
			{
				if ((this._Attendees != value))
				{
					this.OnAttendeesChanging(value);
					this.SendPropertyChanging();
					this._Attendees = value;
					this.SendPropertyChanged("Attendees");
					this.OnAttendeesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_PackageID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> CRM_PackageID
		{
			get
			{
				return this._CRM_PackageID;
			}
			set
			{
				if ((this._CRM_PackageID != value))
				{
					if (this._CRM_Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_PackageIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_PackageID = value;
					this.SendPropertyChanged("CRM_PackageID");
					this.OnCRM_PackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="TinyInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public byte Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_OrganisationID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> CRM_OrganisationID
		{
			get
			{
				return this._CRM_OrganisationID;
			}
			set
			{
				if ((this._CRM_OrganisationID != value))
				{
					this.OnCRM_OrganisationIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_OrganisationID = value;
					this.SendPropertyChanged("CRM_OrganisationID");
					this.OnCRM_OrganisationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationSent", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> ConfirmationSent
		{
			get
			{
				return this._ConfirmationSent;
			}
			set
			{
				if ((this._ConfirmationSent != value))
				{
					this.OnConfirmationSentChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationSent = value;
					this.SendPropertyChanged("ConfirmationSent");
					this.OnConfirmationSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(22)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationInitials", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string ConfirmationInitials
		{
			get
			{
				return this._ConfirmationInitials;
			}
			set
			{
				if ((this._ConfirmationInitials != value))
				{
					this.OnConfirmationInitialsChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationInitials = value;
					this.SendPropertyChanged("ConfirmationInitials");
					this.OnConfirmationInitialsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolOrganisationReference", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string SchoolOrganisationReference
		{
			get
			{
				return this._SchoolOrganisationReference;
			}
			set
			{
				if ((this._SchoolOrganisationReference != value))
				{
					this.OnSchoolOrganisationReferenceChanging(value);
					this.SendPropertyChanging();
					this._SchoolOrganisationReference = value;
					this.SendPropertyChanged("SchoolOrganisationReference");
					this.OnSchoolOrganisationReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Package_CRM_CalendarCPD", Storage="_CRM_Package", ThisKey="CRM_PackageID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Package CRM_Package
		{
			get
			{
				return this._CRM_Package.Entity;
			}
			set
			{
				CRM_Package previousValue = this._CRM_Package.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Package.Entity = null;
						previousValue.CRM_CalendarCPDs.Remove(this);
					}
					this._CRM_Package.Entity = value;
					if ((value != null))
					{
						value.CRM_CalendarCPDs.Add(this);
						this._CRM_PackageID = value.ID;
					}
					else
					{
						this._CRM_PackageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CRM_Package");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Calendar_CRM_CalendarCPD", Storage="_CRM_Calendar", ThisKey="CRM_CalendarID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Calendar CRM_Calendar
		{
			get
			{
				return this._CRM_Calendar.Entity;
			}
			set
			{
				CRM_Calendar previousValue = this._CRM_Calendar.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Calendar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Calendar.Entity = null;
						previousValue.CRM_CalendarCPDs.Remove(this);
					}
					this._CRM_Calendar.Entity = value;
					if ((value != null))
					{
						value.CRM_CalendarCPDs.Add(this);
						this._CRM_CalendarID = value.ID;
					}
					else
					{
						this._CRM_CalendarID = default(int);
					}
					this.SendPropertyChanged("CRM_Calendar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CRM_Package = default(EntityRef<CRM_Package>);
			this._CRM_Calendar = default(EntityRef<CRM_Calendar>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_CalendarGroupBooking")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_CalendarGroupBooking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_CalendarID;
		
		private System.Nullable<int> _CRM_SchoolID;
		
		private System.Nullable<int> _CRM_PersonSchoolID;
		
		private string _SchoolOrgReference;
		
		private bool _IsOutreach;
		
		private string _Phone;
		
		private string _Email;
		
		private System.Nullable<int> _EventID;
		
		private System.Nullable<int> _OfferID;
		
		private System.Nullable<int> _CRM_ExhibitionID;
		
		private int _Pupils;
		
		private int _Adults;
		
		private string _Yeargroup;
		
		private bool _IsBookshopRequired;
		
		private bool _Within2HourSlot;
		
		private bool _IsPackedLunchSpace;
		
		private System.Nullable<int> _PackedLunchBookingID;
		
		private int _SpecialNeeds;
		
		private string _Details;
		
		private bool _ConfirmationSent;
		
		private string _Facilitator;
		
		private string _FacilitatorTwo;
		
		private string _FacilitatorThree;
		
		private string _Reference;
		
		private int _ActualChildren;
		
		private int _ActualAdults;
		
		private int _ActualTeachers;
		
		private string _ConfirmationInitials;
		
		private System.Nullable<System.DateTime> _ConfirmationDateSent;
		
		private string _OrganisationName;
		
		private EntityRef<CRM_Exhibition> _CRM_Exhibition;
		
		private EntityRef<CRM_Offer> _CRM_Offer;
		
		private EntityRef<CRM_PersonSchool> _CRM_PersonSchool;
		
		private EntityRef<CRM_School> _CRM_School;
		
		private EntityRef<Event> _Event;
		
		private EntityRef<CRM_Calendar> _CRM_Calendar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_CalendarIDChanging(int value);
    partial void OnCRM_CalendarIDChanged();
    partial void OnCRM_SchoolIDChanging(System.Nullable<int> value);
    partial void OnCRM_SchoolIDChanged();
    partial void OnCRM_PersonSchoolIDChanging(System.Nullable<int> value);
    partial void OnCRM_PersonSchoolIDChanged();
    partial void OnSchoolOrgReferenceChanging(string value);
    partial void OnSchoolOrgReferenceChanged();
    partial void OnIsOutreachChanging(bool value);
    partial void OnIsOutreachChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEventIDChanging(System.Nullable<int> value);
    partial void OnEventIDChanged();
    partial void OnOfferIDChanging(System.Nullable<int> value);
    partial void OnOfferIDChanged();
    partial void OnCRM_ExhibitionIDChanging(System.Nullable<int> value);
    partial void OnCRM_ExhibitionIDChanged();
    partial void OnPupilsChanging(int value);
    partial void OnPupilsChanged();
    partial void OnAdultsChanging(int value);
    partial void OnAdultsChanged();
    partial void OnYeargroupChanging(string value);
    partial void OnYeargroupChanged();
    partial void OnIsBookshopRequiredChanging(bool value);
    partial void OnIsBookshopRequiredChanged();
    partial void OnWithin2HourSlotChanging(bool value);
    partial void OnWithin2HourSlotChanged();
    partial void OnIsPackedLunchSpaceChanging(bool value);
    partial void OnIsPackedLunchSpaceChanged();
    partial void OnPackedLunchBookingIDChanging(System.Nullable<int> value);
    partial void OnPackedLunchBookingIDChanged();
    partial void OnSpecialNeedsChanging(int value);
    partial void OnSpecialNeedsChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnConfirmationSentChanging(bool value);
    partial void OnConfirmationSentChanged();
    partial void OnFacilitatorChanging(string value);
    partial void OnFacilitatorChanged();
    partial void OnFacilitatorTwoChanging(string value);
    partial void OnFacilitatorTwoChanged();
    partial void OnFacilitatorThreeChanging(string value);
    partial void OnFacilitatorThreeChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnActualChildrenChanging(int value);
    partial void OnActualChildrenChanged();
    partial void OnActualAdultsChanging(int value);
    partial void OnActualAdultsChanged();
    partial void OnActualTeachersChanging(int value);
    partial void OnActualTeachersChanged();
    partial void OnConfirmationInitialsChanging(string value);
    partial void OnConfirmationInitialsChanged();
    partial void OnConfirmationDateSentChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmationDateSentChanged();
    partial void OnOrganisationNameChanging(string value);
    partial void OnOrganisationNameChanged();
    #endregion
		
		public CRM_CalendarGroupBooking()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_CalendarID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_CalendarID
		{
			get
			{
				return this._CRM_CalendarID;
			}
			set
			{
				if ((this._CRM_CalendarID != value))
				{
					if (this._CRM_Calendar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_CalendarIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_CalendarID = value;
					this.SendPropertyChanged("CRM_CalendarID");
					this.OnCRM_CalendarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_SchoolID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> CRM_SchoolID
		{
			get
			{
				return this._CRM_SchoolID;
			}
			set
			{
				if ((this._CRM_SchoolID != value))
				{
					if (this._CRM_School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_SchoolIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_SchoolID = value;
					this.SendPropertyChanged("CRM_SchoolID");
					this.OnCRM_SchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_PersonSchoolID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> CRM_PersonSchoolID
		{
			get
			{
				return this._CRM_PersonSchoolID;
			}
			set
			{
				if ((this._CRM_PersonSchoolID != value))
				{
					if (this._CRM_PersonSchool.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_PersonSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_PersonSchoolID = value;
					this.SendPropertyChanged("CRM_PersonSchoolID");
					this.OnCRM_PersonSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolOrgReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string SchoolOrgReference
		{
			get
			{
				return this._SchoolOrgReference;
			}
			set
			{
				if ((this._SchoolOrgReference != value))
				{
					this.OnSchoolOrgReferenceChanging(value);
					this.SendPropertyChanging();
					this._SchoolOrgReference = value;
					this.SendPropertyChanged("SchoolOrgReference");
					this.OnSchoolOrgReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOutreach", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsOutreach
		{
			get
			{
				return this._IsOutreach;
			}
			set
			{
				if ((this._IsOutreach != value))
				{
					this.OnIsOutreachChanging(value);
					this.SendPropertyChanging();
					this._IsOutreach = value;
					this.SendPropertyChanged("IsOutreach");
					this.OnIsOutreachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					if (this._Event.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> OfferID
		{
			get
			{
				return this._OfferID;
			}
			set
			{
				if ((this._OfferID != value))
				{
					if (this._CRM_Offer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfferIDChanging(value);
					this.SendPropertyChanging();
					this._OfferID = value;
					this.SendPropertyChanged("OfferID");
					this.OnOfferIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_ExhibitionID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> CRM_ExhibitionID
		{
			get
			{
				return this._CRM_ExhibitionID;
			}
			set
			{
				if ((this._CRM_ExhibitionID != value))
				{
					if (this._CRM_Exhibition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_ExhibitionIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_ExhibitionID = value;
					this.SendPropertyChanged("CRM_ExhibitionID");
					this.OnCRM_ExhibitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pupils", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public int Pupils
		{
			get
			{
				return this._Pupils;
			}
			set
			{
				if ((this._Pupils != value))
				{
					this.OnPupilsChanging(value);
					this.SendPropertyChanging();
					this._Pupils = value;
					this.SendPropertyChanged("Pupils");
					this.OnPupilsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adults", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public int Adults
		{
			get
			{
				return this._Adults;
			}
			set
			{
				if ((this._Adults != value))
				{
					this.OnAdultsChanging(value);
					this.SendPropertyChanging();
					this._Adults = value;
					this.SendPropertyChanged("Adults");
					this.OnAdultsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Yeargroup", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string Yeargroup
		{
			get
			{
				return this._Yeargroup;
			}
			set
			{
				if ((this._Yeargroup != value))
				{
					this.OnYeargroupChanging(value);
					this.SendPropertyChanging();
					this._Yeargroup = value;
					this.SendPropertyChanged("Yeargroup");
					this.OnYeargroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBookshopRequired", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public bool IsBookshopRequired
		{
			get
			{
				return this._IsBookshopRequired;
			}
			set
			{
				if ((this._IsBookshopRequired != value))
				{
					this.OnIsBookshopRequiredChanging(value);
					this.SendPropertyChanging();
					this._IsBookshopRequired = value;
					this.SendPropertyChanged("IsBookshopRequired");
					this.OnIsBookshopRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Within2HourSlot", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public bool Within2HourSlot
		{
			get
			{
				return this._Within2HourSlot;
			}
			set
			{
				if ((this._Within2HourSlot != value))
				{
					this.OnWithin2HourSlotChanging(value);
					this.SendPropertyChanging();
					this._Within2HourSlot = value;
					this.SendPropertyChanged("Within2HourSlot");
					this.OnWithin2HourSlotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPackedLunchSpace", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public bool IsPackedLunchSpace
		{
			get
			{
				return this._IsPackedLunchSpace;
			}
			set
			{
				if ((this._IsPackedLunchSpace != value))
				{
					this.OnIsPackedLunchSpaceChanging(value);
					this.SendPropertyChanging();
					this._IsPackedLunchSpace = value;
					this.SendPropertyChanged("IsPackedLunchSpace");
					this.OnIsPackedLunchSpaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackedLunchBookingID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<int> PackedLunchBookingID
		{
			get
			{
				return this._PackedLunchBookingID;
			}
			set
			{
				if ((this._PackedLunchBookingID != value))
				{
					this.OnPackedLunchBookingIDChanging(value);
					this.SendPropertyChanging();
					this._PackedLunchBookingID = value;
					this.SendPropertyChanged("PackedLunchBookingID");
					this.OnPackedLunchBookingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialNeeds", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public int SpecialNeeds
		{
			get
			{
				return this._SpecialNeeds;
			}
			set
			{
				if ((this._SpecialNeeds != value))
				{
					this.OnSpecialNeedsChanging(value);
					this.SendPropertyChanging();
					this._SpecialNeeds = value;
					this.SendPropertyChanged("SpecialNeeds");
					this.OnSpecialNeedsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationSent", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public bool ConfirmationSent
		{
			get
			{
				return this._ConfirmationSent;
			}
			set
			{
				if ((this._ConfirmationSent != value))
				{
					this.OnConfirmationSentChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationSent = value;
					this.SendPropertyChanged("ConfirmationSent");
					this.OnConfirmationSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facilitator", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public string Facilitator
		{
			get
			{
				return this._Facilitator;
			}
			set
			{
				if ((this._Facilitator != value))
				{
					this.OnFacilitatorChanging(value);
					this.SendPropertyChanging();
					this._Facilitator = value;
					this.SendPropertyChanged("Facilitator");
					this.OnFacilitatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilitatorTwo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public string FacilitatorTwo
		{
			get
			{
				return this._FacilitatorTwo;
			}
			set
			{
				if ((this._FacilitatorTwo != value))
				{
					this.OnFacilitatorTwoChanging(value);
					this.SendPropertyChanging();
					this._FacilitatorTwo = value;
					this.SendPropertyChanged("FacilitatorTwo");
					this.OnFacilitatorTwoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilitatorThree", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public string FacilitatorThree
		{
			get
			{
				return this._FacilitatorThree;
			}
			set
			{
				if ((this._FacilitatorThree != value))
				{
					this.OnFacilitatorThreeChanging(value);
					this.SendPropertyChanging();
					this._FacilitatorThree = value;
					this.SendPropertyChanged("FacilitatorThree");
					this.OnFacilitatorThreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(23)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualChildren", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public int ActualChildren
		{
			get
			{
				return this._ActualChildren;
			}
			set
			{
				if ((this._ActualChildren != value))
				{
					this.OnActualChildrenChanging(value);
					this.SendPropertyChanging();
					this._ActualChildren = value;
					this.SendPropertyChanged("ActualChildren");
					this.OnActualChildrenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualAdults", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public int ActualAdults
		{
			get
			{
				return this._ActualAdults;
			}
			set
			{
				if ((this._ActualAdults != value))
				{
					this.OnActualAdultsChanging(value);
					this.SendPropertyChanging();
					this._ActualAdults = value;
					this.SendPropertyChanged("ActualAdults");
					this.OnActualAdultsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualTeachers", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public int ActualTeachers
		{
			get
			{
				return this._ActualTeachers;
			}
			set
			{
				if ((this._ActualTeachers != value))
				{
					this.OnActualTeachersChanging(value);
					this.SendPropertyChanging();
					this._ActualTeachers = value;
					this.SendPropertyChanged("ActualTeachers");
					this.OnActualTeachersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationInitials", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public string ConfirmationInitials
		{
			get
			{
				return this._ConfirmationInitials;
			}
			set
			{
				if ((this._ConfirmationInitials != value))
				{
					this.OnConfirmationInitialsChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationInitials = value;
					this.SendPropertyChanged("ConfirmationInitials");
					this.OnConfirmationInitialsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationDateSent", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30)]
		public System.Nullable<System.DateTime> ConfirmationDateSent
		{
			get
			{
				return this._ConfirmationDateSent;
			}
			set
			{
				if ((this._ConfirmationDateSent != value))
				{
					this.OnConfirmationDateSentChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationDateSent = value;
					this.SendPropertyChanged("ConfirmationDateSent");
					this.OnConfirmationDateSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31)]
		public string OrganisationName
		{
			get
			{
				return this._OrganisationName;
			}
			set
			{
				if ((this._OrganisationName != value))
				{
					this.OnOrganisationNameChanging(value);
					this.SendPropertyChanging();
					this._OrganisationName = value;
					this.SendPropertyChanged("OrganisationName");
					this.OnOrganisationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Exhibition_CRM_CalendarGroupBooking", Storage="_CRM_Exhibition", ThisKey="CRM_ExhibitionID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Exhibition CRM_Exhibition
		{
			get
			{
				return this._CRM_Exhibition.Entity;
			}
			set
			{
				CRM_Exhibition previousValue = this._CRM_Exhibition.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Exhibition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Exhibition.Entity = null;
						previousValue.CRM_CalendarGroupBookings.Remove(this);
					}
					this._CRM_Exhibition.Entity = value;
					if ((value != null))
					{
						value.CRM_CalendarGroupBookings.Add(this);
						this._CRM_ExhibitionID = value.ID;
					}
					else
					{
						this._CRM_ExhibitionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CRM_Exhibition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Offer_CRM_CalendarGroupBooking", Storage="_CRM_Offer", ThisKey="OfferID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Offer CRM_Offer
		{
			get
			{
				return this._CRM_Offer.Entity;
			}
			set
			{
				CRM_Offer previousValue = this._CRM_Offer.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Offer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Offer.Entity = null;
						previousValue.CRM_CalendarGroupBookings.Remove(this);
					}
					this._CRM_Offer.Entity = value;
					if ((value != null))
					{
						value.CRM_CalendarGroupBookings.Add(this);
						this._OfferID = value.ID;
					}
					else
					{
						this._OfferID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CRM_Offer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_PersonSchool_CRM_CalendarGroupBooking", Storage="_CRM_PersonSchool", ThisKey="CRM_PersonSchoolID", OtherKey="ID", IsForeignKey=true)]
		public CRM_PersonSchool CRM_PersonSchool
		{
			get
			{
				return this._CRM_PersonSchool.Entity;
			}
			set
			{
				CRM_PersonSchool previousValue = this._CRM_PersonSchool.Entity;
				if (((previousValue != value) 
							|| (this._CRM_PersonSchool.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_PersonSchool.Entity = null;
						previousValue.CRM_CalendarGroupBookings.Remove(this);
					}
					this._CRM_PersonSchool.Entity = value;
					if ((value != null))
					{
						value.CRM_CalendarGroupBookings.Add(this);
						this._CRM_PersonSchoolID = value.ID;
					}
					else
					{
						this._CRM_PersonSchoolID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CRM_PersonSchool");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_School_CRM_CalendarGroupBooking", Storage="_CRM_School", ThisKey="CRM_SchoolID", OtherKey="ID", IsForeignKey=true)]
		public CRM_School CRM_School
		{
			get
			{
				return this._CRM_School.Entity;
			}
			set
			{
				CRM_School previousValue = this._CRM_School.Entity;
				if (((previousValue != value) 
							|| (this._CRM_School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_School.Entity = null;
						previousValue.CRM_CalendarGroupBookings.Remove(this);
					}
					this._CRM_School.Entity = value;
					if ((value != null))
					{
						value.CRM_CalendarGroupBookings.Add(this);
						this._CRM_SchoolID = value.ID;
					}
					else
					{
						this._CRM_SchoolID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CRM_School");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_CRM_CalendarGroupBooking", Storage="_Event", ThisKey="EventID", OtherKey="ID", IsForeignKey=true)]
		public Event Event
		{
			get
			{
				return this._Event.Entity;
			}
			set
			{
				Event previousValue = this._Event.Entity;
				if (((previousValue != value) 
							|| (this._Event.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event.Entity = null;
						previousValue.CRM_CalendarGroupBookings.Remove(this);
					}
					this._Event.Entity = value;
					if ((value != null))
					{
						value.CRM_CalendarGroupBookings.Add(this);
						this._EventID = value.ID;
					}
					else
					{
						this._EventID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Event");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Calendar_CRM_CalendarGroupBooking", Storage="_CRM_Calendar", ThisKey="CRM_CalendarID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Calendar CRM_Calendar
		{
			get
			{
				return this._CRM_Calendar.Entity;
			}
			set
			{
				CRM_Calendar previousValue = this._CRM_Calendar.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Calendar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Calendar.Entity = null;
						previousValue.CRM_CalendarGroupBookings.Remove(this);
					}
					this._CRM_Calendar.Entity = value;
					if ((value != null))
					{
						value.CRM_CalendarGroupBookings.Add(this);
						this._CRM_CalendarID = value.ID;
					}
					else
					{
						this._CRM_CalendarID = default(int);
					}
					this.SendPropertyChanged("CRM_Calendar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CRM_Exhibition = default(EntityRef<CRM_Exhibition>);
			this._CRM_Offer = default(EntityRef<CRM_Offer>);
			this._CRM_PersonSchool = default(EntityRef<CRM_PersonSchool>);
			this._CRM_School = default(EntityRef<CRM_School>);
			this._Event = default(EntityRef<Event>);
			this._CRM_Calendar = default(EntityRef<CRM_Calendar>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_CommunicationLink")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_CommunicationLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_CommunicationID;
		
		private string _TargetReference;
		
		private EntityRef<CRM_Communication> _CRM_Communication;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_CommunicationIDChanging(int value);
    partial void OnCRM_CommunicationIDChanged();
    partial void OnTargetReferenceChanging(string value);
    partial void OnTargetReferenceChanged();
    #endregion
		
		public CRM_CommunicationLink()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_CommunicationID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_CommunicationID
		{
			get
			{
				return this._CRM_CommunicationID;
			}
			set
			{
				if ((this._CRM_CommunicationID != value))
				{
					if (this._CRM_Communication.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_CommunicationIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_CommunicationID = value;
					this.SendPropertyChanged("CRM_CommunicationID");
					this.OnCRM_CommunicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetReference", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string TargetReference
		{
			get
			{
				return this._TargetReference;
			}
			set
			{
				if ((this._TargetReference != value))
				{
					this.OnTargetReferenceChanging(value);
					this.SendPropertyChanging();
					this._TargetReference = value;
					this.SendPropertyChanged("TargetReference");
					this.OnTargetReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Communication_CRM_CommunicationLink", Storage="_CRM_Communication", ThisKey="CRM_CommunicationID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Communication CRM_Communication
		{
			get
			{
				return this._CRM_Communication.Entity;
			}
			set
			{
				CRM_Communication previousValue = this._CRM_Communication.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Communication.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Communication.Entity = null;
						previousValue.CRM_CommunicationLinks.Remove(this);
					}
					this._CRM_Communication.Entity = value;
					if ((value != null))
					{
						value.CRM_CommunicationLinks.Add(this);
						this._CRM_CommunicationID = value.ID;
					}
					else
					{
						this._CRM_CommunicationID = default(int);
					}
					this.SendPropertyChanged("CRM_Communication");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CRM_Communication = default(EntityRef<CRM_Communication>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Communication")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_Communication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _AdminID;
		
		private string _TargetReference;
		
		private System.DateTime _Timestamp;
		
		private System.Data.Linq.Binary _FileStore;
		
		private System.Data.Linq.Binary _DataStore;
		
		private string _IncomingFileType;
		
		private byte _MailType;
		
		private EntitySet<CRM_CommunicationLink> _CRM_CommunicationLinks;
		
		private EntityRef<Admin> _Admin;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAdminIDChanging(int value);
    partial void OnAdminIDChanged();
    partial void OnTargetReferenceChanging(string value);
    partial void OnTargetReferenceChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    partial void OnFileStoreChanging(System.Data.Linq.Binary value);
    partial void OnFileStoreChanged();
    partial void OnDataStoreChanging(System.Data.Linq.Binary value);
    partial void OnDataStoreChanged();
    partial void OnIncomingFileTypeChanging(string value);
    partial void OnIncomingFileTypeChanged();
    partial void OnMailTypeChanging(byte value);
    partial void OnMailTypeChanged();
    #endregion
		
		public CRM_Communication()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._Admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetReference", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string TargetReference
		{
			get
			{
				return this._TargetReference;
			}
			set
			{
				if ((this._TargetReference != value))
				{
					this.OnTargetReferenceChanging(value);
					this.SendPropertyChanging();
					this._TargetReference = value;
					this.SendPropertyChanged("TargetReference");
					this.OnTargetReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileStore", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Data.Linq.Binary FileStore
		{
			get
			{
				return this._FileStore;
			}
			set
			{
				if ((this._FileStore != value))
				{
					this.OnFileStoreChanging(value);
					this.SendPropertyChanging();
					this._FileStore = value;
					this.SendPropertyChanged("FileStore");
					this.OnFileStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataStore", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Data.Linq.Binary DataStore
		{
			get
			{
				return this._DataStore;
			}
			set
			{
				if ((this._DataStore != value))
				{
					this.OnDataStoreChanging(value);
					this.SendPropertyChanging();
					this._DataStore = value;
					this.SendPropertyChanged("DataStore");
					this.OnDataStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncomingFileType", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string IncomingFileType
		{
			get
			{
				return this._IncomingFileType;
			}
			set
			{
				if ((this._IncomingFileType != value))
				{
					this.OnIncomingFileTypeChanging(value);
					this.SendPropertyChanging();
					this._IncomingFileType = value;
					this.SendPropertyChanged("IncomingFileType");
					this.OnIncomingFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailType", DbType="TinyInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public byte MailType
		{
			get
			{
				return this._MailType;
			}
			set
			{
				if ((this._MailType != value))
				{
					this.OnMailTypeChanging(value);
					this.SendPropertyChanging();
					this._MailType = value;
					this.SendPropertyChanged("MailType");
					this.OnMailTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Communication_CRM_CommunicationLink", Storage="_CRM_CommunicationLinks", ThisKey="ID", OtherKey="CRM_CommunicationID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<CRM_CommunicationLink> CRM_CommunicationLinks
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_CommunicationLinks.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_CommunicationLinks;
			}
			set
			{
				this._CRM_CommunicationLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_CRM_Communication", Storage="_Admin", ThisKey="AdminID", OtherKey="ID", IsForeignKey=true)]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.CRM_Communications.Remove(this);
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.CRM_Communications.Add(this);
						this._AdminID = value.ID;
					}
					else
					{
						this._AdminID = default(int);
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_CommunicationLinks(CRM_CommunicationLink entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Communication = this;
		}
		
		private void detach_CRM_CommunicationLinks(CRM_CommunicationLink entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Communication = null;
		}
		
		private void Initialize()
		{
			this._CRM_CommunicationLinks = new EntitySet<CRM_CommunicationLink>(new Action<CRM_CommunicationLink>(this.attach_CRM_CommunicationLinks), new Action<CRM_CommunicationLink>(this.detach_CRM_CommunicationLinks));
			this._Admin = default(EntityRef<Admin>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_FundraisingGiftProfile")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_FundraisingGiftProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_PersonID;
		
		private string _ProfileName;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private int _DayOfMonth;
		
		private int _EveryXMonth;
		
		private bool _IsActive;
		
		private decimal _AmountToCharge;
		
		private bool _IsArchived;
		
		private System.DateTime _NextPaymentDate;
		
		private string _PaymentReference;
		
		private string _Reference;
		
		private EntitySet<CRM_FundraisingGiftProfileLog> _CRM_FundraisingGiftProfileLogs;
		
		private EntityRef<CRM_Person> _CRM_Person;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_PersonIDChanging(int value);
    partial void OnCRM_PersonIDChanged();
    partial void OnProfileNameChanging(string value);
    partial void OnProfileNameChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnDayOfMonthChanging(int value);
    partial void OnDayOfMonthChanged();
    partial void OnEveryXMonthChanging(int value);
    partial void OnEveryXMonthChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnAmountToChargeChanging(decimal value);
    partial void OnAmountToChargeChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    partial void OnNextPaymentDateChanging(System.DateTime value);
    partial void OnNextPaymentDateChanged();
    partial void OnPaymentReferenceChanging(string value);
    partial void OnPaymentReferenceChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    #endregion
		
		public CRM_FundraisingGiftProfile()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_PersonID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_PersonID
		{
			get
			{
				return this._CRM_PersonID;
			}
			set
			{
				if ((this._CRM_PersonID != value))
				{
					if (this._CRM_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_PersonIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_PersonID = value;
					this.SendPropertyChanged("CRM_PersonID");
					this.OnCRM_PersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ProfileName
		{
			get
			{
				return this._ProfileName;
			}
			set
			{
				if ((this._ProfileName != value))
				{
					this.OnProfileNameChanging(value);
					this.SendPropertyChanging();
					this._ProfileName = value;
					this.SendPropertyChanged("ProfileName");
					this.OnProfileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayOfMonth", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int DayOfMonth
		{
			get
			{
				return this._DayOfMonth;
			}
			set
			{
				if ((this._DayOfMonth != value))
				{
					this.OnDayOfMonthChanging(value);
					this.SendPropertyChanging();
					this._DayOfMonth = value;
					this.SendPropertyChanged("DayOfMonth");
					this.OnDayOfMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EveryXMonth", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int EveryXMonth
		{
			get
			{
				return this._EveryXMonth;
			}
			set
			{
				if ((this._EveryXMonth != value))
				{
					this.OnEveryXMonthChanging(value);
					this.SendPropertyChanging();
					this._EveryXMonth = value;
					this.SendPropertyChanged("EveryXMonth");
					this.OnEveryXMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountToCharge", DbType="Money NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public decimal AmountToCharge
		{
			get
			{
				return this._AmountToCharge;
			}
			set
			{
				if ((this._AmountToCharge != value))
				{
					this.OnAmountToChargeChanging(value);
					this.SendPropertyChanging();
					this._AmountToCharge = value;
					this.SendPropertyChanged("AmountToCharge");
					this.OnAmountToChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextPaymentDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.DateTime NextPaymentDate
		{
			get
			{
				return this._NextPaymentDate;
			}
			set
			{
				if ((this._NextPaymentDate != value))
				{
					this.OnNextPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._NextPaymentDate = value;
					this.SendPropertyChanged("NextPaymentDate");
					this.OnNextPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentReference", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string PaymentReference
		{
			get
			{
				return this._PaymentReference;
			}
			set
			{
				if ((this._PaymentReference != value))
				{
					this.OnPaymentReferenceChanging(value);
					this.SendPropertyChanging();
					this._PaymentReference = value;
					this.SendPropertyChanged("PaymentReference");
					this.OnPaymentReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(13)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_FundraisingGiftProfile_CRM_FundraisingGiftProfileLog", Storage="_CRM_FundraisingGiftProfileLogs", ThisKey="ID", OtherKey="CRM_FundraisingGiftProfileID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<CRM_FundraisingGiftProfileLog> CRM_FundraisingGiftProfileLogs
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_FundraisingGiftProfileLogs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_FundraisingGiftProfileLogs;
			}
			set
			{
				this._CRM_FundraisingGiftProfileLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Person_CRM_FundraisingGiftProfile", Storage="_CRM_Person", ThisKey="CRM_PersonID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Person CRM_Person
		{
			get
			{
				return this._CRM_Person.Entity;
			}
			set
			{
				CRM_Person previousValue = this._CRM_Person.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Person.Entity = null;
						previousValue.CRM_FundraisingGiftProfiles.Remove(this);
					}
					this._CRM_Person.Entity = value;
					if ((value != null))
					{
						value.CRM_FundraisingGiftProfiles.Add(this);
						this._CRM_PersonID = value.ID;
					}
					else
					{
						this._CRM_PersonID = default(int);
					}
					this.SendPropertyChanged("CRM_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_FundraisingGiftProfileLogs(CRM_FundraisingGiftProfileLog entity)
		{
			this.SendPropertyChanging();
			entity.CRM_FundraisingGiftProfile = this;
		}
		
		private void detach_CRM_FundraisingGiftProfileLogs(CRM_FundraisingGiftProfileLog entity)
		{
			this.SendPropertyChanging();
			entity.CRM_FundraisingGiftProfile = null;
		}
		
		private void Initialize()
		{
			this._CRM_FundraisingGiftProfileLogs = new EntitySet<CRM_FundraisingGiftProfileLog>(new Action<CRM_FundraisingGiftProfileLog>(this.attach_CRM_FundraisingGiftProfileLogs), new Action<CRM_FundraisingGiftProfileLog>(this.detach_CRM_FundraisingGiftProfileLogs));
			this._CRM_Person = default(EntityRef<CRM_Person>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_FundraisingGiftProfileLog")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_FundraisingGiftProfileLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_FundraisingGiftProfileID;
		
		private decimal _AmountCharged;
		
		private bool _IsConfirmed;
		
		private System.DateTime _TimestampCreated;
		
		private System.Nullable<System.DateTime> _TimestampConfirmed;
		
		private string _PaymentReference;
		
		private EntityRef<CRM_FundraisingGiftProfile> _CRM_FundraisingGiftProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_FundraisingGiftProfileIDChanging(int value);
    partial void OnCRM_FundraisingGiftProfileIDChanged();
    partial void OnAmountChargedChanging(decimal value);
    partial void OnAmountChargedChanged();
    partial void OnIsConfirmedChanging(bool value);
    partial void OnIsConfirmedChanged();
    partial void OnTimestampCreatedChanging(System.DateTime value);
    partial void OnTimestampCreatedChanged();
    partial void OnTimestampConfirmedChanging(System.Nullable<System.DateTime> value);
    partial void OnTimestampConfirmedChanged();
    partial void OnPaymentReferenceChanging(string value);
    partial void OnPaymentReferenceChanged();
    #endregion
		
		public CRM_FundraisingGiftProfileLog()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_FundraisingGiftProfileID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_FundraisingGiftProfileID
		{
			get
			{
				return this._CRM_FundraisingGiftProfileID;
			}
			set
			{
				if ((this._CRM_FundraisingGiftProfileID != value))
				{
					if (this._CRM_FundraisingGiftProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_FundraisingGiftProfileIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_FundraisingGiftProfileID = value;
					this.SendPropertyChanged("CRM_FundraisingGiftProfileID");
					this.OnCRM_FundraisingGiftProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountCharged", DbType="Money NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public decimal AmountCharged
		{
			get
			{
				return this._AmountCharged;
			}
			set
			{
				if ((this._AmountCharged != value))
				{
					this.OnAmountChargedChanging(value);
					this.SendPropertyChanging();
					this._AmountCharged = value;
					this.SendPropertyChanged("AmountCharged");
					this.OnAmountChargedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConfirmed", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsConfirmed
		{
			get
			{
				return this._IsConfirmed;
			}
			set
			{
				if ((this._IsConfirmed != value))
				{
					this.OnIsConfirmedChanging(value);
					this.SendPropertyChanging();
					this._IsConfirmed = value;
					this.SendPropertyChanged("IsConfirmed");
					this.OnIsConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimestampCreated", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime TimestampCreated
		{
			get
			{
				return this._TimestampCreated;
			}
			set
			{
				if ((this._TimestampCreated != value))
				{
					this.OnTimestampCreatedChanging(value);
					this.SendPropertyChanging();
					this._TimestampCreated = value;
					this.SendPropertyChanged("TimestampCreated");
					this.OnTimestampCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimestampConfirmed", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> TimestampConfirmed
		{
			get
			{
				return this._TimestampConfirmed;
			}
			set
			{
				if ((this._TimestampConfirmed != value))
				{
					this.OnTimestampConfirmedChanging(value);
					this.SendPropertyChanging();
					this._TimestampConfirmed = value;
					this.SendPropertyChanged("TimestampConfirmed");
					this.OnTimestampConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentReference", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string PaymentReference
		{
			get
			{
				return this._PaymentReference;
			}
			set
			{
				if ((this._PaymentReference != value))
				{
					this.OnPaymentReferenceChanging(value);
					this.SendPropertyChanging();
					this._PaymentReference = value;
					this.SendPropertyChanged("PaymentReference");
					this.OnPaymentReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_FundraisingGiftProfile_CRM_FundraisingGiftProfileLog", Storage="_CRM_FundraisingGiftProfile", ThisKey="CRM_FundraisingGiftProfileID", OtherKey="ID", IsForeignKey=true)]
		public CRM_FundraisingGiftProfile CRM_FundraisingGiftProfile
		{
			get
			{
				return this._CRM_FundraisingGiftProfile.Entity;
			}
			set
			{
				CRM_FundraisingGiftProfile previousValue = this._CRM_FundraisingGiftProfile.Entity;
				if (((previousValue != value) 
							|| (this._CRM_FundraisingGiftProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_FundraisingGiftProfile.Entity = null;
						previousValue.CRM_FundraisingGiftProfileLogs.Remove(this);
					}
					this._CRM_FundraisingGiftProfile.Entity = value;
					if ((value != null))
					{
						value.CRM_FundraisingGiftProfileLogs.Add(this);
						this._CRM_FundraisingGiftProfileID = value.ID;
					}
					else
					{
						this._CRM_FundraisingGiftProfileID = default(int);
					}
					this.SendPropertyChanged("CRM_FundraisingGiftProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CRM_FundraisingGiftProfile = default(EntityRef<CRM_FundraisingGiftProfile>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_CalendarOutreach")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_CalendarOutreach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_CalendarID;
		
		private string _SchoolOrgReference;
		
		private System.Nullable<int> _CRM_OfferID;
		
		private int _NoPupils;
		
		private int _NoAdults;
		
		private string _Yeargroup;
		
		private string _WorkshopTimes;
		
		private string _DeliveryAgreements;
		
		private int _SENNoChildren;
		
		private string _SENDetails;
		
		private string _Facilitator;
		
		private int _ActualChildren;
		
		private int _ActualAdults;
		
		private int _ActualTeachers;
		
		private bool _ConfirmationSent;
		
		private System.Nullable<System.DateTime> _ConfirmationSentDate;
		
		private string _ConfirmationInitials;
		
		private string _OrganisationName;
		
		private string _Reference;
		
		private EntityRef<CRM_Offer> _CRM_Offer;
		
		private EntityRef<CRM_Calendar> _CRM_Calendar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_CalendarIDChanging(int value);
    partial void OnCRM_CalendarIDChanged();
    partial void OnSchoolOrgReferenceChanging(string value);
    partial void OnSchoolOrgReferenceChanged();
    partial void OnCRM_OfferIDChanging(System.Nullable<int> value);
    partial void OnCRM_OfferIDChanged();
    partial void OnNoPupilsChanging(int value);
    partial void OnNoPupilsChanged();
    partial void OnNoAdultsChanging(int value);
    partial void OnNoAdultsChanged();
    partial void OnYeargroupChanging(string value);
    partial void OnYeargroupChanged();
    partial void OnWorkshopTimesChanging(string value);
    partial void OnWorkshopTimesChanged();
    partial void OnDeliveryAgreementsChanging(string value);
    partial void OnDeliveryAgreementsChanged();
    partial void OnSENNoChildrenChanging(int value);
    partial void OnSENNoChildrenChanged();
    partial void OnSENDetailsChanging(string value);
    partial void OnSENDetailsChanged();
    partial void OnFacilitatorChanging(string value);
    partial void OnFacilitatorChanged();
    partial void OnActualChildrenChanging(int value);
    partial void OnActualChildrenChanged();
    partial void OnActualAdultsChanging(int value);
    partial void OnActualAdultsChanged();
    partial void OnActualTeachersChanging(int value);
    partial void OnActualTeachersChanged();
    partial void OnConfirmationSentChanging(bool value);
    partial void OnConfirmationSentChanged();
    partial void OnConfirmationSentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmationSentDateChanged();
    partial void OnConfirmationInitialsChanging(string value);
    partial void OnConfirmationInitialsChanged();
    partial void OnOrganisationNameChanging(string value);
    partial void OnOrganisationNameChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    #endregion
		
		public CRM_CalendarOutreach()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_CalendarID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_CalendarID
		{
			get
			{
				return this._CRM_CalendarID;
			}
			set
			{
				if ((this._CRM_CalendarID != value))
				{
					if (this._CRM_Calendar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_CalendarIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_CalendarID = value;
					this.SendPropertyChanged("CRM_CalendarID");
					this.OnCRM_CalendarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolOrgReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string SchoolOrgReference
		{
			get
			{
				return this._SchoolOrgReference;
			}
			set
			{
				if ((this._SchoolOrgReference != value))
				{
					this.OnSchoolOrgReferenceChanging(value);
					this.SendPropertyChanging();
					this._SchoolOrgReference = value;
					this.SendPropertyChanged("SchoolOrgReference");
					this.OnSchoolOrgReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_OfferID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> CRM_OfferID
		{
			get
			{
				return this._CRM_OfferID;
			}
			set
			{
				if ((this._CRM_OfferID != value))
				{
					if (this._CRM_Offer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_OfferIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_OfferID = value;
					this.SendPropertyChanged("CRM_OfferID");
					this.OnCRM_OfferIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoPupils", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int NoPupils
		{
			get
			{
				return this._NoPupils;
			}
			set
			{
				if ((this._NoPupils != value))
				{
					this.OnNoPupilsChanging(value);
					this.SendPropertyChanging();
					this._NoPupils = value;
					this.SendPropertyChanged("NoPupils");
					this.OnNoPupilsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoAdults", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int NoAdults
		{
			get
			{
				return this._NoAdults;
			}
			set
			{
				if ((this._NoAdults != value))
				{
					this.OnNoAdultsChanging(value);
					this.SendPropertyChanging();
					this._NoAdults = value;
					this.SendPropertyChanged("NoAdults");
					this.OnNoAdultsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Yeargroup", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Yeargroup
		{
			get
			{
				return this._Yeargroup;
			}
			set
			{
				if ((this._Yeargroup != value))
				{
					this.OnYeargroupChanging(value);
					this.SendPropertyChanging();
					this._Yeargroup = value;
					this.SendPropertyChanged("Yeargroup");
					this.OnYeargroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkshopTimes", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string WorkshopTimes
		{
			get
			{
				return this._WorkshopTimes;
			}
			set
			{
				if ((this._WorkshopTimes != value))
				{
					this.OnWorkshopTimesChanging(value);
					this.SendPropertyChanging();
					this._WorkshopTimes = value;
					this.SendPropertyChanged("WorkshopTimes");
					this.OnWorkshopTimesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryAgreements", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string DeliveryAgreements
		{
			get
			{
				return this._DeliveryAgreements;
			}
			set
			{
				if ((this._DeliveryAgreements != value))
				{
					this.OnDeliveryAgreementsChanging(value);
					this.SendPropertyChanging();
					this._DeliveryAgreements = value;
					this.SendPropertyChanged("DeliveryAgreements");
					this.OnDeliveryAgreementsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SENNoChildren", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public int SENNoChildren
		{
			get
			{
				return this._SENNoChildren;
			}
			set
			{
				if ((this._SENNoChildren != value))
				{
					this.OnSENNoChildrenChanging(value);
					this.SendPropertyChanging();
					this._SENNoChildren = value;
					this.SendPropertyChanged("SENNoChildren");
					this.OnSENNoChildrenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SENDetails", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string SENDetails
		{
			get
			{
				return this._SENDetails;
			}
			set
			{
				if ((this._SENDetails != value))
				{
					this.OnSENDetailsChanging(value);
					this.SendPropertyChanging();
					this._SENDetails = value;
					this.SendPropertyChanged("SENDetails");
					this.OnSENDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facilitator", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string Facilitator
		{
			get
			{
				return this._Facilitator;
			}
			set
			{
				if ((this._Facilitator != value))
				{
					this.OnFacilitatorChanging(value);
					this.SendPropertyChanging();
					this._Facilitator = value;
					this.SendPropertyChanged("Facilitator");
					this.OnFacilitatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualChildren", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public int ActualChildren
		{
			get
			{
				return this._ActualChildren;
			}
			set
			{
				if ((this._ActualChildren != value))
				{
					this.OnActualChildrenChanging(value);
					this.SendPropertyChanging();
					this._ActualChildren = value;
					this.SendPropertyChanged("ActualChildren");
					this.OnActualChildrenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualAdults", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public int ActualAdults
		{
			get
			{
				return this._ActualAdults;
			}
			set
			{
				if ((this._ActualAdults != value))
				{
					this.OnActualAdultsChanging(value);
					this.SendPropertyChanging();
					this._ActualAdults = value;
					this.SendPropertyChanged("ActualAdults");
					this.OnActualAdultsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualTeachers", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public int ActualTeachers
		{
			get
			{
				return this._ActualTeachers;
			}
			set
			{
				if ((this._ActualTeachers != value))
				{
					this.OnActualTeachersChanging(value);
					this.SendPropertyChanging();
					this._ActualTeachers = value;
					this.SendPropertyChanged("ActualTeachers");
					this.OnActualTeachersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationSent", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public bool ConfirmationSent
		{
			get
			{
				return this._ConfirmationSent;
			}
			set
			{
				if ((this._ConfirmationSent != value))
				{
					this.OnConfirmationSentChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationSent = value;
					this.SendPropertyChanged("ConfirmationSent");
					this.OnConfirmationSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationSentDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<System.DateTime> ConfirmationSentDate
		{
			get
			{
				return this._ConfirmationSentDate;
			}
			set
			{
				if ((this._ConfirmationSentDate != value))
				{
					this.OnConfirmationSentDateChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationSentDate = value;
					this.SendPropertyChanged("ConfirmationSentDate");
					this.OnConfirmationSentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationInitials", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string ConfirmationInitials
		{
			get
			{
				return this._ConfirmationInitials;
			}
			set
			{
				if ((this._ConfirmationInitials != value))
				{
					this.OnConfirmationInitialsChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationInitials = value;
					this.SendPropertyChanged("ConfirmationInitials");
					this.OnConfirmationInitialsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public string OrganisationName
		{
			get
			{
				return this._OrganisationName;
			}
			set
			{
				if ((this._OrganisationName != value))
				{
					this.OnOrganisationNameChanging(value);
					this.SendPropertyChanging();
					this._OrganisationName = value;
					this.SendPropertyChanged("OrganisationName");
					this.OnOrganisationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(26)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Offer_CRM_CalendarOutreach", Storage="_CRM_Offer", ThisKey="CRM_OfferID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Offer CRM_Offer
		{
			get
			{
				return this._CRM_Offer.Entity;
			}
			set
			{
				CRM_Offer previousValue = this._CRM_Offer.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Offer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Offer.Entity = null;
						previousValue.CRM_CalendarOutreaches.Remove(this);
					}
					this._CRM_Offer.Entity = value;
					if ((value != null))
					{
						value.CRM_CalendarOutreaches.Add(this);
						this._CRM_OfferID = value.ID;
					}
					else
					{
						this._CRM_OfferID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CRM_Offer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Calendar_CRM_CalendarOutreach", Storage="_CRM_Calendar", ThisKey="CRM_CalendarID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Calendar CRM_Calendar
		{
			get
			{
				return this._CRM_Calendar.Entity;
			}
			set
			{
				CRM_Calendar previousValue = this._CRM_Calendar.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Calendar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Calendar.Entity = null;
						previousValue.CRM_CalendarOutreaches.Remove(this);
					}
					this._CRM_Calendar.Entity = value;
					if ((value != null))
					{
						value.CRM_CalendarOutreaches.Add(this);
						this._CRM_CalendarID = value.ID;
					}
					else
					{
						this._CRM_CalendarID = default(int);
					}
					this.SendPropertyChanged("CRM_Calendar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CRM_Offer = default(EntityRef<CRM_Offer>);
			this._CRM_Calendar = default(EntityRef<CRM_Calendar>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Calendar")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_Calendar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_CalendarTypeID;
		
		private string _DisplayName;
		
		private byte _Status;
		
		private bool _IsCancelled;
		
		private string _CancellationReason;
		
		private System.Nullable<int> _CancellationAdminID;
		
		private System.Nullable<System.DateTime> _DateCancelled;
		
		private System.DateTime _StartDateTime;
		
		private System.DateTime _EndDateTime;
		
		private int _CreatedByAdminID;
		
		private decimal _PriceAgreed;
		
		private byte _PriceType;
		
		private string _PrimaryContactReference;
		
		private bool _RequiresCatering;
		
		private string _TargetReference;
		
		private string _Reference;
		
		private bool _IsInvoiced;
		
		private System.Nullable<int> _InvoiceAddressID;
		
		private string _InvoiceTitle;
		
		private string _InvoiceFirstname;
		
		private string _InvoiceLastname;
		
		private System.Nullable<System.DateTime> _DatePaid;
		
		private string _PONumber;
		
		private byte _PrivacyStatus;
		
		private EntitySet<CRM_CalendarVenue> _CRM_CalendarVenues;
		
		private EntitySet<CRM_Task> _CRM_Tasks;
		
		private EntitySet<CRM_CalendarPerHead> _CRM_CalendarPerHeads;
		
		private EntitySet<CRM_CalendarAttendance> _CRM_CalendarAttendances;
		
		private EntitySet<CRM_CalendarParty> _CRM_CalendarParties;
		
		private EntitySet<CRM_CalendarInvite> _CRM_CalendarInvites;
		
		private EntitySet<CRM_CalendarAdmin> _CRM_CalendarAdmins;
		
		private EntitySet<CRM_CalendarCPD> _CRM_CalendarCPDs;
		
		private EntitySet<CRM_CalendarGroupBooking> _CRM_CalendarGroupBookings;
		
		private EntitySet<CRM_CalendarOutreach> _CRM_CalendarOutreaches;
		
		private EntityRef<Admin> _Admin;
		
		private EntityRef<CRM_Address> _CRM_Address;
		
		private EntityRef<CRM_CalendarType> _CRM_CalendarType;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_CalendarTypeIDChanging(int value);
    partial void OnCRM_CalendarTypeIDChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnIsCancelledChanging(bool value);
    partial void OnIsCancelledChanged();
    partial void OnCancellationReasonChanging(string value);
    partial void OnCancellationReasonChanged();
    partial void OnCancellationAdminIDChanging(System.Nullable<int> value);
    partial void OnCancellationAdminIDChanged();
    partial void OnDateCancelledChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCancelledChanged();
    partial void OnStartDateTimeChanging(System.DateTime value);
    partial void OnStartDateTimeChanged();
    partial void OnEndDateTimeChanging(System.DateTime value);
    partial void OnEndDateTimeChanged();
    partial void OnCreatedByAdminIDChanging(int value);
    partial void OnCreatedByAdminIDChanged();
    partial void OnPriceAgreedChanging(decimal value);
    partial void OnPriceAgreedChanged();
    partial void OnPriceTypeChanging(byte value);
    partial void OnPriceTypeChanged();
    partial void OnPrimaryContactReferenceChanging(string value);
    partial void OnPrimaryContactReferenceChanged();
    partial void OnRequiresCateringChanging(bool value);
    partial void OnRequiresCateringChanged();
    partial void OnTargetReferenceChanging(string value);
    partial void OnTargetReferenceChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnIsInvoicedChanging(bool value);
    partial void OnIsInvoicedChanged();
    partial void OnInvoiceAddressIDChanging(System.Nullable<int> value);
    partial void OnInvoiceAddressIDChanged();
    partial void OnInvoiceTitleChanging(string value);
    partial void OnInvoiceTitleChanged();
    partial void OnInvoiceFirstnameChanging(string value);
    partial void OnInvoiceFirstnameChanged();
    partial void OnInvoiceLastnameChanging(string value);
    partial void OnInvoiceLastnameChanged();
    partial void OnDatePaidChanging(System.Nullable<System.DateTime> value);
    partial void OnDatePaidChanged();
    partial void OnPONumberChanging(string value);
    partial void OnPONumberChanged();
    partial void OnPrivacyStatusChanging(byte value);
    partial void OnPrivacyStatusChanged();
    #endregion
		
		public CRM_Calendar()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_CalendarTypeID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_CalendarTypeID
		{
			get
			{
				return this._CRM_CalendarTypeID;
			}
			set
			{
				if ((this._CRM_CalendarTypeID != value))
				{
					if (this._CRM_CalendarType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_CalendarTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_CalendarTypeID = value;
					this.SendPropertyChanged("CRM_CalendarTypeID");
					this.OnCRM_CalendarTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelled", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsCancelled
		{
			get
			{
				return this._IsCancelled;
			}
			set
			{
				if ((this._IsCancelled != value))
				{
					this.OnIsCancelledChanging(value);
					this.SendPropertyChanging();
					this._IsCancelled = value;
					this.SendPropertyChanged("IsCancelled");
					this.OnIsCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancellationReason", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string CancellationReason
		{
			get
			{
				return this._CancellationReason;
			}
			set
			{
				if ((this._CancellationReason != value))
				{
					this.OnCancellationReasonChanging(value);
					this.SendPropertyChanging();
					this._CancellationReason = value;
					this.SendPropertyChanged("CancellationReason");
					this.OnCancellationReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancellationAdminID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> CancellationAdminID
		{
			get
			{
				return this._CancellationAdminID;
			}
			set
			{
				if ((this._CancellationAdminID != value))
				{
					this.OnCancellationAdminIDChanging(value);
					this.SendPropertyChanging();
					this._CancellationAdminID = value;
					this.SendPropertyChanged("CancellationAdminID");
					this.OnCancellationAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCancelled", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.DateTime> DateCancelled
		{
			get
			{
				return this._DateCancelled;
			}
			set
			{
				if ((this._DateCancelled != value))
				{
					this.OnDateCancelledChanging(value);
					this.SendPropertyChanging();
					this._DateCancelled = value;
					this.SendPropertyChanged("DateCancelled");
					this.OnDateCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateTime", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.DateTime StartDateTime
		{
			get
			{
				return this._StartDateTime;
			}
			set
			{
				if ((this._StartDateTime != value))
				{
					this.OnStartDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartDateTime = value;
					this.SendPropertyChanged("StartDateTime");
					this.OnStartDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateTime", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.DateTime EndDateTime
		{
			get
			{
				return this._EndDateTime;
			}
			set
			{
				if ((this._EndDateTime != value))
				{
					this.OnEndDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EndDateTime = value;
					this.SendPropertyChanged("EndDateTime");
					this.OnEndDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByAdminID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public int CreatedByAdminID
		{
			get
			{
				return this._CreatedByAdminID;
			}
			set
			{
				if ((this._CreatedByAdminID != value))
				{
					if (this._Admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByAdminIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByAdminID = value;
					this.SendPropertyChanged("CreatedByAdminID");
					this.OnCreatedByAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceAgreed", DbType="Money NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public decimal PriceAgreed
		{
			get
			{
				return this._PriceAgreed;
			}
			set
			{
				if ((this._PriceAgreed != value))
				{
					this.OnPriceAgreedChanging(value);
					this.SendPropertyChanging();
					this._PriceAgreed = value;
					this.SendPropertyChanged("PriceAgreed");
					this.OnPriceAgreedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceType", DbType="TinyInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public byte PriceType
		{
			get
			{
				return this._PriceType;
			}
			set
			{
				if ((this._PriceType != value))
				{
					this.OnPriceTypeChanging(value);
					this.SendPropertyChanging();
					this._PriceType = value;
					this.SendPropertyChanged("PriceType");
					this.OnPriceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryContactReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string PrimaryContactReference
		{
			get
			{
				return this._PrimaryContactReference;
			}
			set
			{
				if ((this._PrimaryContactReference != value))
				{
					this.OnPrimaryContactReferenceChanging(value);
					this.SendPropertyChanging();
					this._PrimaryContactReference = value;
					this.SendPropertyChanged("PrimaryContactReference");
					this.OnPrimaryContactReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiresCatering", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public bool RequiresCatering
		{
			get
			{
				return this._RequiresCatering;
			}
			set
			{
				if ((this._RequiresCatering != value))
				{
					this.OnRequiresCateringChanging(value);
					this.SendPropertyChanging();
					this._RequiresCatering = value;
					this.SendPropertyChanged("RequiresCatering");
					this.OnRequiresCateringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string TargetReference
		{
			get
			{
				return this._TargetReference;
			}
			set
			{
				if ((this._TargetReference != value))
				{
					this.OnTargetReferenceChanging(value);
					this.SendPropertyChanging();
					this._TargetReference = value;
					this.SendPropertyChanged("TargetReference");
					this.OnTargetReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(19)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInvoiced", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public bool IsInvoiced
		{
			get
			{
				return this._IsInvoiced;
			}
			set
			{
				if ((this._IsInvoiced != value))
				{
					this.OnIsInvoicedChanging(value);
					this.SendPropertyChanging();
					this._IsInvoiced = value;
					this.SendPropertyChanged("IsInvoiced");
					this.OnIsInvoicedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceAddressID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<int> InvoiceAddressID
		{
			get
			{
				return this._InvoiceAddressID;
			}
			set
			{
				if ((this._InvoiceAddressID != value))
				{
					if (this._CRM_Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceAddressIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceAddressID = value;
					this.SendPropertyChanged("InvoiceAddressID");
					this.OnInvoiceAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTitle", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public string InvoiceTitle
		{
			get
			{
				return this._InvoiceTitle;
			}
			set
			{
				if ((this._InvoiceTitle != value))
				{
					this.OnInvoiceTitleChanging(value);
					this.SendPropertyChanging();
					this._InvoiceTitle = value;
					this.SendPropertyChanged("InvoiceTitle");
					this.OnInvoiceTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceFirstname", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public string InvoiceFirstname
		{
			get
			{
				return this._InvoiceFirstname;
			}
			set
			{
				if ((this._InvoiceFirstname != value))
				{
					this.OnInvoiceFirstnameChanging(value);
					this.SendPropertyChanging();
					this._InvoiceFirstname = value;
					this.SendPropertyChanged("InvoiceFirstname");
					this.OnInvoiceFirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceLastname", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public string InvoiceLastname
		{
			get
			{
				return this._InvoiceLastname;
			}
			set
			{
				if ((this._InvoiceLastname != value))
				{
					this.OnInvoiceLastnameChanging(value);
					this.SendPropertyChanging();
					this._InvoiceLastname = value;
					this.SendPropertyChanged("InvoiceLastname");
					this.OnInvoiceLastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePaid", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public System.Nullable<System.DateTime> DatePaid
		{
			get
			{
				return this._DatePaid;
			}
			set
			{
				if ((this._DatePaid != value))
				{
					this.OnDatePaidChanging(value);
					this.SendPropertyChanging();
					this._DatePaid = value;
					this.SendPropertyChanged("DatePaid");
					this.OnDatePaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PONumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public string PONumber
		{
			get
			{
				return this._PONumber;
			}
			set
			{
				if ((this._PONumber != value))
				{
					this.OnPONumberChanging(value);
					this.SendPropertyChanging();
					this._PONumber = value;
					this.SendPropertyChanged("PONumber");
					this.OnPONumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrivacyStatus", DbType="TinyInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public byte PrivacyStatus
		{
			get
			{
				return this._PrivacyStatus;
			}
			set
			{
				if ((this._PrivacyStatus != value))
				{
					this.OnPrivacyStatusChanging(value);
					this.SendPropertyChanging();
					this._PrivacyStatus = value;
					this.SendPropertyChanged("PrivacyStatus");
					this.OnPrivacyStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Calendar_CRM_CalendarVenue", Storage="_CRM_CalendarVenues", ThisKey="ID", OtherKey="CRM_CalendarID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26, EmitDefaultValue=false)]
		public EntitySet<CRM_CalendarVenue> CRM_CalendarVenues
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_CalendarVenues.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_CalendarVenues;
			}
			set
			{
				this._CRM_CalendarVenues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Calendar_CRM_Task", Storage="_CRM_Tasks", ThisKey="ID", OtherKey="CRM_CalendarID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27, EmitDefaultValue=false)]
		public EntitySet<CRM_Task> CRM_Tasks
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_Tasks.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_Tasks;
			}
			set
			{
				this._CRM_Tasks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Calendar_CRM_CalendarPerHead", Storage="_CRM_CalendarPerHeads", ThisKey="ID", OtherKey="CRM_CalendarID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28, EmitDefaultValue=false)]
		public EntitySet<CRM_CalendarPerHead> CRM_CalendarPerHeads
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_CalendarPerHeads.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_CalendarPerHeads;
			}
			set
			{
				this._CRM_CalendarPerHeads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Calendar_CRM_CalendarAttendance", Storage="_CRM_CalendarAttendances", ThisKey="ID", OtherKey="CRM_CalendarID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29, EmitDefaultValue=false)]
		public EntitySet<CRM_CalendarAttendance> CRM_CalendarAttendances
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_CalendarAttendances.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_CalendarAttendances;
			}
			set
			{
				this._CRM_CalendarAttendances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Calendar_CRM_CalendarParty", Storage="_CRM_CalendarParties", ThisKey="ID", OtherKey="CRM_CalendarID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30, EmitDefaultValue=false)]
		public EntitySet<CRM_CalendarParty> CRM_CalendarParties
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_CalendarParties.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_CalendarParties;
			}
			set
			{
				this._CRM_CalendarParties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Calendar_CRM_CalendarInvite", Storage="_CRM_CalendarInvites", ThisKey="ID", OtherKey="CRM_CalendarID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31, EmitDefaultValue=false)]
		public EntitySet<CRM_CalendarInvite> CRM_CalendarInvites
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_CalendarInvites.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_CalendarInvites;
			}
			set
			{
				this._CRM_CalendarInvites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Calendar_CRM_CalendarAdmin", Storage="_CRM_CalendarAdmins", ThisKey="ID", OtherKey="CRM_CalendarID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32, EmitDefaultValue=false)]
		public EntitySet<CRM_CalendarAdmin> CRM_CalendarAdmins
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_CalendarAdmins.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_CalendarAdmins;
			}
			set
			{
				this._CRM_CalendarAdmins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Calendar_CRM_CalendarCPD", Storage="_CRM_CalendarCPDs", ThisKey="ID", OtherKey="CRM_CalendarID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33, EmitDefaultValue=false)]
		public EntitySet<CRM_CalendarCPD> CRM_CalendarCPDs
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_CalendarCPDs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_CalendarCPDs;
			}
			set
			{
				this._CRM_CalendarCPDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Calendar_CRM_CalendarGroupBooking", Storage="_CRM_CalendarGroupBookings", ThisKey="ID", OtherKey="CRM_CalendarID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34, EmitDefaultValue=false)]
		public EntitySet<CRM_CalendarGroupBooking> CRM_CalendarGroupBookings
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_CalendarGroupBookings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_CalendarGroupBookings;
			}
			set
			{
				this._CRM_CalendarGroupBookings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Calendar_CRM_CalendarOutreach", Storage="_CRM_CalendarOutreaches", ThisKey="ID", OtherKey="CRM_CalendarID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35, EmitDefaultValue=false)]
		public EntitySet<CRM_CalendarOutreach> CRM_CalendarOutreaches
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_CalendarOutreaches.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_CalendarOutreaches;
			}
			set
			{
				this._CRM_CalendarOutreaches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_CRM_Calendar", Storage="_Admin", ThisKey="CreatedByAdminID", OtherKey="ID", IsForeignKey=true)]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.CRM_Calendars.Remove(this);
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.CRM_Calendars.Add(this);
						this._CreatedByAdminID = value.ID;
					}
					else
					{
						this._CreatedByAdminID = default(int);
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Address_CRM_Calendar", Storage="_CRM_Address", ThisKey="InvoiceAddressID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Address CRM_Address
		{
			get
			{
				return this._CRM_Address.Entity;
			}
			set
			{
				CRM_Address previousValue = this._CRM_Address.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Address.Entity = null;
						previousValue.CRM_Calendars.Remove(this);
					}
					this._CRM_Address.Entity = value;
					if ((value != null))
					{
						value.CRM_Calendars.Add(this);
						this._InvoiceAddressID = value.ID;
					}
					else
					{
						this._InvoiceAddressID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CRM_Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_CalendarType_CRM_Calendar", Storage="_CRM_CalendarType", ThisKey="CRM_CalendarTypeID", OtherKey="ID", IsForeignKey=true)]
		public CRM_CalendarType CRM_CalendarType
		{
			get
			{
				return this._CRM_CalendarType.Entity;
			}
			set
			{
				CRM_CalendarType previousValue = this._CRM_CalendarType.Entity;
				if (((previousValue != value) 
							|| (this._CRM_CalendarType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_CalendarType.Entity = null;
						previousValue.CRM_Calendars.Remove(this);
					}
					this._CRM_CalendarType.Entity = value;
					if ((value != null))
					{
						value.CRM_Calendars.Add(this);
						this._CRM_CalendarTypeID = value.ID;
					}
					else
					{
						this._CRM_CalendarTypeID = default(int);
					}
					this.SendPropertyChanged("CRM_CalendarType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_CalendarVenues(CRM_CalendarVenue entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Calendar = this;
		}
		
		private void detach_CRM_CalendarVenues(CRM_CalendarVenue entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Calendar = null;
		}
		
		private void attach_CRM_Tasks(CRM_Task entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Calendar = this;
		}
		
		private void detach_CRM_Tasks(CRM_Task entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Calendar = null;
		}
		
		private void attach_CRM_CalendarPerHeads(CRM_CalendarPerHead entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Calendar = this;
		}
		
		private void detach_CRM_CalendarPerHeads(CRM_CalendarPerHead entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Calendar = null;
		}
		
		private void attach_CRM_CalendarAttendances(CRM_CalendarAttendance entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Calendar = this;
		}
		
		private void detach_CRM_CalendarAttendances(CRM_CalendarAttendance entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Calendar = null;
		}
		
		private void attach_CRM_CalendarParties(CRM_CalendarParty entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Calendar = this;
		}
		
		private void detach_CRM_CalendarParties(CRM_CalendarParty entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Calendar = null;
		}
		
		private void attach_CRM_CalendarInvites(CRM_CalendarInvite entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Calendar = this;
		}
		
		private void detach_CRM_CalendarInvites(CRM_CalendarInvite entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Calendar = null;
		}
		
		private void attach_CRM_CalendarAdmins(CRM_CalendarAdmin entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Calendar = this;
		}
		
		private void detach_CRM_CalendarAdmins(CRM_CalendarAdmin entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Calendar = null;
		}
		
		private void attach_CRM_CalendarCPDs(CRM_CalendarCPD entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Calendar = this;
		}
		
		private void detach_CRM_CalendarCPDs(CRM_CalendarCPD entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Calendar = null;
		}
		
		private void attach_CRM_CalendarGroupBookings(CRM_CalendarGroupBooking entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Calendar = this;
		}
		
		private void detach_CRM_CalendarGroupBookings(CRM_CalendarGroupBooking entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Calendar = null;
		}
		
		private void attach_CRM_CalendarOutreaches(CRM_CalendarOutreach entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Calendar = this;
		}
		
		private void detach_CRM_CalendarOutreaches(CRM_CalendarOutreach entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Calendar = null;
		}
		
		private void Initialize()
		{
			this._CRM_CalendarVenues = new EntitySet<CRM_CalendarVenue>(new Action<CRM_CalendarVenue>(this.attach_CRM_CalendarVenues), new Action<CRM_CalendarVenue>(this.detach_CRM_CalendarVenues));
			this._CRM_Tasks = new EntitySet<CRM_Task>(new Action<CRM_Task>(this.attach_CRM_Tasks), new Action<CRM_Task>(this.detach_CRM_Tasks));
			this._CRM_CalendarPerHeads = new EntitySet<CRM_CalendarPerHead>(new Action<CRM_CalendarPerHead>(this.attach_CRM_CalendarPerHeads), new Action<CRM_CalendarPerHead>(this.detach_CRM_CalendarPerHeads));
			this._CRM_CalendarAttendances = new EntitySet<CRM_CalendarAttendance>(new Action<CRM_CalendarAttendance>(this.attach_CRM_CalendarAttendances), new Action<CRM_CalendarAttendance>(this.detach_CRM_CalendarAttendances));
			this._CRM_CalendarParties = new EntitySet<CRM_CalendarParty>(new Action<CRM_CalendarParty>(this.attach_CRM_CalendarParties), new Action<CRM_CalendarParty>(this.detach_CRM_CalendarParties));
			this._CRM_CalendarInvites = new EntitySet<CRM_CalendarInvite>(new Action<CRM_CalendarInvite>(this.attach_CRM_CalendarInvites), new Action<CRM_CalendarInvite>(this.detach_CRM_CalendarInvites));
			this._CRM_CalendarAdmins = new EntitySet<CRM_CalendarAdmin>(new Action<CRM_CalendarAdmin>(this.attach_CRM_CalendarAdmins), new Action<CRM_CalendarAdmin>(this.detach_CRM_CalendarAdmins));
			this._CRM_CalendarCPDs = new EntitySet<CRM_CalendarCPD>(new Action<CRM_CalendarCPD>(this.attach_CRM_CalendarCPDs), new Action<CRM_CalendarCPD>(this.detach_CRM_CalendarCPDs));
			this._CRM_CalendarGroupBookings = new EntitySet<CRM_CalendarGroupBooking>(new Action<CRM_CalendarGroupBooking>(this.attach_CRM_CalendarGroupBookings), new Action<CRM_CalendarGroupBooking>(this.detach_CRM_CalendarGroupBookings));
			this._CRM_CalendarOutreaches = new EntitySet<CRM_CalendarOutreach>(new Action<CRM_CalendarOutreach>(this.attach_CRM_CalendarOutreaches), new Action<CRM_CalendarOutreach>(this.detach_CRM_CalendarOutreaches));
			this._Admin = default(EntityRef<Admin>);
			this._CRM_Address = default(EntityRef<CRM_Address>);
			this._CRM_CalendarType = default(EntityRef<CRM_CalendarType>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_FormFieldAnswer")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_FormFieldAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_FormFieldID;
		
		private string _TargetReference;
		
		private string _Answer;
		
		private EntityRef<CRM_FormField> _CRM_FormField;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_FormFieldIDChanging(int value);
    partial void OnCRM_FormFieldIDChanged();
    partial void OnTargetReferenceChanging(string value);
    partial void OnTargetReferenceChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    #endregion
		
		public CRM_FormFieldAnswer()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_FormFieldID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_FormFieldID
		{
			get
			{
				return this._CRM_FormFieldID;
			}
			set
			{
				if ((this._CRM_FormFieldID != value))
				{
					if (this._CRM_FormField.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_FormFieldIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_FormFieldID = value;
					this.SendPropertyChanged("CRM_FormFieldID");
					this.OnCRM_FormFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string TargetReference
		{
			get
			{
				return this._TargetReference;
			}
			set
			{
				if ((this._TargetReference != value))
				{
					this.OnTargetReferenceChanging(value);
					this.SendPropertyChanging();
					this._TargetReference = value;
					this.SendPropertyChanged("TargetReference");
					this.OnTargetReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="VarChar(MAX)", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_FormField_CRM_FormFieldAnswer", Storage="_CRM_FormField", ThisKey="CRM_FormFieldID", OtherKey="ID", IsForeignKey=true)]
		public CRM_FormField CRM_FormField
		{
			get
			{
				return this._CRM_FormField.Entity;
			}
			set
			{
				CRM_FormField previousValue = this._CRM_FormField.Entity;
				if (((previousValue != value) 
							|| (this._CRM_FormField.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_FormField.Entity = null;
						previousValue.CRM_FormFieldAnswers.Remove(this);
					}
					this._CRM_FormField.Entity = value;
					if ((value != null))
					{
						value.CRM_FormFieldAnswers.Add(this);
						this._CRM_FormFieldID = value.ID;
					}
					else
					{
						this._CRM_FormFieldID = default(int);
					}
					this.SendPropertyChanged("CRM_FormField");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CRM_FormField = default(EntityRef<CRM_FormField>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_AnnualPass")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_AnnualPass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_AnnualPassCardID;
		
		private int _CRM_AnnualPassTypeID;
		
		private decimal _AmountPaid;
		
		private string _DiscountApplied;
		
		private string _PrimaryContactReference;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _ExpiryDate;
		
		private bool _IsPending;
		
		private bool _IsArchived;
		
		private System.Nullable<int> _CRM_OfferID;
		
		private string _Reference;
		
		private byte _PaymentMethod;
		
		private EntitySet<CRM_AnnualPassPerson> _CRM_AnnualPassPersons;
		
		private EntityRef<CRM_AnnualPassCard> _CRM_AnnualPassCard;
		
		private EntityRef<CRM_Offer> _CRM_Offer;
		
		private EntityRef<CRM_AnnualPassType> _CRM_AnnualPassType;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_AnnualPassCardIDChanging(int value);
    partial void OnCRM_AnnualPassCardIDChanged();
    partial void OnCRM_AnnualPassTypeIDChanging(int value);
    partial void OnCRM_AnnualPassTypeIDChanged();
    partial void OnAmountPaidChanging(decimal value);
    partial void OnAmountPaidChanged();
    partial void OnDiscountAppliedChanging(string value);
    partial void OnDiscountAppliedChanged();
    partial void OnPrimaryContactReferenceChanging(string value);
    partial void OnPrimaryContactReferenceChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnExpiryDateChanging(System.DateTime value);
    partial void OnExpiryDateChanged();
    partial void OnIsPendingChanging(bool value);
    partial void OnIsPendingChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    partial void OnCRM_OfferIDChanging(System.Nullable<int> value);
    partial void OnCRM_OfferIDChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnPaymentMethodChanging(byte value);
    partial void OnPaymentMethodChanged();
    #endregion
		
		public CRM_AnnualPass()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_AnnualPassCardID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_AnnualPassCardID
		{
			get
			{
				return this._CRM_AnnualPassCardID;
			}
			set
			{
				if ((this._CRM_AnnualPassCardID != value))
				{
					if (this._CRM_AnnualPassCard.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_AnnualPassCardIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_AnnualPassCardID = value;
					this.SendPropertyChanged("CRM_AnnualPassCardID");
					this.OnCRM_AnnualPassCardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_AnnualPassTypeID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CRM_AnnualPassTypeID
		{
			get
			{
				return this._CRM_AnnualPassTypeID;
			}
			set
			{
				if ((this._CRM_AnnualPassTypeID != value))
				{
					if (this._CRM_AnnualPassType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_AnnualPassTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_AnnualPassTypeID = value;
					this.SendPropertyChanged("CRM_AnnualPassTypeID");
					this.OnCRM_AnnualPassTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountPaid", DbType="Money NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public decimal AmountPaid
		{
			get
			{
				return this._AmountPaid;
			}
			set
			{
				if ((this._AmountPaid != value))
				{
					this.OnAmountPaidChanging(value);
					this.SendPropertyChanging();
					this._AmountPaid = value;
					this.SendPropertyChanged("AmountPaid");
					this.OnAmountPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountApplied", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string DiscountApplied
		{
			get
			{
				return this._DiscountApplied;
			}
			set
			{
				if ((this._DiscountApplied != value))
				{
					this.OnDiscountAppliedChanging(value);
					this.SendPropertyChanging();
					this._DiscountApplied = value;
					this.SendPropertyChanged("DiscountApplied");
					this.OnDiscountAppliedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryContactReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string PrimaryContactReference
		{
			get
			{
				return this._PrimaryContactReference;
			}
			set
			{
				if ((this._PrimaryContactReference != value))
				{
					this.OnPrimaryContactReferenceChanging(value);
					this.SendPropertyChanging();
					this._PrimaryContactReference = value;
					this.SendPropertyChanged("PrimaryContactReference");
					this.OnPrimaryContactReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPending", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool IsPending
		{
			get
			{
				return this._IsPending;
			}
			set
			{
				if ((this._IsPending != value))
				{
					this.OnIsPendingChanging(value);
					this.SendPropertyChanging();
					this._IsPending = value;
					this.SendPropertyChanged("IsPending");
					this.OnIsPendingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_OfferID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> CRM_OfferID
		{
			get
			{
				return this._CRM_OfferID;
			}
			set
			{
				if ((this._CRM_OfferID != value))
				{
					if (this._CRM_Offer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_OfferIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_OfferID = value;
					this.SendPropertyChanged("CRM_OfferID");
					this.OnCRM_OfferIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(21)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethod", DbType="TinyInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public byte PaymentMethod
		{
			get
			{
				return this._PaymentMethod;
			}
			set
			{
				if ((this._PaymentMethod != value))
				{
					this.OnPaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethod = value;
					this.SendPropertyChanged("PaymentMethod");
					this.OnPaymentMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_AnnualPass_CRM_AnnualPassPerson", Storage="_CRM_AnnualPassPersons", ThisKey="ID", OtherKey="CRM_AnnualPassID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<CRM_AnnualPassPerson> CRM_AnnualPassPersons
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_AnnualPassPersons.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_AnnualPassPersons;
			}
			set
			{
				this._CRM_AnnualPassPersons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_AnnualPassCard_CRM_AnnualPass", Storage="_CRM_AnnualPassCard", ThisKey="CRM_AnnualPassCardID", OtherKey="ID", IsForeignKey=true)]
		public CRM_AnnualPassCard CRM_AnnualPassCard
		{
			get
			{
				return this._CRM_AnnualPassCard.Entity;
			}
			set
			{
				CRM_AnnualPassCard previousValue = this._CRM_AnnualPassCard.Entity;
				if (((previousValue != value) 
							|| (this._CRM_AnnualPassCard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_AnnualPassCard.Entity = null;
						previousValue.CRM_AnnualPasses.Remove(this);
					}
					this._CRM_AnnualPassCard.Entity = value;
					if ((value != null))
					{
						value.CRM_AnnualPasses.Add(this);
						this._CRM_AnnualPassCardID = value.ID;
					}
					else
					{
						this._CRM_AnnualPassCardID = default(int);
					}
					this.SendPropertyChanged("CRM_AnnualPassCard");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Offer_CRM_AnnualPass", Storage="_CRM_Offer", ThisKey="CRM_OfferID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Offer CRM_Offer
		{
			get
			{
				return this._CRM_Offer.Entity;
			}
			set
			{
				CRM_Offer previousValue = this._CRM_Offer.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Offer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Offer.Entity = null;
						previousValue.CRM_AnnualPasses.Remove(this);
					}
					this._CRM_Offer.Entity = value;
					if ((value != null))
					{
						value.CRM_AnnualPasses.Add(this);
						this._CRM_OfferID = value.ID;
					}
					else
					{
						this._CRM_OfferID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CRM_Offer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_AnnualPassType_CRM_AnnualPass", Storage="_CRM_AnnualPassType", ThisKey="CRM_AnnualPassTypeID", OtherKey="ID", IsForeignKey=true)]
		public CRM_AnnualPassType CRM_AnnualPassType
		{
			get
			{
				return this._CRM_AnnualPassType.Entity;
			}
			set
			{
				CRM_AnnualPassType previousValue = this._CRM_AnnualPassType.Entity;
				if (((previousValue != value) 
							|| (this._CRM_AnnualPassType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_AnnualPassType.Entity = null;
						previousValue.CRM_AnnualPasses.Remove(this);
					}
					this._CRM_AnnualPassType.Entity = value;
					if ((value != null))
					{
						value.CRM_AnnualPasses.Add(this);
						this._CRM_AnnualPassTypeID = value.ID;
					}
					else
					{
						this._CRM_AnnualPassTypeID = default(int);
					}
					this.SendPropertyChanged("CRM_AnnualPassType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_AnnualPassPersons(CRM_AnnualPassPerson entity)
		{
			this.SendPropertyChanging();
			entity.CRM_AnnualPass = this;
		}
		
		private void detach_CRM_AnnualPassPersons(CRM_AnnualPassPerson entity)
		{
			this.SendPropertyChanging();
			entity.CRM_AnnualPass = null;
		}
		
		private void Initialize()
		{
			this._CRM_AnnualPassPersons = new EntitySet<CRM_AnnualPassPerson>(new Action<CRM_AnnualPassPerson>(this.attach_CRM_AnnualPassPersons), new Action<CRM_AnnualPassPerson>(this.detach_CRM_AnnualPassPersons));
			this._CRM_AnnualPassCard = default(EntityRef<CRM_AnnualPassCard>);
			this._CRM_Offer = default(EntityRef<CRM_Offer>);
			this._CRM_AnnualPassType = default(EntityRef<CRM_AnnualPassType>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TemplateEmail")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class TemplateEmail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _FixedRef;
		
		private string _ToEmail;
		
		private string _CCEmail;
		
		private string _BCCEmail;
		
		private string _Subject;
		
		private string _FromEmail;
		
		private string _Body;
		
		private string _AdminDescription;
		
		private bool _IsToEnabled;
		
		private bool _IsDisabled;
		
		private EntitySet<TemplateEmailPlaceholder> _TemplateEmailPlaceholders;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFixedRefChanging(string value);
    partial void OnFixedRefChanged();
    partial void OnToEmailChanging(string value);
    partial void OnToEmailChanged();
    partial void OnCCEmailChanging(string value);
    partial void OnCCEmailChanged();
    partial void OnBCCEmailChanging(string value);
    partial void OnBCCEmailChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnFromEmailChanging(string value);
    partial void OnFromEmailChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnAdminDescriptionChanging(string value);
    partial void OnAdminDescriptionChanged();
    partial void OnIsToEnabledChanging(bool value);
    partial void OnIsToEnabledChanged();
    partial void OnIsDisabledChanging(bool value);
    partial void OnIsDisabledChanged();
    #endregion
		
		public TemplateEmail()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedRef", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string FixedRef
		{
			get
			{
				return this._FixedRef;
			}
			set
			{
				if ((this._FixedRef != value))
				{
					this.OnFixedRefChanging(value);
					this.SendPropertyChanging();
					this._FixedRef = value;
					this.SendPropertyChanged("FixedRef");
					this.OnFixedRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToEmail", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ToEmail
		{
			get
			{
				return this._ToEmail;
			}
			set
			{
				if ((this._ToEmail != value))
				{
					this.OnToEmailChanging(value);
					this.SendPropertyChanging();
					this._ToEmail = value;
					this.SendPropertyChanged("ToEmail");
					this.OnToEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCEmail", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string CCEmail
		{
			get
			{
				return this._CCEmail;
			}
			set
			{
				if ((this._CCEmail != value))
				{
					this.OnCCEmailChanging(value);
					this.SendPropertyChanging();
					this._CCEmail = value;
					this.SendPropertyChanged("CCEmail");
					this.OnCCEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BCCEmail", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string BCCEmail
		{
			get
			{
				return this._BCCEmail;
			}
			set
			{
				if ((this._BCCEmail != value))
				{
					this.OnBCCEmailChanging(value);
					this.SendPropertyChanging();
					this._BCCEmail = value;
					this.SendPropertyChanged("BCCEmail");
					this.OnBCCEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromEmail", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string FromEmail
		{
			get
			{
				return this._FromEmail;
			}
			set
			{
				if ((this._FromEmail != value))
				{
					this.OnFromEmailChanging(value);
					this.SendPropertyChanging();
					this._FromEmail = value;
					this.SendPropertyChanged("FromEmail");
					this.OnFromEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminDescription", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string AdminDescription
		{
			get
			{
				return this._AdminDescription;
			}
			set
			{
				if ((this._AdminDescription != value))
				{
					this.OnAdminDescriptionChanging(value);
					this.SendPropertyChanging();
					this._AdminDescription = value;
					this.SendPropertyChanged("AdminDescription");
					this.OnAdminDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsToEnabled", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool IsToEnabled
		{
			get
			{
				return this._IsToEnabled;
			}
			set
			{
				if ((this._IsToEnabled != value))
				{
					this.OnIsToEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsToEnabled = value;
					this.SendPropertyChanged("IsToEnabled");
					this.OnIsToEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisabled", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public bool IsDisabled
		{
			get
			{
				return this._IsDisabled;
			}
			set
			{
				if ((this._IsDisabled != value))
				{
					this.OnIsDisabledChanging(value);
					this.SendPropertyChanging();
					this._IsDisabled = value;
					this.SendPropertyChanged("IsDisabled");
					this.OnIsDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TemplateEmail_TemplateEmailPlaceholder", Storage="_TemplateEmailPlaceholders", ThisKey="ID", OtherKey="TemplateEmailID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<TemplateEmailPlaceholder> TemplateEmailPlaceholders
		{
			get
			{
				if ((this.serializing 
							&& (this._TemplateEmailPlaceholders.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TemplateEmailPlaceholders;
			}
			set
			{
				this._TemplateEmailPlaceholders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TemplateEmailPlaceholders(TemplateEmailPlaceholder entity)
		{
			this.SendPropertyChanging();
			entity.TemplateEmail = this;
		}
		
		private void detach_TemplateEmailPlaceholders(TemplateEmailPlaceholder entity)
		{
			this.SendPropertyChanging();
			entity.TemplateEmail = null;
		}
		
		private void Initialize()
		{
			this._TemplateEmailPlaceholders = new EntitySet<TemplateEmailPlaceholder>(new Action<TemplateEmailPlaceholder>(this.attach_TemplateEmailPlaceholders), new Action<TemplateEmailPlaceholder>(this.detach_TemplateEmailPlaceholders));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TemplateEmailPlaceholder")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class TemplateEmailPlaceholder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _TemplateEmailID;
		
		private string _Placeholder;
		
		private string _Description;
		
		private EntityRef<TemplateEmail> _TemplateEmail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTemplateEmailIDChanging(int value);
    partial void OnTemplateEmailIDChanged();
    partial void OnPlaceholderChanging(string value);
    partial void OnPlaceholderChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public TemplateEmailPlaceholder()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateEmailID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int TemplateEmailID
		{
			get
			{
				return this._TemplateEmailID;
			}
			set
			{
				if ((this._TemplateEmailID != value))
				{
					if (this._TemplateEmail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTemplateEmailIDChanging(value);
					this.SendPropertyChanging();
					this._TemplateEmailID = value;
					this.SendPropertyChanged("TemplateEmailID");
					this.OnTemplateEmailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Placeholder", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Placeholder
		{
			get
			{
				return this._Placeholder;
			}
			set
			{
				if ((this._Placeholder != value))
				{
					this.OnPlaceholderChanging(value);
					this.SendPropertyChanging();
					this._Placeholder = value;
					this.SendPropertyChanged("Placeholder");
					this.OnPlaceholderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(2500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TemplateEmail_TemplateEmailPlaceholder", Storage="_TemplateEmail", ThisKey="TemplateEmailID", OtherKey="ID", IsForeignKey=true)]
		public TemplateEmail TemplateEmail
		{
			get
			{
				return this._TemplateEmail.Entity;
			}
			set
			{
				TemplateEmail previousValue = this._TemplateEmail.Entity;
				if (((previousValue != value) 
							|| (this._TemplateEmail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TemplateEmail.Entity = null;
						previousValue.TemplateEmailPlaceholders.Remove(this);
					}
					this._TemplateEmail.Entity = value;
					if ((value != null))
					{
						value.TemplateEmailPlaceholders.Add(this);
						this._TemplateEmailID = value.ID;
					}
					else
					{
						this._TemplateEmailID = default(int);
					}
					this.SendPropertyChanged("TemplateEmail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._TemplateEmail = default(EntityRef<TemplateEmail>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_AnnualPassType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_AnnualPassType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _IsArchived;
		
		private decimal _DefaultPrice;
		
		private bool _IsWebsite;
		
		private bool _IsJoint;
		
		private EntitySet<CRM_AnnualPass> _CRM_AnnualPasses;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    partial void OnDefaultPriceChanging(decimal value);
    partial void OnDefaultPriceChanged();
    partial void OnIsWebsiteChanging(bool value);
    partial void OnIsWebsiteChanged();
    partial void OnIsJointChanging(bool value);
    partial void OnIsJointChanged();
    #endregion
		
		public CRM_AnnualPassType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultPrice", DbType="Money NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public decimal DefaultPrice
		{
			get
			{
				return this._DefaultPrice;
			}
			set
			{
				if ((this._DefaultPrice != value))
				{
					this.OnDefaultPriceChanging(value);
					this.SendPropertyChanging();
					this._DefaultPrice = value;
					this.SendPropertyChanged("DefaultPrice");
					this.OnDefaultPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWebsite", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsWebsite
		{
			get
			{
				return this._IsWebsite;
			}
			set
			{
				if ((this._IsWebsite != value))
				{
					this.OnIsWebsiteChanging(value);
					this.SendPropertyChanging();
					this._IsWebsite = value;
					this.SendPropertyChanged("IsWebsite");
					this.OnIsWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsJoint", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsJoint
		{
			get
			{
				return this._IsJoint;
			}
			set
			{
				if ((this._IsJoint != value))
				{
					this.OnIsJointChanging(value);
					this.SendPropertyChanging();
					this._IsJoint = value;
					this.SendPropertyChanged("IsJoint");
					this.OnIsJointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_AnnualPassType_CRM_AnnualPass", Storage="_CRM_AnnualPasses", ThisKey="ID", OtherKey="CRM_AnnualPassTypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<CRM_AnnualPass> CRM_AnnualPasses
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_AnnualPasses.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_AnnualPasses;
			}
			set
			{
				this._CRM_AnnualPasses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_AnnualPasses(CRM_AnnualPass entity)
		{
			this.SendPropertyChanging();
			entity.CRM_AnnualPassType = this;
		}
		
		private void detach_CRM_AnnualPasses(CRM_AnnualPass entity)
		{
			this.SendPropertyChanging();
			entity.CRM_AnnualPassType = null;
		}
		
		private void Initialize()
		{
			this._CRM_AnnualPasses = new EntitySet<CRM_AnnualPass>(new Action<CRM_AnnualPass>(this.attach_CRM_AnnualPasses), new Action<CRM_AnnualPass>(this.detach_CRM_AnnualPasses));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_RelationCode")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_RelationCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<CRM_PersonRelationship> _CRM_PersonRelationships;
		
		private EntitySet<CRM_PersonRelationship> _CRM_PersonRelationships1;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CRM_RelationCode()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_RelationCode_CRM_PersonRelationship", Storage="_CRM_PersonRelationships", ThisKey="ID", OtherKey="CRM_RelationCodeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<CRM_PersonRelationship> CRM_PersonRelationships
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_PersonRelationships.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_PersonRelationships;
			}
			set
			{
				this._CRM_PersonRelationships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_RelationCode_CRM_PersonRelationship1", Storage="_CRM_PersonRelationships1", ThisKey="ID", OtherKey="CRM_RelationCodeID2")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<CRM_PersonRelationship> CRM_PersonRelationships1
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_PersonRelationships1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_PersonRelationships1;
			}
			set
			{
				this._CRM_PersonRelationships1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_PersonRelationships(CRM_PersonRelationship entity)
		{
			this.SendPropertyChanging();
			entity.CRM_RelationCode = this;
		}
		
		private void detach_CRM_PersonRelationships(CRM_PersonRelationship entity)
		{
			this.SendPropertyChanging();
			entity.CRM_RelationCode = null;
		}
		
		private void attach_CRM_PersonRelationships1(CRM_PersonRelationship entity)
		{
			this.SendPropertyChanging();
			entity.CRM_RelationCode1 = this;
		}
		
		private void detach_CRM_PersonRelationships1(CRM_PersonRelationship entity)
		{
			this.SendPropertyChanging();
			entity.CRM_RelationCode1 = null;
		}
		
		private void Initialize()
		{
			this._CRM_PersonRelationships = new EntitySet<CRM_PersonRelationship>(new Action<CRM_PersonRelationship>(this.attach_CRM_PersonRelationships), new Action<CRM_PersonRelationship>(this.detach_CRM_PersonRelationships));
			this._CRM_PersonRelationships1 = new EntitySet<CRM_PersonRelationship>(new Action<CRM_PersonRelationship>(this.attach_CRM_PersonRelationships1), new Action<CRM_PersonRelationship>(this.detach_CRM_PersonRelationships1));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_PersonRelationship")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_PersonRelationship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_PersonID;
		
		private int _CRM_PersonID2;
		
		private string _Salutation;
		
		private int _CRM_RelationCodeID;
		
		private int _CRM_RelationCodeID2;
		
		private int _CRM_PersonIDAddress;
		
		private bool _IsSpouse;
		
		private string _Reference;
		
		private bool _IsArchived;
		
		private EntityRef<CRM_Person> _CRM_Person;
		
		private EntityRef<CRM_Person> _CRM_Person1;
		
		private EntityRef<CRM_Person> _CRM_Person2;
		
		private EntityRef<CRM_RelationCode> _CRM_RelationCode;
		
		private EntityRef<CRM_RelationCode> _CRM_RelationCode1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_PersonIDChanging(int value);
    partial void OnCRM_PersonIDChanged();
    partial void OnCRM_PersonID2Changing(int value);
    partial void OnCRM_PersonID2Changed();
    partial void OnSalutationChanging(string value);
    partial void OnSalutationChanged();
    partial void OnCRM_RelationCodeIDChanging(int value);
    partial void OnCRM_RelationCodeIDChanged();
    partial void OnCRM_RelationCodeID2Changing(int value);
    partial void OnCRM_RelationCodeID2Changed();
    partial void OnCRM_PersonIDAddressChanging(int value);
    partial void OnCRM_PersonIDAddressChanged();
    partial void OnIsSpouseChanging(bool value);
    partial void OnIsSpouseChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    #endregion
		
		public CRM_PersonRelationship()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_PersonID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_PersonID
		{
			get
			{
				return this._CRM_PersonID;
			}
			set
			{
				if ((this._CRM_PersonID != value))
				{
					if (this._CRM_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_PersonIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_PersonID = value;
					this.SendPropertyChanged("CRM_PersonID");
					this.OnCRM_PersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_PersonID2", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CRM_PersonID2
		{
			get
			{
				return this._CRM_PersonID2;
			}
			set
			{
				if ((this._CRM_PersonID2 != value))
				{
					if (this._CRM_Person1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_PersonID2Changing(value);
					this.SendPropertyChanging();
					this._CRM_PersonID2 = value;
					this.SendPropertyChanged("CRM_PersonID2");
					this.OnCRM_PersonID2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salutation", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Salutation
		{
			get
			{
				return this._Salutation;
			}
			set
			{
				if ((this._Salutation != value))
				{
					this.OnSalutationChanging(value);
					this.SendPropertyChanging();
					this._Salutation = value;
					this.SendPropertyChanged("Salutation");
					this.OnSalutationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_RelationCodeID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int CRM_RelationCodeID
		{
			get
			{
				return this._CRM_RelationCodeID;
			}
			set
			{
				if ((this._CRM_RelationCodeID != value))
				{
					if (this._CRM_RelationCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_RelationCodeIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_RelationCodeID = value;
					this.SendPropertyChanged("CRM_RelationCodeID");
					this.OnCRM_RelationCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_RelationCodeID2", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int CRM_RelationCodeID2
		{
			get
			{
				return this._CRM_RelationCodeID2;
			}
			set
			{
				if ((this._CRM_RelationCodeID2 != value))
				{
					if (this._CRM_RelationCode1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_RelationCodeID2Changing(value);
					this.SendPropertyChanging();
					this._CRM_RelationCodeID2 = value;
					this.SendPropertyChanged("CRM_RelationCodeID2");
					this.OnCRM_RelationCodeID2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_PersonIDAddress", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int CRM_PersonIDAddress
		{
			get
			{
				return this._CRM_PersonIDAddress;
			}
			set
			{
				if ((this._CRM_PersonIDAddress != value))
				{
					if (this._CRM_Person2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_PersonIDAddressChanging(value);
					this.SendPropertyChanging();
					this._CRM_PersonIDAddress = value;
					this.SendPropertyChanged("CRM_PersonIDAddress");
					this.OnCRM_PersonIDAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSpouse", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool IsSpouse
		{
			get
			{
				return this._IsSpouse;
			}
			set
			{
				if ((this._IsSpouse != value))
				{
					this.OnIsSpouseChanging(value);
					this.SendPropertyChanging();
					this._IsSpouse = value;
					this.SendPropertyChanged("IsSpouse");
					this.OnIsSpouseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(11)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Person_CRM_PersonRelationship", Storage="_CRM_Person", ThisKey="CRM_PersonID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Person CRM_Person
		{
			get
			{
				return this._CRM_Person.Entity;
			}
			set
			{
				CRM_Person previousValue = this._CRM_Person.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Person.Entity = null;
						previousValue.CRM_PersonRelationships.Remove(this);
					}
					this._CRM_Person.Entity = value;
					if ((value != null))
					{
						value.CRM_PersonRelationships.Add(this);
						this._CRM_PersonID = value.ID;
					}
					else
					{
						this._CRM_PersonID = default(int);
					}
					this.SendPropertyChanged("CRM_Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Person_CRM_PersonRelationship1", Storage="_CRM_Person1", ThisKey="CRM_PersonID2", OtherKey="ID", IsForeignKey=true)]
		public CRM_Person CRM_Person1
		{
			get
			{
				return this._CRM_Person1.Entity;
			}
			set
			{
				CRM_Person previousValue = this._CRM_Person1.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Person1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Person1.Entity = null;
						previousValue.CRM_PersonRelationships1.Remove(this);
					}
					this._CRM_Person1.Entity = value;
					if ((value != null))
					{
						value.CRM_PersonRelationships1.Add(this);
						this._CRM_PersonID2 = value.ID;
					}
					else
					{
						this._CRM_PersonID2 = default(int);
					}
					this.SendPropertyChanged("CRM_Person1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Person_CRM_PersonRelationship2", Storage="_CRM_Person2", ThisKey="CRM_PersonIDAddress", OtherKey="ID", IsForeignKey=true)]
		public CRM_Person CRM_Person2
		{
			get
			{
				return this._CRM_Person2.Entity;
			}
			set
			{
				CRM_Person previousValue = this._CRM_Person2.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Person2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Person2.Entity = null;
						previousValue.CRM_PersonRelationships2.Remove(this);
					}
					this._CRM_Person2.Entity = value;
					if ((value != null))
					{
						value.CRM_PersonRelationships2.Add(this);
						this._CRM_PersonIDAddress = value.ID;
					}
					else
					{
						this._CRM_PersonIDAddress = default(int);
					}
					this.SendPropertyChanged("CRM_Person2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_RelationCode_CRM_PersonRelationship", Storage="_CRM_RelationCode", ThisKey="CRM_RelationCodeID", OtherKey="ID", IsForeignKey=true)]
		public CRM_RelationCode CRM_RelationCode
		{
			get
			{
				return this._CRM_RelationCode.Entity;
			}
			set
			{
				CRM_RelationCode previousValue = this._CRM_RelationCode.Entity;
				if (((previousValue != value) 
							|| (this._CRM_RelationCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_RelationCode.Entity = null;
						previousValue.CRM_PersonRelationships.Remove(this);
					}
					this._CRM_RelationCode.Entity = value;
					if ((value != null))
					{
						value.CRM_PersonRelationships.Add(this);
						this._CRM_RelationCodeID = value.ID;
					}
					else
					{
						this._CRM_RelationCodeID = default(int);
					}
					this.SendPropertyChanged("CRM_RelationCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_RelationCode_CRM_PersonRelationship1", Storage="_CRM_RelationCode1", ThisKey="CRM_RelationCodeID2", OtherKey="ID", IsForeignKey=true)]
		public CRM_RelationCode CRM_RelationCode1
		{
			get
			{
				return this._CRM_RelationCode1.Entity;
			}
			set
			{
				CRM_RelationCode previousValue = this._CRM_RelationCode1.Entity;
				if (((previousValue != value) 
							|| (this._CRM_RelationCode1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_RelationCode1.Entity = null;
						previousValue.CRM_PersonRelationships1.Remove(this);
					}
					this._CRM_RelationCode1.Entity = value;
					if ((value != null))
					{
						value.CRM_PersonRelationships1.Add(this);
						this._CRM_RelationCodeID2 = value.ID;
					}
					else
					{
						this._CRM_RelationCodeID2 = default(int);
					}
					this.SendPropertyChanged("CRM_RelationCode1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CRM_Person = default(EntityRef<CRM_Person>);
			this._CRM_Person1 = default(EntityRef<CRM_Person>);
			this._CRM_Person2 = default(EntityRef<CRM_Person>);
			this._CRM_RelationCode = default(EntityRef<CRM_RelationCode>);
			this._CRM_RelationCode1 = default(EntityRef<CRM_RelationCode>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoldingPen")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class HoldingPen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _Firstname;
		
		private string _Lastname;
		
		private string _Email;
		
		private System.DateTime _DateReceived;
		
		private System.Nullable<System.DateTime> _DateCommitted;
		
		private byte _OriginType;
		
		private string _OriginDescription;
		
		private int _OriginAccountID;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _City;
		
		private string _County;
		
		private string _Postcode;
		
		private int _CountryID;
		
		private string _Telephone;
		
		private string _InterestObjects;
		
		private bool _DoNotMail;
		
		private bool _DoNotEmail;
		
		private bool _AlwaysSendPassInfo;
		
		private string _MembershipA;
		
		private string _MembershipB;
		
		private string _BasketContents;
		
		private System.Nullable<int> _JointHoldingPenID;
		
		private string _JointSalutation;
		
		private System.Nullable<int> _JointAtoBID;
		
		private System.Nullable<int> _JointBtoAID;
		
		private System.Nullable<char> _JointThisReferenceAB;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnFirstnameChanging(string value);
    partial void OnFirstnameChanged();
    partial void OnLastnameChanging(string value);
    partial void OnLastnameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDateReceivedChanging(System.DateTime value);
    partial void OnDateReceivedChanged();
    partial void OnDateCommittedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCommittedChanged();
    partial void OnOriginTypeChanging(byte value);
    partial void OnOriginTypeChanged();
    partial void OnOriginDescriptionChanging(string value);
    partial void OnOriginDescriptionChanged();
    partial void OnOriginAccountIDChanging(int value);
    partial void OnOriginAccountIDChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnCountyChanging(string value);
    partial void OnCountyChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnInterestObjectsChanging(string value);
    partial void OnInterestObjectsChanged();
    partial void OnDoNotMailChanging(bool value);
    partial void OnDoNotMailChanged();
    partial void OnDoNotEmailChanging(bool value);
    partial void OnDoNotEmailChanged();
    partial void OnAlwaysSendPassInfoChanging(bool value);
    partial void OnAlwaysSendPassInfoChanged();
    partial void OnMembershipAChanging(string value);
    partial void OnMembershipAChanged();
    partial void OnMembershipBChanging(string value);
    partial void OnMembershipBChanged();
    partial void OnBasketContentsChanging(string value);
    partial void OnBasketContentsChanged();
    partial void OnJointHoldingPenIDChanging(System.Nullable<int> value);
    partial void OnJointHoldingPenIDChanged();
    partial void OnJointSalutationChanging(string value);
    partial void OnJointSalutationChanged();
    partial void OnJointAtoBIDChanging(System.Nullable<int> value);
    partial void OnJointAtoBIDChanged();
    partial void OnJointBtoAIDChanging(System.Nullable<int> value);
    partial void OnJointBtoAIDChanged();
    partial void OnJointThisReferenceABChanging(System.Nullable<char> value);
    partial void OnJointThisReferenceABChanged();
    #endregion
		
		public HoldingPen()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this.OnFirstnameChanging(value);
					this.SendPropertyChanging();
					this._Firstname = value;
					this.SendPropertyChanged("Firstname");
					this.OnFirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this.OnLastnameChanging(value);
					this.SendPropertyChanging();
					this._Lastname = value;
					this.SendPropertyChanged("Lastname");
					this.OnLastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateReceived", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime DateReceived
		{
			get
			{
				return this._DateReceived;
			}
			set
			{
				if ((this._DateReceived != value))
				{
					this.OnDateReceivedChanging(value);
					this.SendPropertyChanging();
					this._DateReceived = value;
					this.SendPropertyChanged("DateReceived");
					this.OnDateReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCommitted", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> DateCommitted
		{
			get
			{
				return this._DateCommitted;
			}
			set
			{
				if ((this._DateCommitted != value))
				{
					this.OnDateCommittedChanging(value);
					this.SendPropertyChanging();
					this._DateCommitted = value;
					this.SendPropertyChanged("DateCommitted");
					this.OnDateCommittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginType", DbType="TinyInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public byte OriginType
		{
			get
			{
				return this._OriginType;
			}
			set
			{
				if ((this._OriginType != value))
				{
					this.OnOriginTypeChanging(value);
					this.SendPropertyChanging();
					this._OriginType = value;
					this.SendPropertyChanged("OriginType");
					this.OnOriginTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginDescription", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string OriginDescription
		{
			get
			{
				return this._OriginDescription;
			}
			set
			{
				if ((this._OriginDescription != value))
				{
					this.OnOriginDescriptionChanging(value);
					this.SendPropertyChanging();
					this._OriginDescription = value;
					this.SendPropertyChanged("OriginDescription");
					this.OnOriginDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginAccountID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public int OriginAccountID
		{
			get
			{
				return this._OriginAccountID;
			}
			set
			{
				if ((this._OriginAccountID != value))
				{
					this.OnOriginAccountIDChanging(value);
					this.SendPropertyChanging();
					this._OriginAccountID = value;
					this.SendPropertyChanged("OriginAccountID");
					this.OnOriginAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address3", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this.OnAddress3Changing(value);
					this.SendPropertyChanging();
					this._Address3 = value;
					this.SendPropertyChanged("Address3");
					this.OnAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_County", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string County
		{
			get
			{
				return this._County;
			}
			set
			{
				if ((this._County != value))
				{
					this.OnCountyChanging(value);
					this.SendPropertyChanging();
					this._County = value;
					this.SendPropertyChanged("County");
					this.OnCountyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestObjects", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public string InterestObjects
		{
			get
			{
				return this._InterestObjects;
			}
			set
			{
				if ((this._InterestObjects != value))
				{
					this.OnInterestObjectsChanging(value);
					this.SendPropertyChanging();
					this._InterestObjects = value;
					this.SendPropertyChanged("InterestObjects");
					this.OnInterestObjectsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoNotMail", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public bool DoNotMail
		{
			get
			{
				return this._DoNotMail;
			}
			set
			{
				if ((this._DoNotMail != value))
				{
					this.OnDoNotMailChanging(value);
					this.SendPropertyChanging();
					this._DoNotMail = value;
					this.SendPropertyChanged("DoNotMail");
					this.OnDoNotMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoNotEmail", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public bool DoNotEmail
		{
			get
			{
				return this._DoNotEmail;
			}
			set
			{
				if ((this._DoNotEmail != value))
				{
					this.OnDoNotEmailChanging(value);
					this.SendPropertyChanging();
					this._DoNotEmail = value;
					this.SendPropertyChanged("DoNotEmail");
					this.OnDoNotEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlwaysSendPassInfo", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public bool AlwaysSendPassInfo
		{
			get
			{
				return this._AlwaysSendPassInfo;
			}
			set
			{
				if ((this._AlwaysSendPassInfo != value))
				{
					this.OnAlwaysSendPassInfoChanging(value);
					this.SendPropertyChanging();
					this._AlwaysSendPassInfo = value;
					this.SendPropertyChanged("AlwaysSendPassInfo");
					this.OnAlwaysSendPassInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MembershipA", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public string MembershipA
		{
			get
			{
				return this._MembershipA;
			}
			set
			{
				if ((this._MembershipA != value))
				{
					this.OnMembershipAChanging(value);
					this.SendPropertyChanging();
					this._MembershipA = value;
					this.SendPropertyChanged("MembershipA");
					this.OnMembershipAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MembershipB", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public string MembershipB
		{
			get
			{
				return this._MembershipB;
			}
			set
			{
				if ((this._MembershipB != value))
				{
					this.OnMembershipBChanging(value);
					this.SendPropertyChanging();
					this._MembershipB = value;
					this.SendPropertyChanged("MembershipB");
					this.OnMembershipBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasketContents", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public string BasketContents
		{
			get
			{
				return this._BasketContents;
			}
			set
			{
				if ((this._BasketContents != value))
				{
					this.OnBasketContentsChanging(value);
					this.SendPropertyChanging();
					this._BasketContents = value;
					this.SendPropertyChanged("BasketContents");
					this.OnBasketContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointHoldingPenID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public System.Nullable<int> JointHoldingPenID
		{
			get
			{
				return this._JointHoldingPenID;
			}
			set
			{
				if ((this._JointHoldingPenID != value))
				{
					this.OnJointHoldingPenIDChanging(value);
					this.SendPropertyChanging();
					this._JointHoldingPenID = value;
					this.SendPropertyChanged("JointHoldingPenID");
					this.OnJointHoldingPenIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointSalutation", DbType="VarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public string JointSalutation
		{
			get
			{
				return this._JointSalutation;
			}
			set
			{
				if ((this._JointSalutation != value))
				{
					this.OnJointSalutationChanging(value);
					this.SendPropertyChanging();
					this._JointSalutation = value;
					this.SendPropertyChanged("JointSalutation");
					this.OnJointSalutationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointAtoBID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public System.Nullable<int> JointAtoBID
		{
			get
			{
				return this._JointAtoBID;
			}
			set
			{
				if ((this._JointAtoBID != value))
				{
					this.OnJointAtoBIDChanging(value);
					this.SendPropertyChanging();
					this._JointAtoBID = value;
					this.SendPropertyChanged("JointAtoBID");
					this.OnJointAtoBIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointBtoAID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public System.Nullable<int> JointBtoAID
		{
			get
			{
				return this._JointBtoAID;
			}
			set
			{
				if ((this._JointBtoAID != value))
				{
					this.OnJointBtoAIDChanging(value);
					this.SendPropertyChanging();
					this._JointBtoAID = value;
					this.SendPropertyChanged("JointBtoAID");
					this.OnJointBtoAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointThisReferenceAB", DbType="Char(1)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30)]
		public System.Nullable<char> JointThisReferenceAB
		{
			get
			{
				return this._JointThisReferenceAB;
			}
			set
			{
				if ((this._JointThisReferenceAB != value))
				{
					this.OnJointThisReferenceABChanging(value);
					this.SendPropertyChanging();
					this._JointThisReferenceAB = value;
					this.SendPropertyChanged("JointThisReferenceAB");
					this.OnJointThisReferenceABChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Fundraising")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_Fundraising : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _PrimaryContactReference;
		
		private string _ContactName;
		
		private string _ContactType;
		
		private bool _IsInKind;
		
		private decimal _PledgedAmount;
		
		private bool _IsGiftAid;
		
		private string _GiftAidFirstname;
		
		private string _GiftAidLastname;
		
		private int _GiftAidAddressID;
		
		private bool _IsRecurring;
		
		private int _RecurringEveryWeeks;
		
		private int _Duration;
		
		private int _CRM_PaymentTypeID;
		
		private int _CRM_FundraisingReasonID;
		
		private bool _IsArchived;
		
		private string _Reference;
		
		private System.Nullable<System.DateTime> _GiftClaimed;
		
		private EntitySet<CRM_FundraisingSplit> _CRM_FundraisingSplits;
		
		private EntitySet<CRM_GiftAidLogItem> _CRM_GiftAidLogItems;
		
		private EntityRef<CRM_Address> _CRM_Address;
		
		private EntityRef<CRM_FundraisingReason> _CRM_FundraisingReason;
		
		private EntityRef<CRM_PaymentType> _CRM_PaymentType;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPrimaryContactReferenceChanging(string value);
    partial void OnPrimaryContactReferenceChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnContactTypeChanging(string value);
    partial void OnContactTypeChanged();
    partial void OnIsInKindChanging(bool value);
    partial void OnIsInKindChanged();
    partial void OnPledgedAmountChanging(decimal value);
    partial void OnPledgedAmountChanged();
    partial void OnIsGiftAidChanging(bool value);
    partial void OnIsGiftAidChanged();
    partial void OnGiftAidFirstnameChanging(string value);
    partial void OnGiftAidFirstnameChanged();
    partial void OnGiftAidLastnameChanging(string value);
    partial void OnGiftAidLastnameChanged();
    partial void OnGiftAidAddressIDChanging(int value);
    partial void OnGiftAidAddressIDChanged();
    partial void OnIsRecurringChanging(bool value);
    partial void OnIsRecurringChanged();
    partial void OnRecurringEveryWeeksChanging(int value);
    partial void OnRecurringEveryWeeksChanged();
    partial void OnDurationChanging(int value);
    partial void OnDurationChanged();
    partial void OnCRM_PaymentTypeIDChanging(int value);
    partial void OnCRM_PaymentTypeIDChanged();
    partial void OnCRM_FundraisingReasonIDChanging(int value);
    partial void OnCRM_FundraisingReasonIDChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnGiftClaimedChanging(System.Nullable<System.DateTime> value);
    partial void OnGiftClaimedChanged();
    #endregion
		
		public CRM_Fundraising()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryContactReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string PrimaryContactReference
		{
			get
			{
				return this._PrimaryContactReference;
			}
			set
			{
				if ((this._PrimaryContactReference != value))
				{
					this.OnPrimaryContactReferenceChanging(value);
					this.SendPropertyChanging();
					this._PrimaryContactReference = value;
					this.SendPropertyChanged("PrimaryContactReference");
					this.OnPrimaryContactReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactType", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ContactType
		{
			get
			{
				return this._ContactType;
			}
			set
			{
				if ((this._ContactType != value))
				{
					this.OnContactTypeChanging(value);
					this.SendPropertyChanging();
					this._ContactType = value;
					this.SendPropertyChanged("ContactType");
					this.OnContactTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInKind", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsInKind
		{
			get
			{
				return this._IsInKind;
			}
			set
			{
				if ((this._IsInKind != value))
				{
					this.OnIsInKindChanging(value);
					this.SendPropertyChanging();
					this._IsInKind = value;
					this.SendPropertyChanged("IsInKind");
					this.OnIsInKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PledgedAmount", DbType="Money NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public decimal PledgedAmount
		{
			get
			{
				return this._PledgedAmount;
			}
			set
			{
				if ((this._PledgedAmount != value))
				{
					this.OnPledgedAmountChanging(value);
					this.SendPropertyChanging();
					this._PledgedAmount = value;
					this.SendPropertyChanged("PledgedAmount");
					this.OnPledgedAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGiftAid", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool IsGiftAid
		{
			get
			{
				return this._IsGiftAid;
			}
			set
			{
				if ((this._IsGiftAid != value))
				{
					this.OnIsGiftAidChanging(value);
					this.SendPropertyChanging();
					this._IsGiftAid = value;
					this.SendPropertyChanged("IsGiftAid");
					this.OnIsGiftAidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiftAidFirstname", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string GiftAidFirstname
		{
			get
			{
				return this._GiftAidFirstname;
			}
			set
			{
				if ((this._GiftAidFirstname != value))
				{
					this.OnGiftAidFirstnameChanging(value);
					this.SendPropertyChanging();
					this._GiftAidFirstname = value;
					this.SendPropertyChanged("GiftAidFirstname");
					this.OnGiftAidFirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiftAidLastname", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string GiftAidLastname
		{
			get
			{
				return this._GiftAidLastname;
			}
			set
			{
				if ((this._GiftAidLastname != value))
				{
					this.OnGiftAidLastnameChanging(value);
					this.SendPropertyChanging();
					this._GiftAidLastname = value;
					this.SendPropertyChanged("GiftAidLastname");
					this.OnGiftAidLastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiftAidAddressID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public int GiftAidAddressID
		{
			get
			{
				return this._GiftAidAddressID;
			}
			set
			{
				if ((this._GiftAidAddressID != value))
				{
					if (this._CRM_Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGiftAidAddressIDChanging(value);
					this.SendPropertyChanging();
					this._GiftAidAddressID = value;
					this.SendPropertyChanged("GiftAidAddressID");
					this.OnGiftAidAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRecurring", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool IsRecurring
		{
			get
			{
				return this._IsRecurring;
			}
			set
			{
				if ((this._IsRecurring != value))
				{
					this.OnIsRecurringChanging(value);
					this.SendPropertyChanging();
					this._IsRecurring = value;
					this.SendPropertyChanged("IsRecurring");
					this.OnIsRecurringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurringEveryWeeks", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public int RecurringEveryWeeks
		{
			get
			{
				return this._RecurringEveryWeeks;
			}
			set
			{
				if ((this._RecurringEveryWeeks != value))
				{
					this.OnRecurringEveryWeeksChanging(value);
					this.SendPropertyChanging();
					this._RecurringEveryWeeks = value;
					this.SendPropertyChanged("RecurringEveryWeeks");
					this.OnRecurringEveryWeeksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public int Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_PaymentTypeID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public int CRM_PaymentTypeID
		{
			get
			{
				return this._CRM_PaymentTypeID;
			}
			set
			{
				if ((this._CRM_PaymentTypeID != value))
				{
					if (this._CRM_PaymentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_PaymentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_PaymentTypeID = value;
					this.SendPropertyChanged("CRM_PaymentTypeID");
					this.OnCRM_PaymentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_FundraisingReasonID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public int CRM_FundraisingReasonID
		{
			get
			{
				return this._CRM_FundraisingReasonID;
			}
			set
			{
				if ((this._CRM_FundraisingReasonID != value))
				{
					if (this._CRM_FundraisingReason.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_FundraisingReasonIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_FundraisingReasonID = value;
					this.SendPropertyChanged("CRM_FundraisingReasonID");
					this.OnCRM_FundraisingReasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", AutoSync=AutoSync.Always, DbType="VarChar(22)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiftClaimed", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<System.DateTime> GiftClaimed
		{
			get
			{
				return this._GiftClaimed;
			}
			set
			{
				if ((this._GiftClaimed != value))
				{
					this.OnGiftClaimedChanging(value);
					this.SendPropertyChanging();
					this._GiftClaimed = value;
					this.SendPropertyChanged("GiftClaimed");
					this.OnGiftClaimedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Fundraising_CRM_FundraisingSplit", Storage="_CRM_FundraisingSplits", ThisKey="ID", OtherKey="CRM_FundRaisingID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<CRM_FundraisingSplit> CRM_FundraisingSplits
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_FundraisingSplits.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_FundraisingSplits;
			}
			set
			{
				this._CRM_FundraisingSplits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Fundraising_CRM_GiftAidLogItem", Storage="_CRM_GiftAidLogItems", ThisKey="ID", OtherKey="CRM_FundraisingID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<CRM_GiftAidLogItem> CRM_GiftAidLogItems
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_GiftAidLogItems.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_GiftAidLogItems;
			}
			set
			{
				this._CRM_GiftAidLogItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Address_CRM_Fundraising", Storage="_CRM_Address", ThisKey="GiftAidAddressID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Address CRM_Address
		{
			get
			{
				return this._CRM_Address.Entity;
			}
			set
			{
				CRM_Address previousValue = this._CRM_Address.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Address.Entity = null;
						previousValue.CRM_Fundraisings.Remove(this);
					}
					this._CRM_Address.Entity = value;
					if ((value != null))
					{
						value.CRM_Fundraisings.Add(this);
						this._GiftAidAddressID = value.ID;
					}
					else
					{
						this._GiftAidAddressID = default(int);
					}
					this.SendPropertyChanged("CRM_Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_FundraisingReason_CRM_Fundraising", Storage="_CRM_FundraisingReason", ThisKey="CRM_FundraisingReasonID", OtherKey="ID", IsForeignKey=true)]
		public CRM_FundraisingReason CRM_FundraisingReason
		{
			get
			{
				return this._CRM_FundraisingReason.Entity;
			}
			set
			{
				CRM_FundraisingReason previousValue = this._CRM_FundraisingReason.Entity;
				if (((previousValue != value) 
							|| (this._CRM_FundraisingReason.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_FundraisingReason.Entity = null;
						previousValue.CRM_Fundraisings.Remove(this);
					}
					this._CRM_FundraisingReason.Entity = value;
					if ((value != null))
					{
						value.CRM_Fundraisings.Add(this);
						this._CRM_FundraisingReasonID = value.ID;
					}
					else
					{
						this._CRM_FundraisingReasonID = default(int);
					}
					this.SendPropertyChanged("CRM_FundraisingReason");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_PaymentType_CRM_Fundraising", Storage="_CRM_PaymentType", ThisKey="CRM_PaymentTypeID", OtherKey="ID", IsForeignKey=true)]
		public CRM_PaymentType CRM_PaymentType
		{
			get
			{
				return this._CRM_PaymentType.Entity;
			}
			set
			{
				CRM_PaymentType previousValue = this._CRM_PaymentType.Entity;
				if (((previousValue != value) 
							|| (this._CRM_PaymentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_PaymentType.Entity = null;
						previousValue.CRM_Fundraisings.Remove(this);
					}
					this._CRM_PaymentType.Entity = value;
					if ((value != null))
					{
						value.CRM_Fundraisings.Add(this);
						this._CRM_PaymentTypeID = value.ID;
					}
					else
					{
						this._CRM_PaymentTypeID = default(int);
					}
					this.SendPropertyChanged("CRM_PaymentType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_FundraisingSplits(CRM_FundraisingSplit entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Fundraising = this;
		}
		
		private void detach_CRM_FundraisingSplits(CRM_FundraisingSplit entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Fundraising = null;
		}
		
		private void attach_CRM_GiftAidLogItems(CRM_GiftAidLogItem entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Fundraising = this;
		}
		
		private void detach_CRM_GiftAidLogItems(CRM_GiftAidLogItem entity)
		{
			this.SendPropertyChanging();
			entity.CRM_Fundraising = null;
		}
		
		private void Initialize()
		{
			this._CRM_FundraisingSplits = new EntitySet<CRM_FundraisingSplit>(new Action<CRM_FundraisingSplit>(this.attach_CRM_FundraisingSplits), new Action<CRM_FundraisingSplit>(this.detach_CRM_FundraisingSplits));
			this._CRM_GiftAidLogItems = new EntitySet<CRM_GiftAidLogItem>(new Action<CRM_GiftAidLogItem>(this.attach_CRM_GiftAidLogItems), new Action<CRM_GiftAidLogItem>(this.detach_CRM_GiftAidLogItems));
			this._CRM_Address = default(EntityRef<CRM_Address>);
			this._CRM_FundraisingReason = default(EntityRef<CRM_FundraisingReason>);
			this._CRM_PaymentType = default(EntityRef<CRM_PaymentType>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_GiftAidLog")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_GiftAidLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.DateTime _Timestamp;
		
		private System.Data.Linq.Binary _DataStore;
		
		private System.Data.Linq.Binary _FileStore;
		
		private string _IncomingFileType;
		
		private int _AdminID;
		
		private EntitySet<CRM_GiftAidLogItem> _CRM_GiftAidLogItems;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    partial void OnDataStoreChanging(System.Data.Linq.Binary value);
    partial void OnDataStoreChanged();
    partial void OnFileStoreChanging(System.Data.Linq.Binary value);
    partial void OnFileStoreChanged();
    partial void OnIncomingFileTypeChanging(string value);
    partial void OnIncomingFileTypeChanged();
    partial void OnAdminIDChanging(int value);
    partial void OnAdminIDChanged();
    #endregion
		
		public CRM_GiftAidLog()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataStore", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Data.Linq.Binary DataStore
		{
			get
			{
				return this._DataStore;
			}
			set
			{
				if ((this._DataStore != value))
				{
					this.OnDataStoreChanging(value);
					this.SendPropertyChanging();
					this._DataStore = value;
					this.SendPropertyChanged("DataStore");
					this.OnDataStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileStore", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Data.Linq.Binary FileStore
		{
			get
			{
				return this._FileStore;
			}
			set
			{
				if ((this._FileStore != value))
				{
					this.OnFileStoreChanging(value);
					this.SendPropertyChanging();
					this._FileStore = value;
					this.SendPropertyChanged("FileStore");
					this.OnFileStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncomingFileType", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string IncomingFileType
		{
			get
			{
				return this._IncomingFileType;
			}
			set
			{
				if ((this._IncomingFileType != value))
				{
					this.OnIncomingFileTypeChanging(value);
					this.SendPropertyChanging();
					this._IncomingFileType = value;
					this.SendPropertyChanged("IncomingFileType");
					this.OnIncomingFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_GiftAidLog_CRM_GiftAidLogItem", Storage="_CRM_GiftAidLogItems", ThisKey="ID", OtherKey="CRM_GiftAidLogID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<CRM_GiftAidLogItem> CRM_GiftAidLogItems
		{
			get
			{
				if ((this.serializing 
							&& (this._CRM_GiftAidLogItems.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRM_GiftAidLogItems;
			}
			set
			{
				this._CRM_GiftAidLogItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_GiftAidLogItems(CRM_GiftAidLogItem entity)
		{
			this.SendPropertyChanging();
			entity.CRM_GiftAidLog = this;
		}
		
		private void detach_CRM_GiftAidLogItems(CRM_GiftAidLogItem entity)
		{
			this.SendPropertyChanging();
			entity.CRM_GiftAidLog = null;
		}
		
		private void Initialize()
		{
			this._CRM_GiftAidLogItems = new EntitySet<CRM_GiftAidLogItem>(new Action<CRM_GiftAidLogItem>(this.attach_CRM_GiftAidLogItems), new Action<CRM_GiftAidLogItem>(this.detach_CRM_GiftAidLogItems));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_GiftAidLogItem")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_GiftAidLogItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CRM_GiftAidLogID;
		
		private int _CRM_FundraisingID;
		
		private EntityRef<CRM_Fundraising> _CRM_Fundraising;
		
		private EntityRef<CRM_GiftAidLog> _CRM_GiftAidLog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCRM_GiftAidLogIDChanging(int value);
    partial void OnCRM_GiftAidLogIDChanged();
    partial void OnCRM_FundraisingIDChanging(int value);
    partial void OnCRM_FundraisingIDChanged();
    #endregion
		
		public CRM_GiftAidLogItem()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_GiftAidLogID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CRM_GiftAidLogID
		{
			get
			{
				return this._CRM_GiftAidLogID;
			}
			set
			{
				if ((this._CRM_GiftAidLogID != value))
				{
					if (this._CRM_GiftAidLog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_GiftAidLogIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_GiftAidLogID = value;
					this.SendPropertyChanged("CRM_GiftAidLogID");
					this.OnCRM_GiftAidLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_FundraisingID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CRM_FundraisingID
		{
			get
			{
				return this._CRM_FundraisingID;
			}
			set
			{
				if ((this._CRM_FundraisingID != value))
				{
					if (this._CRM_Fundraising.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_FundraisingIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_FundraisingID = value;
					this.SendPropertyChanged("CRM_FundraisingID");
					this.OnCRM_FundraisingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Fundraising_CRM_GiftAidLogItem", Storage="_CRM_Fundraising", ThisKey="CRM_FundraisingID", OtherKey="ID", IsForeignKey=true)]
		public CRM_Fundraising CRM_Fundraising
		{
			get
			{
				return this._CRM_Fundraising.Entity;
			}
			set
			{
				CRM_Fundraising previousValue = this._CRM_Fundraising.Entity;
				if (((previousValue != value) 
							|| (this._CRM_Fundraising.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_Fundraising.Entity = null;
						previousValue.CRM_GiftAidLogItems.Remove(this);
					}
					this._CRM_Fundraising.Entity = value;
					if ((value != null))
					{
						value.CRM_GiftAidLogItems.Add(this);
						this._CRM_FundraisingID = value.ID;
					}
					else
					{
						this._CRM_FundraisingID = default(int);
					}
					this.SendPropertyChanged("CRM_Fundraising");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_GiftAidLog_CRM_GiftAidLogItem", Storage="_CRM_GiftAidLog", ThisKey="CRM_GiftAidLogID", OtherKey="ID", IsForeignKey=true)]
		public CRM_GiftAidLog CRM_GiftAidLog
		{
			get
			{
				return this._CRM_GiftAidLog.Entity;
			}
			set
			{
				CRM_GiftAidLog previousValue = this._CRM_GiftAidLog.Entity;
				if (((previousValue != value) 
							|| (this._CRM_GiftAidLog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_GiftAidLog.Entity = null;
						previousValue.CRM_GiftAidLogItems.Remove(this);
					}
					this._CRM_GiftAidLog.Entity = value;
					if ((value != null))
					{
						value.CRM_GiftAidLogItems.Add(this);
						this._CRM_GiftAidLogID = value.ID;
					}
					else
					{
						this._CRM_GiftAidLogID = default(int);
					}
					this.SendPropertyChanged("CRM_GiftAidLog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CRM_Fundraising = default(EntityRef<CRM_Fundraising>);
			this._CRM_GiftAidLog = default(EntityRef<CRM_GiftAidLog>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_FormFieldResponse")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRM_FormFieldResponse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TargetReference;
		
		private string _Answer;
		
		private System.Nullable<int> _CRM_FormFieldItemID;
		
		private int _CRM_FormFieldID;
		
		private EntityRef<CRM_FormField> _CRM_FormField;
		
		private EntityRef<CRM_FormFieldItem> _CRM_FormFieldItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTargetReferenceChanging(string value);
    partial void OnTargetReferenceChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    partial void OnCRM_FormFieldItemIDChanging(System.Nullable<int> value);
    partial void OnCRM_FormFieldItemIDChanged();
    partial void OnCRM_FormFieldIDChanging(int value);
    partial void OnCRM_FormFieldIDChanged();
    #endregion
		
		public CRM_FormFieldResponse()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string TargetReference
		{
			get
			{
				return this._TargetReference;
			}
			set
			{
				if ((this._TargetReference != value))
				{
					this.OnTargetReferenceChanging(value);
					this.SendPropertyChanging();
					this._TargetReference = value;
					this.SendPropertyChanged("TargetReference");
					this.OnTargetReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_FormFieldItemID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> CRM_FormFieldItemID
		{
			get
			{
				return this._CRM_FormFieldItemID;
			}
			set
			{
				if ((this._CRM_FormFieldItemID != value))
				{
					if (this._CRM_FormFieldItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_FormFieldItemIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_FormFieldItemID = value;
					this.SendPropertyChanged("CRM_FormFieldItemID");
					this.OnCRM_FormFieldItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRM_FormFieldID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int CRM_FormFieldID
		{
			get
			{
				return this._CRM_FormFieldID;
			}
			set
			{
				if ((this._CRM_FormFieldID != value))
				{
					if (this._CRM_FormField.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRM_FormFieldIDChanging(value);
					this.SendPropertyChanging();
					this._CRM_FormFieldID = value;
					this.SendPropertyChanged("CRM_FormFieldID");
					this.OnCRM_FormFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_FormField_CRM_FormFieldResponse", Storage="_CRM_FormField", ThisKey="CRM_FormFieldID", OtherKey="ID", IsForeignKey=true)]
		public CRM_FormField CRM_FormField
		{
			get
			{
				return this._CRM_FormField.Entity;
			}
			set
			{
				CRM_FormField previousValue = this._CRM_FormField.Entity;
				if (((previousValue != value) 
							|| (this._CRM_FormField.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_FormField.Entity = null;
						previousValue.CRM_FormFieldResponses.Remove(this);
					}
					this._CRM_FormField.Entity = value;
					if ((value != null))
					{
						value.CRM_FormFieldResponses.Add(this);
						this._CRM_FormFieldID = value.ID;
					}
					else
					{
						this._CRM_FormFieldID = default(int);
					}
					this.SendPropertyChanged("CRM_FormField");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_FormFieldItem_CRM_FormFieldResponse", Storage="_CRM_FormFieldItem", ThisKey="CRM_FormFieldItemID", OtherKey="ID", IsForeignKey=true)]
		public CRM_FormFieldItem CRM_FormFieldItem
		{
			get
			{
				return this._CRM_FormFieldItem.Entity;
			}
			set
			{
				CRM_FormFieldItem previousValue = this._CRM_FormFieldItem.Entity;
				if (((previousValue != value) 
							|| (this._CRM_FormFieldItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRM_FormFieldItem.Entity = null;
						previousValue.CRM_FormFieldResponses.Remove(this);
					}
					this._CRM_FormFieldItem.Entity = value;
					if ((value != null))
					{
						value.CRM_FormFieldResponses.Add(this);
						this._CRM_FormFieldItemID = value.ID;
					}
					else
					{
						this._CRM_FormFieldItemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CRM_FormFieldItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CRM_FormField = default(EntityRef<CRM_FormField>);
			this._CRM_FormFieldItem = default(EntityRef<CRM_FormFieldItem>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
}
#pragma warning restore 1591
